// Code generated by go-swagger; DO NOT EDIT.

package activity_feed_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListActivityFeedReader is a Reader for the ListActivityFeed structure.
type ListActivityFeedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListActivityFeedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListActivityFeedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListActivityFeedBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListActivityFeedUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListActivityFeedForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListActivityFeedNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListActivityFeedConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListActivityFeedInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListActivityFeedOK creates a ListActivityFeedOK with default headers values
func NewListActivityFeedOK() *ListActivityFeedOK {
	return &ListActivityFeedOK{}
}

/*ListActivityFeedOK handles this case with default header values.

OK
*/
type ListActivityFeedOK struct {
	Payload *models.APIResultListActivityFeed
}

func (o *ListActivityFeedOK) Error() string {
	return fmt.Sprintf("[GET /activityFeedEvents][%d] listActivityFeedOK  %+v", 200, o.Payload)
}

func (o *ListActivityFeedOK) GetPayload() *models.APIResultListActivityFeed {
	return o.Payload
}

func (o *ListActivityFeedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListActivityFeed)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListActivityFeedBadRequest creates a ListActivityFeedBadRequest with default headers values
func NewListActivityFeedBadRequest() *ListActivityFeedBadRequest {
	return &ListActivityFeedBadRequest{}
}

/*ListActivityFeedBadRequest handles this case with default header values.

Bad Request
*/
type ListActivityFeedBadRequest struct {
	Payload *models.APIResult
}

func (o *ListActivityFeedBadRequest) Error() string {
	return fmt.Sprintf("[GET /activityFeedEvents][%d] listActivityFeedBadRequest  %+v", 400, o.Payload)
}

func (o *ListActivityFeedBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListActivityFeedBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListActivityFeedUnauthorized creates a ListActivityFeedUnauthorized with default headers values
func NewListActivityFeedUnauthorized() *ListActivityFeedUnauthorized {
	return &ListActivityFeedUnauthorized{}
}

/*ListActivityFeedUnauthorized handles this case with default header values.

Unauthorized
*/
type ListActivityFeedUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListActivityFeedUnauthorized) Error() string {
	return fmt.Sprintf("[GET /activityFeedEvents][%d] listActivityFeedUnauthorized  %+v", 401, o.Payload)
}

func (o *ListActivityFeedUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListActivityFeedUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListActivityFeedForbidden creates a ListActivityFeedForbidden with default headers values
func NewListActivityFeedForbidden() *ListActivityFeedForbidden {
	return &ListActivityFeedForbidden{}
}

/*ListActivityFeedForbidden handles this case with default header values.

Forbidden
*/
type ListActivityFeedForbidden struct {
	Payload *models.APIResult
}

func (o *ListActivityFeedForbidden) Error() string {
	return fmt.Sprintf("[GET /activityFeedEvents][%d] listActivityFeedForbidden  %+v", 403, o.Payload)
}

func (o *ListActivityFeedForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListActivityFeedForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListActivityFeedNotFound creates a ListActivityFeedNotFound with default headers values
func NewListActivityFeedNotFound() *ListActivityFeedNotFound {
	return &ListActivityFeedNotFound{}
}

/*ListActivityFeedNotFound handles this case with default header values.

Not Found
*/
type ListActivityFeedNotFound struct {
	Payload *models.APIResult
}

func (o *ListActivityFeedNotFound) Error() string {
	return fmt.Sprintf("[GET /activityFeedEvents][%d] listActivityFeedNotFound  %+v", 404, o.Payload)
}

func (o *ListActivityFeedNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListActivityFeedNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListActivityFeedConflict creates a ListActivityFeedConflict with default headers values
func NewListActivityFeedConflict() *ListActivityFeedConflict {
	return &ListActivityFeedConflict{}
}

/*ListActivityFeedConflict handles this case with default header values.

Conflict
*/
type ListActivityFeedConflict struct {
	Payload *models.APIResult
}

func (o *ListActivityFeedConflict) Error() string {
	return fmt.Sprintf("[GET /activityFeedEvents][%d] listActivityFeedConflict  %+v", 409, o.Payload)
}

func (o *ListActivityFeedConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListActivityFeedConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListActivityFeedInternalServerError creates a ListActivityFeedInternalServerError with default headers values
func NewListActivityFeedInternalServerError() *ListActivityFeedInternalServerError {
	return &ListActivityFeedInternalServerError{}
}

/*ListActivityFeedInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListActivityFeedInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListActivityFeedInternalServerError) Error() string {
	return fmt.Sprintf("[GET /activityFeedEvents][%d] listActivityFeedInternalServerError  %+v", 500, o.Payload)
}

func (o *ListActivityFeedInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListActivityFeedInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
