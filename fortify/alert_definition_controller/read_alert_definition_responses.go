// Code generated by go-swagger; DO NOT EDIT.

package alert_definition_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ReadAlertDefinitionReader is a Reader for the ReadAlertDefinition structure.
type ReadAlertDefinitionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadAlertDefinitionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadAlertDefinitionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReadAlertDefinitionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReadAlertDefinitionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewReadAlertDefinitionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReadAlertDefinitionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewReadAlertDefinitionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadAlertDefinitionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadAlertDefinitionOK creates a ReadAlertDefinitionOK with default headers values
func NewReadAlertDefinitionOK() *ReadAlertDefinitionOK {
	return &ReadAlertDefinitionOK{}
}

/*ReadAlertDefinitionOK handles this case with default header values.

OK
*/
type ReadAlertDefinitionOK struct {
	Payload *models.APIResultAlertDefinitionDto
}

func (o *ReadAlertDefinitionOK) Error() string {
	return fmt.Sprintf("[GET /alertDefinitions/{id}][%d] readAlertDefinitionOK  %+v", 200, o.Payload)
}

func (o *ReadAlertDefinitionOK) GetPayload() *models.APIResultAlertDefinitionDto {
	return o.Payload
}

func (o *ReadAlertDefinitionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultAlertDefinitionDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadAlertDefinitionBadRequest creates a ReadAlertDefinitionBadRequest with default headers values
func NewReadAlertDefinitionBadRequest() *ReadAlertDefinitionBadRequest {
	return &ReadAlertDefinitionBadRequest{}
}

/*ReadAlertDefinitionBadRequest handles this case with default header values.

Bad Request
*/
type ReadAlertDefinitionBadRequest struct {
	Payload *models.APIResult
}

func (o *ReadAlertDefinitionBadRequest) Error() string {
	return fmt.Sprintf("[GET /alertDefinitions/{id}][%d] readAlertDefinitionBadRequest  %+v", 400, o.Payload)
}

func (o *ReadAlertDefinitionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadAlertDefinitionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadAlertDefinitionUnauthorized creates a ReadAlertDefinitionUnauthorized with default headers values
func NewReadAlertDefinitionUnauthorized() *ReadAlertDefinitionUnauthorized {
	return &ReadAlertDefinitionUnauthorized{}
}

/*ReadAlertDefinitionUnauthorized handles this case with default header values.

Unauthorized
*/
type ReadAlertDefinitionUnauthorized struct {
	Payload *models.APIResult
}

func (o *ReadAlertDefinitionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /alertDefinitions/{id}][%d] readAlertDefinitionUnauthorized  %+v", 401, o.Payload)
}

func (o *ReadAlertDefinitionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadAlertDefinitionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadAlertDefinitionForbidden creates a ReadAlertDefinitionForbidden with default headers values
func NewReadAlertDefinitionForbidden() *ReadAlertDefinitionForbidden {
	return &ReadAlertDefinitionForbidden{}
}

/*ReadAlertDefinitionForbidden handles this case with default header values.

Forbidden
*/
type ReadAlertDefinitionForbidden struct {
	Payload *models.APIResult
}

func (o *ReadAlertDefinitionForbidden) Error() string {
	return fmt.Sprintf("[GET /alertDefinitions/{id}][%d] readAlertDefinitionForbidden  %+v", 403, o.Payload)
}

func (o *ReadAlertDefinitionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadAlertDefinitionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadAlertDefinitionNotFound creates a ReadAlertDefinitionNotFound with default headers values
func NewReadAlertDefinitionNotFound() *ReadAlertDefinitionNotFound {
	return &ReadAlertDefinitionNotFound{}
}

/*ReadAlertDefinitionNotFound handles this case with default header values.

Not Found
*/
type ReadAlertDefinitionNotFound struct {
	Payload *models.APIResult
}

func (o *ReadAlertDefinitionNotFound) Error() string {
	return fmt.Sprintf("[GET /alertDefinitions/{id}][%d] readAlertDefinitionNotFound  %+v", 404, o.Payload)
}

func (o *ReadAlertDefinitionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadAlertDefinitionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadAlertDefinitionConflict creates a ReadAlertDefinitionConflict with default headers values
func NewReadAlertDefinitionConflict() *ReadAlertDefinitionConflict {
	return &ReadAlertDefinitionConflict{}
}

/*ReadAlertDefinitionConflict handles this case with default header values.

Conflict
*/
type ReadAlertDefinitionConflict struct {
	Payload *models.APIResult
}

func (o *ReadAlertDefinitionConflict) Error() string {
	return fmt.Sprintf("[GET /alertDefinitions/{id}][%d] readAlertDefinitionConflict  %+v", 409, o.Payload)
}

func (o *ReadAlertDefinitionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadAlertDefinitionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadAlertDefinitionInternalServerError creates a ReadAlertDefinitionInternalServerError with default headers values
func NewReadAlertDefinitionInternalServerError() *ReadAlertDefinitionInternalServerError {
	return &ReadAlertDefinitionInternalServerError{}
}

/*ReadAlertDefinitionInternalServerError handles this case with default header values.

Internal Server Error
*/
type ReadAlertDefinitionInternalServerError struct {
	Payload *models.APIResult
}

func (o *ReadAlertDefinitionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /alertDefinitions/{id}][%d] readAlertDefinitionInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadAlertDefinitionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadAlertDefinitionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
