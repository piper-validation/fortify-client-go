// Code generated by go-swagger; DO NOT EDIT.

package alert_definition_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// UpdateAlertDefinitionReader is a Reader for the UpdateAlertDefinition structure.
type UpdateAlertDefinitionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAlertDefinitionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateAlertDefinitionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateAlertDefinitionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateAlertDefinitionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateAlertDefinitionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateAlertDefinitionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateAlertDefinitionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateAlertDefinitionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateAlertDefinitionOK creates a UpdateAlertDefinitionOK with default headers values
func NewUpdateAlertDefinitionOK() *UpdateAlertDefinitionOK {
	return &UpdateAlertDefinitionOK{}
}

/*UpdateAlertDefinitionOK handles this case with default header values.

OK
*/
type UpdateAlertDefinitionOK struct {
	Payload *models.APIResultAlertDefinitionDto
}

func (o *UpdateAlertDefinitionOK) Error() string {
	return fmt.Sprintf("[PUT /alertDefinitions/{id}][%d] updateAlertDefinitionOK  %+v", 200, o.Payload)
}

func (o *UpdateAlertDefinitionOK) GetPayload() *models.APIResultAlertDefinitionDto {
	return o.Payload
}

func (o *UpdateAlertDefinitionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultAlertDefinitionDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAlertDefinitionBadRequest creates a UpdateAlertDefinitionBadRequest with default headers values
func NewUpdateAlertDefinitionBadRequest() *UpdateAlertDefinitionBadRequest {
	return &UpdateAlertDefinitionBadRequest{}
}

/*UpdateAlertDefinitionBadRequest handles this case with default header values.

Bad Request
*/
type UpdateAlertDefinitionBadRequest struct {
	Payload *models.APIResult
}

func (o *UpdateAlertDefinitionBadRequest) Error() string {
	return fmt.Sprintf("[PUT /alertDefinitions/{id}][%d] updateAlertDefinitionBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateAlertDefinitionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateAlertDefinitionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAlertDefinitionUnauthorized creates a UpdateAlertDefinitionUnauthorized with default headers values
func NewUpdateAlertDefinitionUnauthorized() *UpdateAlertDefinitionUnauthorized {
	return &UpdateAlertDefinitionUnauthorized{}
}

/*UpdateAlertDefinitionUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateAlertDefinitionUnauthorized struct {
	Payload *models.APIResult
}

func (o *UpdateAlertDefinitionUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /alertDefinitions/{id}][%d] updateAlertDefinitionUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateAlertDefinitionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateAlertDefinitionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAlertDefinitionForbidden creates a UpdateAlertDefinitionForbidden with default headers values
func NewUpdateAlertDefinitionForbidden() *UpdateAlertDefinitionForbidden {
	return &UpdateAlertDefinitionForbidden{}
}

/*UpdateAlertDefinitionForbidden handles this case with default header values.

Forbidden
*/
type UpdateAlertDefinitionForbidden struct {
	Payload *models.APIResult
}

func (o *UpdateAlertDefinitionForbidden) Error() string {
	return fmt.Sprintf("[PUT /alertDefinitions/{id}][%d] updateAlertDefinitionForbidden  %+v", 403, o.Payload)
}

func (o *UpdateAlertDefinitionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateAlertDefinitionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAlertDefinitionNotFound creates a UpdateAlertDefinitionNotFound with default headers values
func NewUpdateAlertDefinitionNotFound() *UpdateAlertDefinitionNotFound {
	return &UpdateAlertDefinitionNotFound{}
}

/*UpdateAlertDefinitionNotFound handles this case with default header values.

Not Found
*/
type UpdateAlertDefinitionNotFound struct {
	Payload *models.APIResult
}

func (o *UpdateAlertDefinitionNotFound) Error() string {
	return fmt.Sprintf("[PUT /alertDefinitions/{id}][%d] updateAlertDefinitionNotFound  %+v", 404, o.Payload)
}

func (o *UpdateAlertDefinitionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateAlertDefinitionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAlertDefinitionConflict creates a UpdateAlertDefinitionConflict with default headers values
func NewUpdateAlertDefinitionConflict() *UpdateAlertDefinitionConflict {
	return &UpdateAlertDefinitionConflict{}
}

/*UpdateAlertDefinitionConflict handles this case with default header values.

Conflict
*/
type UpdateAlertDefinitionConflict struct {
	Payload *models.APIResult
}

func (o *UpdateAlertDefinitionConflict) Error() string {
	return fmt.Sprintf("[PUT /alertDefinitions/{id}][%d] updateAlertDefinitionConflict  %+v", 409, o.Payload)
}

func (o *UpdateAlertDefinitionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateAlertDefinitionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAlertDefinitionInternalServerError creates a UpdateAlertDefinitionInternalServerError with default headers values
func NewUpdateAlertDefinitionInternalServerError() *UpdateAlertDefinitionInternalServerError {
	return &UpdateAlertDefinitionInternalServerError{}
}

/*UpdateAlertDefinitionInternalServerError handles this case with default header values.

Internal Server Error
*/
type UpdateAlertDefinitionInternalServerError struct {
	Payload *models.APIResult
}

func (o *UpdateAlertDefinitionInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /alertDefinitions/{id}][%d] updateAlertDefinitionInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateAlertDefinitionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateAlertDefinitionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
