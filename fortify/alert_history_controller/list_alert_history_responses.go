// Code generated by go-swagger; DO NOT EDIT.

package alert_history_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListAlertHistoryReader is a Reader for the ListAlertHistory structure.
type ListAlertHistoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAlertHistoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListAlertHistoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListAlertHistoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListAlertHistoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListAlertHistoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListAlertHistoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListAlertHistoryConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListAlertHistoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListAlertHistoryOK creates a ListAlertHistoryOK with default headers values
func NewListAlertHistoryOK() *ListAlertHistoryOK {
	return &ListAlertHistoryOK{}
}

/*ListAlertHistoryOK handles this case with default header values.

OK
*/
type ListAlertHistoryOK struct {
	Payload *models.APIResultListAlertHistoryEntry
}

func (o *ListAlertHistoryOK) Error() string {
	return fmt.Sprintf("[GET /alerts][%d] listAlertHistoryOK  %+v", 200, o.Payload)
}

func (o *ListAlertHistoryOK) GetPayload() *models.APIResultListAlertHistoryEntry {
	return o.Payload
}

func (o *ListAlertHistoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListAlertHistoryEntry)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAlertHistoryBadRequest creates a ListAlertHistoryBadRequest with default headers values
func NewListAlertHistoryBadRequest() *ListAlertHistoryBadRequest {
	return &ListAlertHistoryBadRequest{}
}

/*ListAlertHistoryBadRequest handles this case with default header values.

Bad Request
*/
type ListAlertHistoryBadRequest struct {
	Payload *models.APIResult
}

func (o *ListAlertHistoryBadRequest) Error() string {
	return fmt.Sprintf("[GET /alerts][%d] listAlertHistoryBadRequest  %+v", 400, o.Payload)
}

func (o *ListAlertHistoryBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListAlertHistoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAlertHistoryUnauthorized creates a ListAlertHistoryUnauthorized with default headers values
func NewListAlertHistoryUnauthorized() *ListAlertHistoryUnauthorized {
	return &ListAlertHistoryUnauthorized{}
}

/*ListAlertHistoryUnauthorized handles this case with default header values.

Unauthorized
*/
type ListAlertHistoryUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListAlertHistoryUnauthorized) Error() string {
	return fmt.Sprintf("[GET /alerts][%d] listAlertHistoryUnauthorized  %+v", 401, o.Payload)
}

func (o *ListAlertHistoryUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListAlertHistoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAlertHistoryForbidden creates a ListAlertHistoryForbidden with default headers values
func NewListAlertHistoryForbidden() *ListAlertHistoryForbidden {
	return &ListAlertHistoryForbidden{}
}

/*ListAlertHistoryForbidden handles this case with default header values.

Forbidden
*/
type ListAlertHistoryForbidden struct {
	Payload *models.APIResult
}

func (o *ListAlertHistoryForbidden) Error() string {
	return fmt.Sprintf("[GET /alerts][%d] listAlertHistoryForbidden  %+v", 403, o.Payload)
}

func (o *ListAlertHistoryForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListAlertHistoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAlertHistoryNotFound creates a ListAlertHistoryNotFound with default headers values
func NewListAlertHistoryNotFound() *ListAlertHistoryNotFound {
	return &ListAlertHistoryNotFound{}
}

/*ListAlertHistoryNotFound handles this case with default header values.

Not Found
*/
type ListAlertHistoryNotFound struct {
	Payload *models.APIResult
}

func (o *ListAlertHistoryNotFound) Error() string {
	return fmt.Sprintf("[GET /alerts][%d] listAlertHistoryNotFound  %+v", 404, o.Payload)
}

func (o *ListAlertHistoryNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListAlertHistoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAlertHistoryConflict creates a ListAlertHistoryConflict with default headers values
func NewListAlertHistoryConflict() *ListAlertHistoryConflict {
	return &ListAlertHistoryConflict{}
}

/*ListAlertHistoryConflict handles this case with default header values.

Conflict
*/
type ListAlertHistoryConflict struct {
	Payload *models.APIResult
}

func (o *ListAlertHistoryConflict) Error() string {
	return fmt.Sprintf("[GET /alerts][%d] listAlertHistoryConflict  %+v", 409, o.Payload)
}

func (o *ListAlertHistoryConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListAlertHistoryConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAlertHistoryInternalServerError creates a ListAlertHistoryInternalServerError with default headers values
func NewListAlertHistoryInternalServerError() *ListAlertHistoryInternalServerError {
	return &ListAlertHistoryInternalServerError{}
}

/*ListAlertHistoryInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListAlertHistoryInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListAlertHistoryInternalServerError) Error() string {
	return fmt.Sprintf("[GET /alerts][%d] listAlertHistoryInternalServerError  %+v", 500, o.Payload)
}

func (o *ListAlertHistoryInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListAlertHistoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
