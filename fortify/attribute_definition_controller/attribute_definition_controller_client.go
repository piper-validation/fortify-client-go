// Code generated by go-swagger; DO NOT EDIT.

package attribute_definition_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new attribute definition controller API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for attribute definition controller API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	CreateAttributeDefinition(params *CreateAttributeDefinitionParams, authInfo runtime.ClientAuthInfoWriter) (*CreateAttributeDefinitionCreated, error)

	DeleteAttributeDefinition(params *DeleteAttributeDefinitionParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteAttributeDefinitionOK, error)

	ListAttributeDefinition(params *ListAttributeDefinitionParams, authInfo runtime.ClientAuthInfoWriter) (*ListAttributeDefinitionOK, error)

	MultiDeleteAttributeDefinition(params *MultiDeleteAttributeDefinitionParams, authInfo runtime.ClientAuthInfoWriter) (*MultiDeleteAttributeDefinitionOK, error)

	ReadAttributeDefinition(params *ReadAttributeDefinitionParams, authInfo runtime.ClientAuthInfoWriter) (*ReadAttributeDefinitionOK, error)

	UpdateAttributeDefinition(params *UpdateAttributeDefinitionParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateAttributeDefinitionOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CreateAttributeDefinition creates
*/
func (a *Client) CreateAttributeDefinition(params *CreateAttributeDefinitionParams, authInfo runtime.ClientAuthInfoWriter) (*CreateAttributeDefinitionCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateAttributeDefinitionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createAttributeDefinition",
		Method:             "POST",
		PathPattern:        "/attributeDefinitions",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreateAttributeDefinitionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateAttributeDefinitionCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createAttributeDefinition: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteAttributeDefinition deletes
*/
func (a *Client) DeleteAttributeDefinition(params *DeleteAttributeDefinitionParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteAttributeDefinitionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAttributeDefinitionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteAttributeDefinition",
		Method:             "DELETE",
		PathPattern:        "/attributeDefinitions/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAttributeDefinitionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteAttributeDefinitionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteAttributeDefinition: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ListAttributeDefinition lists
*/
func (a *Client) ListAttributeDefinition(params *ListAttributeDefinitionParams, authInfo runtime.ClientAuthInfoWriter) (*ListAttributeDefinitionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListAttributeDefinitionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "listAttributeDefinition",
		Method:             "GET",
		PathPattern:        "/attributeDefinitions",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ListAttributeDefinitionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListAttributeDefinitionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for listAttributeDefinition: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  MultiDeleteAttributeDefinition multis delete
*/
func (a *Client) MultiDeleteAttributeDefinition(params *MultiDeleteAttributeDefinitionParams, authInfo runtime.ClientAuthInfoWriter) (*MultiDeleteAttributeDefinitionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewMultiDeleteAttributeDefinitionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "multiDeleteAttributeDefinition",
		Method:             "DELETE",
		PathPattern:        "/attributeDefinitions",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &MultiDeleteAttributeDefinitionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*MultiDeleteAttributeDefinitionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for multiDeleteAttributeDefinition: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReadAttributeDefinition reads
*/
func (a *Client) ReadAttributeDefinition(params *ReadAttributeDefinitionParams, authInfo runtime.ClientAuthInfoWriter) (*ReadAttributeDefinitionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReadAttributeDefinitionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "readAttributeDefinition",
		Method:             "GET",
		PathPattern:        "/attributeDefinitions/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ReadAttributeDefinitionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ReadAttributeDefinitionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for readAttributeDefinition: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateAttributeDefinition updates
*/
func (a *Client) UpdateAttributeDefinition(params *UpdateAttributeDefinitionParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateAttributeDefinitionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateAttributeDefinitionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateAttributeDefinition",
		Method:             "PUT",
		PathPattern:        "/attributeDefinitions/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &UpdateAttributeDefinitionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateAttributeDefinitionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateAttributeDefinition: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
