// Code generated by go-swagger; DO NOT EDIT.

package audit_history_of_issue_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListAuditHistoryOfIssueReader is a Reader for the ListAuditHistoryOfIssue structure.
type ListAuditHistoryOfIssueReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAuditHistoryOfIssueReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListAuditHistoryOfIssueOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListAuditHistoryOfIssueBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListAuditHistoryOfIssueUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListAuditHistoryOfIssueForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListAuditHistoryOfIssueNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListAuditHistoryOfIssueConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListAuditHistoryOfIssueInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListAuditHistoryOfIssueOK creates a ListAuditHistoryOfIssueOK with default headers values
func NewListAuditHistoryOfIssueOK() *ListAuditHistoryOfIssueOK {
	return &ListAuditHistoryOfIssueOK{}
}

/*ListAuditHistoryOfIssueOK handles this case with default header values.

OK
*/
type ListAuditHistoryOfIssueOK struct {
	Payload *models.APIResultListIssueAuditHistoryDto
}

func (o *ListAuditHistoryOfIssueOK) Error() string {
	return fmt.Sprintf("[GET /issues/{parentId}/auditHistory][%d] listAuditHistoryOfIssueOK  %+v", 200, o.Payload)
}

func (o *ListAuditHistoryOfIssueOK) GetPayload() *models.APIResultListIssueAuditHistoryDto {
	return o.Payload
}

func (o *ListAuditHistoryOfIssueOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListIssueAuditHistoryDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAuditHistoryOfIssueBadRequest creates a ListAuditHistoryOfIssueBadRequest with default headers values
func NewListAuditHistoryOfIssueBadRequest() *ListAuditHistoryOfIssueBadRequest {
	return &ListAuditHistoryOfIssueBadRequest{}
}

/*ListAuditHistoryOfIssueBadRequest handles this case with default header values.

Bad Request
*/
type ListAuditHistoryOfIssueBadRequest struct {
	Payload *models.APIResult
}

func (o *ListAuditHistoryOfIssueBadRequest) Error() string {
	return fmt.Sprintf("[GET /issues/{parentId}/auditHistory][%d] listAuditHistoryOfIssueBadRequest  %+v", 400, o.Payload)
}

func (o *ListAuditHistoryOfIssueBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListAuditHistoryOfIssueBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAuditHistoryOfIssueUnauthorized creates a ListAuditHistoryOfIssueUnauthorized with default headers values
func NewListAuditHistoryOfIssueUnauthorized() *ListAuditHistoryOfIssueUnauthorized {
	return &ListAuditHistoryOfIssueUnauthorized{}
}

/*ListAuditHistoryOfIssueUnauthorized handles this case with default header values.

Unauthorized
*/
type ListAuditHistoryOfIssueUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListAuditHistoryOfIssueUnauthorized) Error() string {
	return fmt.Sprintf("[GET /issues/{parentId}/auditHistory][%d] listAuditHistoryOfIssueUnauthorized  %+v", 401, o.Payload)
}

func (o *ListAuditHistoryOfIssueUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListAuditHistoryOfIssueUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAuditHistoryOfIssueForbidden creates a ListAuditHistoryOfIssueForbidden with default headers values
func NewListAuditHistoryOfIssueForbidden() *ListAuditHistoryOfIssueForbidden {
	return &ListAuditHistoryOfIssueForbidden{}
}

/*ListAuditHistoryOfIssueForbidden handles this case with default header values.

Forbidden
*/
type ListAuditHistoryOfIssueForbidden struct {
	Payload *models.APIResult
}

func (o *ListAuditHistoryOfIssueForbidden) Error() string {
	return fmt.Sprintf("[GET /issues/{parentId}/auditHistory][%d] listAuditHistoryOfIssueForbidden  %+v", 403, o.Payload)
}

func (o *ListAuditHistoryOfIssueForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListAuditHistoryOfIssueForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAuditHistoryOfIssueNotFound creates a ListAuditHistoryOfIssueNotFound with default headers values
func NewListAuditHistoryOfIssueNotFound() *ListAuditHistoryOfIssueNotFound {
	return &ListAuditHistoryOfIssueNotFound{}
}

/*ListAuditHistoryOfIssueNotFound handles this case with default header values.

Not Found
*/
type ListAuditHistoryOfIssueNotFound struct {
	Payload *models.APIResult
}

func (o *ListAuditHistoryOfIssueNotFound) Error() string {
	return fmt.Sprintf("[GET /issues/{parentId}/auditHistory][%d] listAuditHistoryOfIssueNotFound  %+v", 404, o.Payload)
}

func (o *ListAuditHistoryOfIssueNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListAuditHistoryOfIssueNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAuditHistoryOfIssueConflict creates a ListAuditHistoryOfIssueConflict with default headers values
func NewListAuditHistoryOfIssueConflict() *ListAuditHistoryOfIssueConflict {
	return &ListAuditHistoryOfIssueConflict{}
}

/*ListAuditHistoryOfIssueConflict handles this case with default header values.

Conflict
*/
type ListAuditHistoryOfIssueConflict struct {
	Payload *models.APIResult
}

func (o *ListAuditHistoryOfIssueConflict) Error() string {
	return fmt.Sprintf("[GET /issues/{parentId}/auditHistory][%d] listAuditHistoryOfIssueConflict  %+v", 409, o.Payload)
}

func (o *ListAuditHistoryOfIssueConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListAuditHistoryOfIssueConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAuditHistoryOfIssueInternalServerError creates a ListAuditHistoryOfIssueInternalServerError with default headers values
func NewListAuditHistoryOfIssueInternalServerError() *ListAuditHistoryOfIssueInternalServerError {
	return &ListAuditHistoryOfIssueInternalServerError{}
}

/*ListAuditHistoryOfIssueInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListAuditHistoryOfIssueInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListAuditHistoryOfIssueInternalServerError) Error() string {
	return fmt.Sprintf("[GET /issues/{parentId}/auditHistory][%d] listAuditHistoryOfIssueInternalServerError  %+v", 500, o.Payload)
}

func (o *ListAuditHistoryOfIssueInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListAuditHistoryOfIssueInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
