// Code generated by go-swagger; DO NOT EDIT.

package auth_entity_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ReadAuthEntityReader is a Reader for the ReadAuthEntity structure.
type ReadAuthEntityReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadAuthEntityReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadAuthEntityOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReadAuthEntityBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReadAuthEntityUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewReadAuthEntityForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReadAuthEntityNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewReadAuthEntityConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadAuthEntityInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadAuthEntityOK creates a ReadAuthEntityOK with default headers values
func NewReadAuthEntityOK() *ReadAuthEntityOK {
	return &ReadAuthEntityOK{}
}

/*ReadAuthEntityOK handles this case with default header values.

OK
*/
type ReadAuthEntityOK struct {
	Payload *models.APIResultAuthenticationEntity
}

func (o *ReadAuthEntityOK) Error() string {
	return fmt.Sprintf("[GET /authEntities/{id}][%d] readAuthEntityOK  %+v", 200, o.Payload)
}

func (o *ReadAuthEntityOK) GetPayload() *models.APIResultAuthenticationEntity {
	return o.Payload
}

func (o *ReadAuthEntityOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultAuthenticationEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadAuthEntityBadRequest creates a ReadAuthEntityBadRequest with default headers values
func NewReadAuthEntityBadRequest() *ReadAuthEntityBadRequest {
	return &ReadAuthEntityBadRequest{}
}

/*ReadAuthEntityBadRequest handles this case with default header values.

Bad Request
*/
type ReadAuthEntityBadRequest struct {
	Payload *models.APIResult
}

func (o *ReadAuthEntityBadRequest) Error() string {
	return fmt.Sprintf("[GET /authEntities/{id}][%d] readAuthEntityBadRequest  %+v", 400, o.Payload)
}

func (o *ReadAuthEntityBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadAuthEntityBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadAuthEntityUnauthorized creates a ReadAuthEntityUnauthorized with default headers values
func NewReadAuthEntityUnauthorized() *ReadAuthEntityUnauthorized {
	return &ReadAuthEntityUnauthorized{}
}

/*ReadAuthEntityUnauthorized handles this case with default header values.

Unauthorized
*/
type ReadAuthEntityUnauthorized struct {
	Payload *models.APIResult
}

func (o *ReadAuthEntityUnauthorized) Error() string {
	return fmt.Sprintf("[GET /authEntities/{id}][%d] readAuthEntityUnauthorized  %+v", 401, o.Payload)
}

func (o *ReadAuthEntityUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadAuthEntityUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadAuthEntityForbidden creates a ReadAuthEntityForbidden with default headers values
func NewReadAuthEntityForbidden() *ReadAuthEntityForbidden {
	return &ReadAuthEntityForbidden{}
}

/*ReadAuthEntityForbidden handles this case with default header values.

Forbidden
*/
type ReadAuthEntityForbidden struct {
	Payload *models.APIResult
}

func (o *ReadAuthEntityForbidden) Error() string {
	return fmt.Sprintf("[GET /authEntities/{id}][%d] readAuthEntityForbidden  %+v", 403, o.Payload)
}

func (o *ReadAuthEntityForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadAuthEntityForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadAuthEntityNotFound creates a ReadAuthEntityNotFound with default headers values
func NewReadAuthEntityNotFound() *ReadAuthEntityNotFound {
	return &ReadAuthEntityNotFound{}
}

/*ReadAuthEntityNotFound handles this case with default header values.

Not Found
*/
type ReadAuthEntityNotFound struct {
	Payload *models.APIResult
}

func (o *ReadAuthEntityNotFound) Error() string {
	return fmt.Sprintf("[GET /authEntities/{id}][%d] readAuthEntityNotFound  %+v", 404, o.Payload)
}

func (o *ReadAuthEntityNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadAuthEntityNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadAuthEntityConflict creates a ReadAuthEntityConflict with default headers values
func NewReadAuthEntityConflict() *ReadAuthEntityConflict {
	return &ReadAuthEntityConflict{}
}

/*ReadAuthEntityConflict handles this case with default header values.

Conflict
*/
type ReadAuthEntityConflict struct {
	Payload *models.APIResult
}

func (o *ReadAuthEntityConflict) Error() string {
	return fmt.Sprintf("[GET /authEntities/{id}][%d] readAuthEntityConflict  %+v", 409, o.Payload)
}

func (o *ReadAuthEntityConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadAuthEntityConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadAuthEntityInternalServerError creates a ReadAuthEntityInternalServerError with default headers values
func NewReadAuthEntityInternalServerError() *ReadAuthEntityInternalServerError {
	return &ReadAuthEntityInternalServerError{}
}

/*ReadAuthEntityInternalServerError handles this case with default header values.

Internal Server Error
*/
type ReadAuthEntityInternalServerError struct {
	Payload *models.APIResult
}

func (o *ReadAuthEntityInternalServerError) Error() string {
	return fmt.Sprintf("[GET /authEntities/{id}][%d] readAuthEntityInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadAuthEntityInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadAuthEntityInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
