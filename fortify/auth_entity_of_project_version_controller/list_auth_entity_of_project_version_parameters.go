// Code generated by go-swagger; DO NOT EDIT.

package auth_entity_of_project_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListAuthEntityOfProjectVersionParams creates a new ListAuthEntityOfProjectVersionParams object
// with the default values initialized.
func NewListAuthEntityOfProjectVersionParams() *ListAuthEntityOfProjectVersionParams {
	var ()
	return &ListAuthEntityOfProjectVersionParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListAuthEntityOfProjectVersionParamsWithTimeout creates a new ListAuthEntityOfProjectVersionParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListAuthEntityOfProjectVersionParamsWithTimeout(timeout time.Duration) *ListAuthEntityOfProjectVersionParams {
	var ()
	return &ListAuthEntityOfProjectVersionParams{

		timeout: timeout,
	}
}

// NewListAuthEntityOfProjectVersionParamsWithContext creates a new ListAuthEntityOfProjectVersionParams object
// with the default values initialized, and the ability to set a context for a request
func NewListAuthEntityOfProjectVersionParamsWithContext(ctx context.Context) *ListAuthEntityOfProjectVersionParams {
	var ()
	return &ListAuthEntityOfProjectVersionParams{

		Context: ctx,
	}
}

// NewListAuthEntityOfProjectVersionParamsWithHTTPClient creates a new ListAuthEntityOfProjectVersionParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListAuthEntityOfProjectVersionParamsWithHTTPClient(client *http.Client) *ListAuthEntityOfProjectVersionParams {
	var ()
	return &ListAuthEntityOfProjectVersionParams{
		HTTPClient: client,
	}
}

/*ListAuthEntityOfProjectVersionParams contains all the parameters to send to the API endpoint
for the list auth entity of project version operation typically these are written to a http.Request
*/
type ListAuthEntityOfProjectVersionParams struct {

	/*Embed
	  Fields to embed

	*/
	Embed *string
	/*Entityname
	  entityname

	*/
	Entityname *string
	/*Extractusersfromgroups
	  extractusersfromgroups

	*/
	Extractusersfromgroups *bool
	/*Fields
	  Output fields

	*/
	Fields *string
	/*Includeuniversalaccessentities
	  includeuniversalaccessentities

	*/
	Includeuniversalaccessentities *bool
	/*ParentID
	  parentId

	*/
	ParentID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list auth entity of project version params
func (o *ListAuthEntityOfProjectVersionParams) WithTimeout(timeout time.Duration) *ListAuthEntityOfProjectVersionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list auth entity of project version params
func (o *ListAuthEntityOfProjectVersionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list auth entity of project version params
func (o *ListAuthEntityOfProjectVersionParams) WithContext(ctx context.Context) *ListAuthEntityOfProjectVersionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list auth entity of project version params
func (o *ListAuthEntityOfProjectVersionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list auth entity of project version params
func (o *ListAuthEntityOfProjectVersionParams) WithHTTPClient(client *http.Client) *ListAuthEntityOfProjectVersionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list auth entity of project version params
func (o *ListAuthEntityOfProjectVersionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEmbed adds the embed to the list auth entity of project version params
func (o *ListAuthEntityOfProjectVersionParams) WithEmbed(embed *string) *ListAuthEntityOfProjectVersionParams {
	o.SetEmbed(embed)
	return o
}

// SetEmbed adds the embed to the list auth entity of project version params
func (o *ListAuthEntityOfProjectVersionParams) SetEmbed(embed *string) {
	o.Embed = embed
}

// WithEntityname adds the entityname to the list auth entity of project version params
func (o *ListAuthEntityOfProjectVersionParams) WithEntityname(entityname *string) *ListAuthEntityOfProjectVersionParams {
	o.SetEntityname(entityname)
	return o
}

// SetEntityname adds the entityname to the list auth entity of project version params
func (o *ListAuthEntityOfProjectVersionParams) SetEntityname(entityname *string) {
	o.Entityname = entityname
}

// WithExtractusersfromgroups adds the extractusersfromgroups to the list auth entity of project version params
func (o *ListAuthEntityOfProjectVersionParams) WithExtractusersfromgroups(extractusersfromgroups *bool) *ListAuthEntityOfProjectVersionParams {
	o.SetExtractusersfromgroups(extractusersfromgroups)
	return o
}

// SetExtractusersfromgroups adds the extractusersfromgroups to the list auth entity of project version params
func (o *ListAuthEntityOfProjectVersionParams) SetExtractusersfromgroups(extractusersfromgroups *bool) {
	o.Extractusersfromgroups = extractusersfromgroups
}

// WithFields adds the fields to the list auth entity of project version params
func (o *ListAuthEntityOfProjectVersionParams) WithFields(fields *string) *ListAuthEntityOfProjectVersionParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the list auth entity of project version params
func (o *ListAuthEntityOfProjectVersionParams) SetFields(fields *string) {
	o.Fields = fields
}

// WithIncludeuniversalaccessentities adds the includeuniversalaccessentities to the list auth entity of project version params
func (o *ListAuthEntityOfProjectVersionParams) WithIncludeuniversalaccessentities(includeuniversalaccessentities *bool) *ListAuthEntityOfProjectVersionParams {
	o.SetIncludeuniversalaccessentities(includeuniversalaccessentities)
	return o
}

// SetIncludeuniversalaccessentities adds the includeuniversalaccessentities to the list auth entity of project version params
func (o *ListAuthEntityOfProjectVersionParams) SetIncludeuniversalaccessentities(includeuniversalaccessentities *bool) {
	o.Includeuniversalaccessentities = includeuniversalaccessentities
}

// WithParentID adds the parentID to the list auth entity of project version params
func (o *ListAuthEntityOfProjectVersionParams) WithParentID(parentID int64) *ListAuthEntityOfProjectVersionParams {
	o.SetParentID(parentID)
	return o
}

// SetParentID adds the parentId to the list auth entity of project version params
func (o *ListAuthEntityOfProjectVersionParams) SetParentID(parentID int64) {
	o.ParentID = parentID
}

// WriteToRequest writes these params to a swagger request
func (o *ListAuthEntityOfProjectVersionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Embed != nil {

		// query param embed
		var qrEmbed string
		if o.Embed != nil {
			qrEmbed = *o.Embed
		}
		qEmbed := qrEmbed
		if qEmbed != "" {
			if err := r.SetQueryParam("embed", qEmbed); err != nil {
				return err
			}
		}

	}

	if o.Entityname != nil {

		// query param entityname
		var qrEntityname string
		if o.Entityname != nil {
			qrEntityname = *o.Entityname
		}
		qEntityname := qrEntityname
		if qEntityname != "" {
			if err := r.SetQueryParam("entityname", qEntityname); err != nil {
				return err
			}
		}

	}

	if o.Extractusersfromgroups != nil {

		// query param extractusersfromgroups
		var qrExtractusersfromgroups bool
		if o.Extractusersfromgroups != nil {
			qrExtractusersfromgroups = *o.Extractusersfromgroups
		}
		qExtractusersfromgroups := swag.FormatBool(qrExtractusersfromgroups)
		if qExtractusersfromgroups != "" {
			if err := r.SetQueryParam("extractusersfromgroups", qExtractusersfromgroups); err != nil {
				return err
			}
		}

	}

	if o.Fields != nil {

		// query param fields
		var qrFields string
		if o.Fields != nil {
			qrFields = *o.Fields
		}
		qFields := qrFields
		if qFields != "" {
			if err := r.SetQueryParam("fields", qFields); err != nil {
				return err
			}
		}

	}

	if o.Includeuniversalaccessentities != nil {

		// query param includeuniversalaccessentities
		var qrIncludeuniversalaccessentities bool
		if o.Includeuniversalaccessentities != nil {
			qrIncludeuniversalaccessentities = *o.Includeuniversalaccessentities
		}
		qIncludeuniversalaccessentities := swag.FormatBool(qrIncludeuniversalaccessentities)
		if qIncludeuniversalaccessentities != "" {
			if err := r.SetQueryParam("includeuniversalaccessentities", qIncludeuniversalaccessentities); err != nil {
				return err
			}
		}

	}

	// path param parentId
	if err := r.SetPathParam("parentId", swag.FormatInt64(o.ParentID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
