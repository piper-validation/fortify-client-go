// Code generated by go-swagger; DO NOT EDIT.

package auth_token_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewMultiDeleteAuthTokenParams creates a new MultiDeleteAuthTokenParams object
// with the default values initialized.
func NewMultiDeleteAuthTokenParams() *MultiDeleteAuthTokenParams {
	var (
		allDefault = bool(false)
	)
	return &MultiDeleteAuthTokenParams{
		All: &allDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewMultiDeleteAuthTokenParamsWithTimeout creates a new MultiDeleteAuthTokenParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewMultiDeleteAuthTokenParamsWithTimeout(timeout time.Duration) *MultiDeleteAuthTokenParams {
	var (
		allDefault = bool(false)
	)
	return &MultiDeleteAuthTokenParams{
		All: &allDefault,

		timeout: timeout,
	}
}

// NewMultiDeleteAuthTokenParamsWithContext creates a new MultiDeleteAuthTokenParams object
// with the default values initialized, and the ability to set a context for a request
func NewMultiDeleteAuthTokenParamsWithContext(ctx context.Context) *MultiDeleteAuthTokenParams {
	var (
		allDefault = bool(false)
	)
	return &MultiDeleteAuthTokenParams{
		All: &allDefault,

		Context: ctx,
	}
}

// NewMultiDeleteAuthTokenParamsWithHTTPClient creates a new MultiDeleteAuthTokenParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewMultiDeleteAuthTokenParamsWithHTTPClient(client *http.Client) *MultiDeleteAuthTokenParams {
	var (
		allDefault = bool(false)
	)
	return &MultiDeleteAuthTokenParams{
		All:        &allDefault,
		HTTPClient: client,
	}
}

/*MultiDeleteAuthTokenParams contains all the parameters to send to the API endpoint
for the multi delete auth token operation typically these are written to a http.Request
*/
type MultiDeleteAuthTokenParams struct {

	/*All
	  Specify value 'true' to revoke all authentication tokens of current logged-in user. This parameter can only be used if the 'ids' parameter is not being used.

	*/
	All *bool
	/*Ids
	  A comma-separated list of resource identifiers

	*/
	Ids *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the multi delete auth token params
func (o *MultiDeleteAuthTokenParams) WithTimeout(timeout time.Duration) *MultiDeleteAuthTokenParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the multi delete auth token params
func (o *MultiDeleteAuthTokenParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the multi delete auth token params
func (o *MultiDeleteAuthTokenParams) WithContext(ctx context.Context) *MultiDeleteAuthTokenParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the multi delete auth token params
func (o *MultiDeleteAuthTokenParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the multi delete auth token params
func (o *MultiDeleteAuthTokenParams) WithHTTPClient(client *http.Client) *MultiDeleteAuthTokenParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the multi delete auth token params
func (o *MultiDeleteAuthTokenParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAll adds the all to the multi delete auth token params
func (o *MultiDeleteAuthTokenParams) WithAll(all *bool) *MultiDeleteAuthTokenParams {
	o.SetAll(all)
	return o
}

// SetAll adds the all to the multi delete auth token params
func (o *MultiDeleteAuthTokenParams) SetAll(all *bool) {
	o.All = all
}

// WithIds adds the ids to the multi delete auth token params
func (o *MultiDeleteAuthTokenParams) WithIds(ids *string) *MultiDeleteAuthTokenParams {
	o.SetIds(ids)
	return o
}

// SetIds adds the ids to the multi delete auth token params
func (o *MultiDeleteAuthTokenParams) SetIds(ids *string) {
	o.Ids = ids
}

// WriteToRequest writes these params to a swagger request
func (o *MultiDeleteAuthTokenParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.All != nil {

		// query param all
		var qrAll bool
		if o.All != nil {
			qrAll = *o.All
		}
		qAll := swag.FormatBool(qrAll)
		if qAll != "" {
			if err := r.SetQueryParam("all", qAll); err != nil {
				return err
			}
		}

	}

	if o.Ids != nil {

		// query param ids
		var qrIds string
		if o.Ids != nil {
			qrIds = *o.Ids
		}
		qIds := qrIds
		if qIds != "" {
			if err := r.SetQueryParam("ids", qIds); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
