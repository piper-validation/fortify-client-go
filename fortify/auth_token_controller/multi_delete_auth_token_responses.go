// Code generated by go-swagger; DO NOT EDIT.

package auth_token_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// MultiDeleteAuthTokenReader is a Reader for the MultiDeleteAuthToken structure.
type MultiDeleteAuthTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MultiDeleteAuthTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewMultiDeleteAuthTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMultiDeleteAuthTokenBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewMultiDeleteAuthTokenUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewMultiDeleteAuthTokenForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewMultiDeleteAuthTokenNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewMultiDeleteAuthTokenConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewMultiDeleteAuthTokenInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewMultiDeleteAuthTokenOK creates a MultiDeleteAuthTokenOK with default headers values
func NewMultiDeleteAuthTokenOK() *MultiDeleteAuthTokenOK {
	return &MultiDeleteAuthTokenOK{}
}

/*MultiDeleteAuthTokenOK handles this case with default header values.

OK
*/
type MultiDeleteAuthTokenOK struct {
	Payload *models.APIResultVoid
}

func (o *MultiDeleteAuthTokenOK) Error() string {
	return fmt.Sprintf("[DELETE /tokens][%d] multiDeleteAuthTokenOK  %+v", 200, o.Payload)
}

func (o *MultiDeleteAuthTokenOK) GetPayload() *models.APIResultVoid {
	return o.Payload
}

func (o *MultiDeleteAuthTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultVoid)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiDeleteAuthTokenBadRequest creates a MultiDeleteAuthTokenBadRequest with default headers values
func NewMultiDeleteAuthTokenBadRequest() *MultiDeleteAuthTokenBadRequest {
	return &MultiDeleteAuthTokenBadRequest{}
}

/*MultiDeleteAuthTokenBadRequest handles this case with default header values.

Bad Request
*/
type MultiDeleteAuthTokenBadRequest struct {
	Payload *models.APIResult
}

func (o *MultiDeleteAuthTokenBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /tokens][%d] multiDeleteAuthTokenBadRequest  %+v", 400, o.Payload)
}

func (o *MultiDeleteAuthTokenBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *MultiDeleteAuthTokenBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiDeleteAuthTokenUnauthorized creates a MultiDeleteAuthTokenUnauthorized with default headers values
func NewMultiDeleteAuthTokenUnauthorized() *MultiDeleteAuthTokenUnauthorized {
	return &MultiDeleteAuthTokenUnauthorized{}
}

/*MultiDeleteAuthTokenUnauthorized handles this case with default header values.

Unauthorized
*/
type MultiDeleteAuthTokenUnauthorized struct {
	Payload *models.APIResult
}

func (o *MultiDeleteAuthTokenUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /tokens][%d] multiDeleteAuthTokenUnauthorized  %+v", 401, o.Payload)
}

func (o *MultiDeleteAuthTokenUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *MultiDeleteAuthTokenUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiDeleteAuthTokenForbidden creates a MultiDeleteAuthTokenForbidden with default headers values
func NewMultiDeleteAuthTokenForbidden() *MultiDeleteAuthTokenForbidden {
	return &MultiDeleteAuthTokenForbidden{}
}

/*MultiDeleteAuthTokenForbidden handles this case with default header values.

Forbidden
*/
type MultiDeleteAuthTokenForbidden struct {
	Payload *models.APIResult
}

func (o *MultiDeleteAuthTokenForbidden) Error() string {
	return fmt.Sprintf("[DELETE /tokens][%d] multiDeleteAuthTokenForbidden  %+v", 403, o.Payload)
}

func (o *MultiDeleteAuthTokenForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *MultiDeleteAuthTokenForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiDeleteAuthTokenNotFound creates a MultiDeleteAuthTokenNotFound with default headers values
func NewMultiDeleteAuthTokenNotFound() *MultiDeleteAuthTokenNotFound {
	return &MultiDeleteAuthTokenNotFound{}
}

/*MultiDeleteAuthTokenNotFound handles this case with default header values.

Not Found
*/
type MultiDeleteAuthTokenNotFound struct {
	Payload *models.APIResult
}

func (o *MultiDeleteAuthTokenNotFound) Error() string {
	return fmt.Sprintf("[DELETE /tokens][%d] multiDeleteAuthTokenNotFound  %+v", 404, o.Payload)
}

func (o *MultiDeleteAuthTokenNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *MultiDeleteAuthTokenNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiDeleteAuthTokenConflict creates a MultiDeleteAuthTokenConflict with default headers values
func NewMultiDeleteAuthTokenConflict() *MultiDeleteAuthTokenConflict {
	return &MultiDeleteAuthTokenConflict{}
}

/*MultiDeleteAuthTokenConflict handles this case with default header values.

Conflict
*/
type MultiDeleteAuthTokenConflict struct {
	Payload *models.APIResult
}

func (o *MultiDeleteAuthTokenConflict) Error() string {
	return fmt.Sprintf("[DELETE /tokens][%d] multiDeleteAuthTokenConflict  %+v", 409, o.Payload)
}

func (o *MultiDeleteAuthTokenConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *MultiDeleteAuthTokenConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiDeleteAuthTokenInternalServerError creates a MultiDeleteAuthTokenInternalServerError with default headers values
func NewMultiDeleteAuthTokenInternalServerError() *MultiDeleteAuthTokenInternalServerError {
	return &MultiDeleteAuthTokenInternalServerError{}
}

/*MultiDeleteAuthTokenInternalServerError handles this case with default header values.

Internal Server Error
*/
type MultiDeleteAuthTokenInternalServerError struct {
	Payload *models.APIResult
}

func (o *MultiDeleteAuthTokenInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /tokens][%d] multiDeleteAuthTokenInternalServerError  %+v", 500, o.Payload)
}

func (o *MultiDeleteAuthTokenInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *MultiDeleteAuthTokenInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
