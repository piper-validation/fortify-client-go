// Code generated by go-swagger; DO NOT EDIT.

package bug_filing_requirements_of_project_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// UpdateCollectionBugFilingRequirementsOfProjectVersionReader is a Reader for the UpdateCollectionBugFilingRequirementsOfProjectVersion structure.
type UpdateCollectionBugFilingRequirementsOfProjectVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCollectionBugFilingRequirementsOfProjectVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCollectionBugFilingRequirementsOfProjectVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateCollectionBugFilingRequirementsOfProjectVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateCollectionBugFilingRequirementsOfProjectVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateCollectionBugFilingRequirementsOfProjectVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateCollectionBugFilingRequirementsOfProjectVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateCollectionBugFilingRequirementsOfProjectVersionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateCollectionBugFilingRequirementsOfProjectVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateCollectionBugFilingRequirementsOfProjectVersionOK creates a UpdateCollectionBugFilingRequirementsOfProjectVersionOK with default headers values
func NewUpdateCollectionBugFilingRequirementsOfProjectVersionOK() *UpdateCollectionBugFilingRequirementsOfProjectVersionOK {
	return &UpdateCollectionBugFilingRequirementsOfProjectVersionOK{}
}

/*UpdateCollectionBugFilingRequirementsOfProjectVersionOK handles this case with default header values.

OK
*/
type UpdateCollectionBugFilingRequirementsOfProjectVersionOK struct {
	Payload *models.APIResultListBugFilingRequirements
}

func (o *UpdateCollectionBugFilingRequirementsOfProjectVersionOK) Error() string {
	return fmt.Sprintf("[PUT /projectVersions/{parentId}/bugfilingrequirements][%d] updateCollectionBugFilingRequirementsOfProjectVersionOK  %+v", 200, o.Payload)
}

func (o *UpdateCollectionBugFilingRequirementsOfProjectVersionOK) GetPayload() *models.APIResultListBugFilingRequirements {
	return o.Payload
}

func (o *UpdateCollectionBugFilingRequirementsOfProjectVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListBugFilingRequirements)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCollectionBugFilingRequirementsOfProjectVersionBadRequest creates a UpdateCollectionBugFilingRequirementsOfProjectVersionBadRequest with default headers values
func NewUpdateCollectionBugFilingRequirementsOfProjectVersionBadRequest() *UpdateCollectionBugFilingRequirementsOfProjectVersionBadRequest {
	return &UpdateCollectionBugFilingRequirementsOfProjectVersionBadRequest{}
}

/*UpdateCollectionBugFilingRequirementsOfProjectVersionBadRequest handles this case with default header values.

Bad Request
*/
type UpdateCollectionBugFilingRequirementsOfProjectVersionBadRequest struct {
	Payload *models.APIResult
}

func (o *UpdateCollectionBugFilingRequirementsOfProjectVersionBadRequest) Error() string {
	return fmt.Sprintf("[PUT /projectVersions/{parentId}/bugfilingrequirements][%d] updateCollectionBugFilingRequirementsOfProjectVersionBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateCollectionBugFilingRequirementsOfProjectVersionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateCollectionBugFilingRequirementsOfProjectVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCollectionBugFilingRequirementsOfProjectVersionUnauthorized creates a UpdateCollectionBugFilingRequirementsOfProjectVersionUnauthorized with default headers values
func NewUpdateCollectionBugFilingRequirementsOfProjectVersionUnauthorized() *UpdateCollectionBugFilingRequirementsOfProjectVersionUnauthorized {
	return &UpdateCollectionBugFilingRequirementsOfProjectVersionUnauthorized{}
}

/*UpdateCollectionBugFilingRequirementsOfProjectVersionUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateCollectionBugFilingRequirementsOfProjectVersionUnauthorized struct {
	Payload *models.APIResult
}

func (o *UpdateCollectionBugFilingRequirementsOfProjectVersionUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /projectVersions/{parentId}/bugfilingrequirements][%d] updateCollectionBugFilingRequirementsOfProjectVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateCollectionBugFilingRequirementsOfProjectVersionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateCollectionBugFilingRequirementsOfProjectVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCollectionBugFilingRequirementsOfProjectVersionForbidden creates a UpdateCollectionBugFilingRequirementsOfProjectVersionForbidden with default headers values
func NewUpdateCollectionBugFilingRequirementsOfProjectVersionForbidden() *UpdateCollectionBugFilingRequirementsOfProjectVersionForbidden {
	return &UpdateCollectionBugFilingRequirementsOfProjectVersionForbidden{}
}

/*UpdateCollectionBugFilingRequirementsOfProjectVersionForbidden handles this case with default header values.

Forbidden
*/
type UpdateCollectionBugFilingRequirementsOfProjectVersionForbidden struct {
	Payload *models.APIResult
}

func (o *UpdateCollectionBugFilingRequirementsOfProjectVersionForbidden) Error() string {
	return fmt.Sprintf("[PUT /projectVersions/{parentId}/bugfilingrequirements][%d] updateCollectionBugFilingRequirementsOfProjectVersionForbidden  %+v", 403, o.Payload)
}

func (o *UpdateCollectionBugFilingRequirementsOfProjectVersionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateCollectionBugFilingRequirementsOfProjectVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCollectionBugFilingRequirementsOfProjectVersionNotFound creates a UpdateCollectionBugFilingRequirementsOfProjectVersionNotFound with default headers values
func NewUpdateCollectionBugFilingRequirementsOfProjectVersionNotFound() *UpdateCollectionBugFilingRequirementsOfProjectVersionNotFound {
	return &UpdateCollectionBugFilingRequirementsOfProjectVersionNotFound{}
}

/*UpdateCollectionBugFilingRequirementsOfProjectVersionNotFound handles this case with default header values.

Not Found
*/
type UpdateCollectionBugFilingRequirementsOfProjectVersionNotFound struct {
	Payload *models.APIResult
}

func (o *UpdateCollectionBugFilingRequirementsOfProjectVersionNotFound) Error() string {
	return fmt.Sprintf("[PUT /projectVersions/{parentId}/bugfilingrequirements][%d] updateCollectionBugFilingRequirementsOfProjectVersionNotFound  %+v", 404, o.Payload)
}

func (o *UpdateCollectionBugFilingRequirementsOfProjectVersionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateCollectionBugFilingRequirementsOfProjectVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCollectionBugFilingRequirementsOfProjectVersionConflict creates a UpdateCollectionBugFilingRequirementsOfProjectVersionConflict with default headers values
func NewUpdateCollectionBugFilingRequirementsOfProjectVersionConflict() *UpdateCollectionBugFilingRequirementsOfProjectVersionConflict {
	return &UpdateCollectionBugFilingRequirementsOfProjectVersionConflict{}
}

/*UpdateCollectionBugFilingRequirementsOfProjectVersionConflict handles this case with default header values.

Conflict
*/
type UpdateCollectionBugFilingRequirementsOfProjectVersionConflict struct {
	Payload *models.APIResult
}

func (o *UpdateCollectionBugFilingRequirementsOfProjectVersionConflict) Error() string {
	return fmt.Sprintf("[PUT /projectVersions/{parentId}/bugfilingrequirements][%d] updateCollectionBugFilingRequirementsOfProjectVersionConflict  %+v", 409, o.Payload)
}

func (o *UpdateCollectionBugFilingRequirementsOfProjectVersionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateCollectionBugFilingRequirementsOfProjectVersionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCollectionBugFilingRequirementsOfProjectVersionInternalServerError creates a UpdateCollectionBugFilingRequirementsOfProjectVersionInternalServerError with default headers values
func NewUpdateCollectionBugFilingRequirementsOfProjectVersionInternalServerError() *UpdateCollectionBugFilingRequirementsOfProjectVersionInternalServerError {
	return &UpdateCollectionBugFilingRequirementsOfProjectVersionInternalServerError{}
}

/*UpdateCollectionBugFilingRequirementsOfProjectVersionInternalServerError handles this case with default header values.

Internal Server Error
*/
type UpdateCollectionBugFilingRequirementsOfProjectVersionInternalServerError struct {
	Payload *models.APIResult
}

func (o *UpdateCollectionBugFilingRequirementsOfProjectVersionInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /projectVersions/{parentId}/bugfilingrequirements][%d] updateCollectionBugFilingRequirementsOfProjectVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateCollectionBugFilingRequirementsOfProjectVersionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateCollectionBugFilingRequirementsOfProjectVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
