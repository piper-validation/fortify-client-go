// Code generated by go-swagger; DO NOT EDIT.

package bug_tracker_of_project_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListBugTrackerOfProjectVersionReader is a Reader for the ListBugTrackerOfProjectVersion structure.
type ListBugTrackerOfProjectVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListBugTrackerOfProjectVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListBugTrackerOfProjectVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListBugTrackerOfProjectVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListBugTrackerOfProjectVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListBugTrackerOfProjectVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListBugTrackerOfProjectVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListBugTrackerOfProjectVersionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListBugTrackerOfProjectVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListBugTrackerOfProjectVersionOK creates a ListBugTrackerOfProjectVersionOK with default headers values
func NewListBugTrackerOfProjectVersionOK() *ListBugTrackerOfProjectVersionOK {
	return &ListBugTrackerOfProjectVersionOK{}
}

/*ListBugTrackerOfProjectVersionOK handles this case with default header values.

OK
*/
type ListBugTrackerOfProjectVersionOK struct {
	Payload *models.APIResultListProjectVersionBugTracker
}

func (o *ListBugTrackerOfProjectVersionOK) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/bugtracker][%d] listBugTrackerOfProjectVersionOK  %+v", 200, o.Payload)
}

func (o *ListBugTrackerOfProjectVersionOK) GetPayload() *models.APIResultListProjectVersionBugTracker {
	return o.Payload
}

func (o *ListBugTrackerOfProjectVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListProjectVersionBugTracker)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListBugTrackerOfProjectVersionBadRequest creates a ListBugTrackerOfProjectVersionBadRequest with default headers values
func NewListBugTrackerOfProjectVersionBadRequest() *ListBugTrackerOfProjectVersionBadRequest {
	return &ListBugTrackerOfProjectVersionBadRequest{}
}

/*ListBugTrackerOfProjectVersionBadRequest handles this case with default header values.

Bad Request
*/
type ListBugTrackerOfProjectVersionBadRequest struct {
	Payload *models.APIResult
}

func (o *ListBugTrackerOfProjectVersionBadRequest) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/bugtracker][%d] listBugTrackerOfProjectVersionBadRequest  %+v", 400, o.Payload)
}

func (o *ListBugTrackerOfProjectVersionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListBugTrackerOfProjectVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListBugTrackerOfProjectVersionUnauthorized creates a ListBugTrackerOfProjectVersionUnauthorized with default headers values
func NewListBugTrackerOfProjectVersionUnauthorized() *ListBugTrackerOfProjectVersionUnauthorized {
	return &ListBugTrackerOfProjectVersionUnauthorized{}
}

/*ListBugTrackerOfProjectVersionUnauthorized handles this case with default header values.

Unauthorized
*/
type ListBugTrackerOfProjectVersionUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListBugTrackerOfProjectVersionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/bugtracker][%d] listBugTrackerOfProjectVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *ListBugTrackerOfProjectVersionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListBugTrackerOfProjectVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListBugTrackerOfProjectVersionForbidden creates a ListBugTrackerOfProjectVersionForbidden with default headers values
func NewListBugTrackerOfProjectVersionForbidden() *ListBugTrackerOfProjectVersionForbidden {
	return &ListBugTrackerOfProjectVersionForbidden{}
}

/*ListBugTrackerOfProjectVersionForbidden handles this case with default header values.

Forbidden
*/
type ListBugTrackerOfProjectVersionForbidden struct {
	Payload *models.APIResult
}

func (o *ListBugTrackerOfProjectVersionForbidden) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/bugtracker][%d] listBugTrackerOfProjectVersionForbidden  %+v", 403, o.Payload)
}

func (o *ListBugTrackerOfProjectVersionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListBugTrackerOfProjectVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListBugTrackerOfProjectVersionNotFound creates a ListBugTrackerOfProjectVersionNotFound with default headers values
func NewListBugTrackerOfProjectVersionNotFound() *ListBugTrackerOfProjectVersionNotFound {
	return &ListBugTrackerOfProjectVersionNotFound{}
}

/*ListBugTrackerOfProjectVersionNotFound handles this case with default header values.

Not Found
*/
type ListBugTrackerOfProjectVersionNotFound struct {
	Payload *models.APIResult
}

func (o *ListBugTrackerOfProjectVersionNotFound) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/bugtracker][%d] listBugTrackerOfProjectVersionNotFound  %+v", 404, o.Payload)
}

func (o *ListBugTrackerOfProjectVersionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListBugTrackerOfProjectVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListBugTrackerOfProjectVersionConflict creates a ListBugTrackerOfProjectVersionConflict with default headers values
func NewListBugTrackerOfProjectVersionConflict() *ListBugTrackerOfProjectVersionConflict {
	return &ListBugTrackerOfProjectVersionConflict{}
}

/*ListBugTrackerOfProjectVersionConflict handles this case with default header values.

Conflict
*/
type ListBugTrackerOfProjectVersionConflict struct {
	Payload *models.APIResult
}

func (o *ListBugTrackerOfProjectVersionConflict) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/bugtracker][%d] listBugTrackerOfProjectVersionConflict  %+v", 409, o.Payload)
}

func (o *ListBugTrackerOfProjectVersionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListBugTrackerOfProjectVersionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListBugTrackerOfProjectVersionInternalServerError creates a ListBugTrackerOfProjectVersionInternalServerError with default headers values
func NewListBugTrackerOfProjectVersionInternalServerError() *ListBugTrackerOfProjectVersionInternalServerError {
	return &ListBugTrackerOfProjectVersionInternalServerError{}
}

/*ListBugTrackerOfProjectVersionInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListBugTrackerOfProjectVersionInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListBugTrackerOfProjectVersionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/bugtracker][%d] listBugTrackerOfProjectVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *ListBugTrackerOfProjectVersionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListBugTrackerOfProjectVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
