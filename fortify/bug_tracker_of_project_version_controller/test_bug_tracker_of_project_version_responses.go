// Code generated by go-swagger; DO NOT EDIT.

package bug_tracker_of_project_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// TestBugTrackerOfProjectVersionReader is a Reader for the TestBugTrackerOfProjectVersion structure.
type TestBugTrackerOfProjectVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TestBugTrackerOfProjectVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTestBugTrackerOfProjectVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewTestBugTrackerOfProjectVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewTestBugTrackerOfProjectVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewTestBugTrackerOfProjectVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewTestBugTrackerOfProjectVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewTestBugTrackerOfProjectVersionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewTestBugTrackerOfProjectVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewTestBugTrackerOfProjectVersionOK creates a TestBugTrackerOfProjectVersionOK with default headers values
func NewTestBugTrackerOfProjectVersionOK() *TestBugTrackerOfProjectVersionOK {
	return &TestBugTrackerOfProjectVersionOK{}
}

/*TestBugTrackerOfProjectVersionOK handles this case with default header values.

OK
*/
type TestBugTrackerOfProjectVersionOK struct {
	Payload *models.APIResultVoid
}

func (o *TestBugTrackerOfProjectVersionOK) Error() string {
	return fmt.Sprintf("[POST /projectVersions/{parentId}/bugtracker/action/test][%d] testBugTrackerOfProjectVersionOK  %+v", 200, o.Payload)
}

func (o *TestBugTrackerOfProjectVersionOK) GetPayload() *models.APIResultVoid {
	return o.Payload
}

func (o *TestBugTrackerOfProjectVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultVoid)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestBugTrackerOfProjectVersionBadRequest creates a TestBugTrackerOfProjectVersionBadRequest with default headers values
func NewTestBugTrackerOfProjectVersionBadRequest() *TestBugTrackerOfProjectVersionBadRequest {
	return &TestBugTrackerOfProjectVersionBadRequest{}
}

/*TestBugTrackerOfProjectVersionBadRequest handles this case with default header values.

Bad Request
*/
type TestBugTrackerOfProjectVersionBadRequest struct {
	Payload *models.APIResult
}

func (o *TestBugTrackerOfProjectVersionBadRequest) Error() string {
	return fmt.Sprintf("[POST /projectVersions/{parentId}/bugtracker/action/test][%d] testBugTrackerOfProjectVersionBadRequest  %+v", 400, o.Payload)
}

func (o *TestBugTrackerOfProjectVersionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *TestBugTrackerOfProjectVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestBugTrackerOfProjectVersionUnauthorized creates a TestBugTrackerOfProjectVersionUnauthorized with default headers values
func NewTestBugTrackerOfProjectVersionUnauthorized() *TestBugTrackerOfProjectVersionUnauthorized {
	return &TestBugTrackerOfProjectVersionUnauthorized{}
}

/*TestBugTrackerOfProjectVersionUnauthorized handles this case with default header values.

Unauthorized
*/
type TestBugTrackerOfProjectVersionUnauthorized struct {
	Payload *models.APIResult
}

func (o *TestBugTrackerOfProjectVersionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /projectVersions/{parentId}/bugtracker/action/test][%d] testBugTrackerOfProjectVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *TestBugTrackerOfProjectVersionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *TestBugTrackerOfProjectVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestBugTrackerOfProjectVersionForbidden creates a TestBugTrackerOfProjectVersionForbidden with default headers values
func NewTestBugTrackerOfProjectVersionForbidden() *TestBugTrackerOfProjectVersionForbidden {
	return &TestBugTrackerOfProjectVersionForbidden{}
}

/*TestBugTrackerOfProjectVersionForbidden handles this case with default header values.

Forbidden
*/
type TestBugTrackerOfProjectVersionForbidden struct {
	Payload *models.APIResult
}

func (o *TestBugTrackerOfProjectVersionForbidden) Error() string {
	return fmt.Sprintf("[POST /projectVersions/{parentId}/bugtracker/action/test][%d] testBugTrackerOfProjectVersionForbidden  %+v", 403, o.Payload)
}

func (o *TestBugTrackerOfProjectVersionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *TestBugTrackerOfProjectVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestBugTrackerOfProjectVersionNotFound creates a TestBugTrackerOfProjectVersionNotFound with default headers values
func NewTestBugTrackerOfProjectVersionNotFound() *TestBugTrackerOfProjectVersionNotFound {
	return &TestBugTrackerOfProjectVersionNotFound{}
}

/*TestBugTrackerOfProjectVersionNotFound handles this case with default header values.

Not Found
*/
type TestBugTrackerOfProjectVersionNotFound struct {
	Payload *models.APIResult
}

func (o *TestBugTrackerOfProjectVersionNotFound) Error() string {
	return fmt.Sprintf("[POST /projectVersions/{parentId}/bugtracker/action/test][%d] testBugTrackerOfProjectVersionNotFound  %+v", 404, o.Payload)
}

func (o *TestBugTrackerOfProjectVersionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *TestBugTrackerOfProjectVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestBugTrackerOfProjectVersionConflict creates a TestBugTrackerOfProjectVersionConflict with default headers values
func NewTestBugTrackerOfProjectVersionConflict() *TestBugTrackerOfProjectVersionConflict {
	return &TestBugTrackerOfProjectVersionConflict{}
}

/*TestBugTrackerOfProjectVersionConflict handles this case with default header values.

Conflict
*/
type TestBugTrackerOfProjectVersionConflict struct {
	Payload *models.APIResult
}

func (o *TestBugTrackerOfProjectVersionConflict) Error() string {
	return fmt.Sprintf("[POST /projectVersions/{parentId}/bugtracker/action/test][%d] testBugTrackerOfProjectVersionConflict  %+v", 409, o.Payload)
}

func (o *TestBugTrackerOfProjectVersionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *TestBugTrackerOfProjectVersionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestBugTrackerOfProjectVersionInternalServerError creates a TestBugTrackerOfProjectVersionInternalServerError with default headers values
func NewTestBugTrackerOfProjectVersionInternalServerError() *TestBugTrackerOfProjectVersionInternalServerError {
	return &TestBugTrackerOfProjectVersionInternalServerError{}
}

/*TestBugTrackerOfProjectVersionInternalServerError handles this case with default header values.

Internal Server Error
*/
type TestBugTrackerOfProjectVersionInternalServerError struct {
	Payload *models.APIResult
}

func (o *TestBugTrackerOfProjectVersionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /projectVersions/{parentId}/bugtracker/action/test][%d] testBugTrackerOfProjectVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *TestBugTrackerOfProjectVersionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *TestBugTrackerOfProjectVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
