// Code generated by go-swagger; DO NOT EDIT.

package bug_tracker_of_project_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// UpdateCollectionBugTrackerOfProjectVersionReader is a Reader for the UpdateCollectionBugTrackerOfProjectVersion structure.
type UpdateCollectionBugTrackerOfProjectVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCollectionBugTrackerOfProjectVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCollectionBugTrackerOfProjectVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateCollectionBugTrackerOfProjectVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateCollectionBugTrackerOfProjectVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateCollectionBugTrackerOfProjectVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateCollectionBugTrackerOfProjectVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateCollectionBugTrackerOfProjectVersionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateCollectionBugTrackerOfProjectVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateCollectionBugTrackerOfProjectVersionOK creates a UpdateCollectionBugTrackerOfProjectVersionOK with default headers values
func NewUpdateCollectionBugTrackerOfProjectVersionOK() *UpdateCollectionBugTrackerOfProjectVersionOK {
	return &UpdateCollectionBugTrackerOfProjectVersionOK{}
}

/*UpdateCollectionBugTrackerOfProjectVersionOK handles this case with default header values.

OK
*/
type UpdateCollectionBugTrackerOfProjectVersionOK struct {
	Payload *models.APIResultListProjectVersionBugTracker
}

func (o *UpdateCollectionBugTrackerOfProjectVersionOK) Error() string {
	return fmt.Sprintf("[PUT /projectVersions/{parentId}/bugtracker][%d] updateCollectionBugTrackerOfProjectVersionOK  %+v", 200, o.Payload)
}

func (o *UpdateCollectionBugTrackerOfProjectVersionOK) GetPayload() *models.APIResultListProjectVersionBugTracker {
	return o.Payload
}

func (o *UpdateCollectionBugTrackerOfProjectVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListProjectVersionBugTracker)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCollectionBugTrackerOfProjectVersionBadRequest creates a UpdateCollectionBugTrackerOfProjectVersionBadRequest with default headers values
func NewUpdateCollectionBugTrackerOfProjectVersionBadRequest() *UpdateCollectionBugTrackerOfProjectVersionBadRequest {
	return &UpdateCollectionBugTrackerOfProjectVersionBadRequest{}
}

/*UpdateCollectionBugTrackerOfProjectVersionBadRequest handles this case with default header values.

Bad Request
*/
type UpdateCollectionBugTrackerOfProjectVersionBadRequest struct {
	Payload *models.APIResult
}

func (o *UpdateCollectionBugTrackerOfProjectVersionBadRequest) Error() string {
	return fmt.Sprintf("[PUT /projectVersions/{parentId}/bugtracker][%d] updateCollectionBugTrackerOfProjectVersionBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateCollectionBugTrackerOfProjectVersionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateCollectionBugTrackerOfProjectVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCollectionBugTrackerOfProjectVersionUnauthorized creates a UpdateCollectionBugTrackerOfProjectVersionUnauthorized with default headers values
func NewUpdateCollectionBugTrackerOfProjectVersionUnauthorized() *UpdateCollectionBugTrackerOfProjectVersionUnauthorized {
	return &UpdateCollectionBugTrackerOfProjectVersionUnauthorized{}
}

/*UpdateCollectionBugTrackerOfProjectVersionUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateCollectionBugTrackerOfProjectVersionUnauthorized struct {
	Payload *models.APIResult
}

func (o *UpdateCollectionBugTrackerOfProjectVersionUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /projectVersions/{parentId}/bugtracker][%d] updateCollectionBugTrackerOfProjectVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateCollectionBugTrackerOfProjectVersionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateCollectionBugTrackerOfProjectVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCollectionBugTrackerOfProjectVersionForbidden creates a UpdateCollectionBugTrackerOfProjectVersionForbidden with default headers values
func NewUpdateCollectionBugTrackerOfProjectVersionForbidden() *UpdateCollectionBugTrackerOfProjectVersionForbidden {
	return &UpdateCollectionBugTrackerOfProjectVersionForbidden{}
}

/*UpdateCollectionBugTrackerOfProjectVersionForbidden handles this case with default header values.

Forbidden
*/
type UpdateCollectionBugTrackerOfProjectVersionForbidden struct {
	Payload *models.APIResult
}

func (o *UpdateCollectionBugTrackerOfProjectVersionForbidden) Error() string {
	return fmt.Sprintf("[PUT /projectVersions/{parentId}/bugtracker][%d] updateCollectionBugTrackerOfProjectVersionForbidden  %+v", 403, o.Payload)
}

func (o *UpdateCollectionBugTrackerOfProjectVersionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateCollectionBugTrackerOfProjectVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCollectionBugTrackerOfProjectVersionNotFound creates a UpdateCollectionBugTrackerOfProjectVersionNotFound with default headers values
func NewUpdateCollectionBugTrackerOfProjectVersionNotFound() *UpdateCollectionBugTrackerOfProjectVersionNotFound {
	return &UpdateCollectionBugTrackerOfProjectVersionNotFound{}
}

/*UpdateCollectionBugTrackerOfProjectVersionNotFound handles this case with default header values.

Not Found
*/
type UpdateCollectionBugTrackerOfProjectVersionNotFound struct {
	Payload *models.APIResult
}

func (o *UpdateCollectionBugTrackerOfProjectVersionNotFound) Error() string {
	return fmt.Sprintf("[PUT /projectVersions/{parentId}/bugtracker][%d] updateCollectionBugTrackerOfProjectVersionNotFound  %+v", 404, o.Payload)
}

func (o *UpdateCollectionBugTrackerOfProjectVersionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateCollectionBugTrackerOfProjectVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCollectionBugTrackerOfProjectVersionConflict creates a UpdateCollectionBugTrackerOfProjectVersionConflict with default headers values
func NewUpdateCollectionBugTrackerOfProjectVersionConflict() *UpdateCollectionBugTrackerOfProjectVersionConflict {
	return &UpdateCollectionBugTrackerOfProjectVersionConflict{}
}

/*UpdateCollectionBugTrackerOfProjectVersionConflict handles this case with default header values.

Conflict
*/
type UpdateCollectionBugTrackerOfProjectVersionConflict struct {
	Payload *models.APIResult
}

func (o *UpdateCollectionBugTrackerOfProjectVersionConflict) Error() string {
	return fmt.Sprintf("[PUT /projectVersions/{parentId}/bugtracker][%d] updateCollectionBugTrackerOfProjectVersionConflict  %+v", 409, o.Payload)
}

func (o *UpdateCollectionBugTrackerOfProjectVersionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateCollectionBugTrackerOfProjectVersionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCollectionBugTrackerOfProjectVersionInternalServerError creates a UpdateCollectionBugTrackerOfProjectVersionInternalServerError with default headers values
func NewUpdateCollectionBugTrackerOfProjectVersionInternalServerError() *UpdateCollectionBugTrackerOfProjectVersionInternalServerError {
	return &UpdateCollectionBugTrackerOfProjectVersionInternalServerError{}
}

/*UpdateCollectionBugTrackerOfProjectVersionInternalServerError handles this case with default header values.

Internal Server Error
*/
type UpdateCollectionBugTrackerOfProjectVersionInternalServerError struct {
	Payload *models.APIResult
}

func (o *UpdateCollectionBugTrackerOfProjectVersionInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /projectVersions/{parentId}/bugtracker][%d] updateCollectionBugTrackerOfProjectVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateCollectionBugTrackerOfProjectVersionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateCollectionBugTrackerOfProjectVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
