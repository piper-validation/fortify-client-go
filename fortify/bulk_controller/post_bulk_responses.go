// Code generated by go-swagger; DO NOT EDIT.

package bulk_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// PostBulkReader is a Reader for the PostBulk structure.
type PostBulkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostBulkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostBulkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostBulkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostBulkUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostBulkForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostBulkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostBulkConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostBulkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostBulkOK creates a PostBulkOK with default headers values
func NewPostBulkOK() *PostBulkOK {
	return &PostBulkOK{}
}

/*PostBulkOK handles this case with default header values.

OK
*/
type PostBulkOK struct {
	Payload *models.APIResultListBulkResponseItem
}

func (o *PostBulkOK) Error() string {
	return fmt.Sprintf("[POST /bulk][%d] postBulkOK  %+v", 200, o.Payload)
}

func (o *PostBulkOK) GetPayload() *models.APIResultListBulkResponseItem {
	return o.Payload
}

func (o *PostBulkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListBulkResponseItem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostBulkBadRequest creates a PostBulkBadRequest with default headers values
func NewPostBulkBadRequest() *PostBulkBadRequest {
	return &PostBulkBadRequest{}
}

/*PostBulkBadRequest handles this case with default header values.

Bad Request
*/
type PostBulkBadRequest struct {
	Payload *models.APIResult
}

func (o *PostBulkBadRequest) Error() string {
	return fmt.Sprintf("[POST /bulk][%d] postBulkBadRequest  %+v", 400, o.Payload)
}

func (o *PostBulkBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *PostBulkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostBulkUnauthorized creates a PostBulkUnauthorized with default headers values
func NewPostBulkUnauthorized() *PostBulkUnauthorized {
	return &PostBulkUnauthorized{}
}

/*PostBulkUnauthorized handles this case with default header values.

Unauthorized
*/
type PostBulkUnauthorized struct {
	Payload *models.APIResult
}

func (o *PostBulkUnauthorized) Error() string {
	return fmt.Sprintf("[POST /bulk][%d] postBulkUnauthorized  %+v", 401, o.Payload)
}

func (o *PostBulkUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *PostBulkUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostBulkForbidden creates a PostBulkForbidden with default headers values
func NewPostBulkForbidden() *PostBulkForbidden {
	return &PostBulkForbidden{}
}

/*PostBulkForbidden handles this case with default header values.

Forbidden
*/
type PostBulkForbidden struct {
	Payload *models.APIResult
}

func (o *PostBulkForbidden) Error() string {
	return fmt.Sprintf("[POST /bulk][%d] postBulkForbidden  %+v", 403, o.Payload)
}

func (o *PostBulkForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *PostBulkForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostBulkNotFound creates a PostBulkNotFound with default headers values
func NewPostBulkNotFound() *PostBulkNotFound {
	return &PostBulkNotFound{}
}

/*PostBulkNotFound handles this case with default header values.

Not Found
*/
type PostBulkNotFound struct {
	Payload *models.APIResult
}

func (o *PostBulkNotFound) Error() string {
	return fmt.Sprintf("[POST /bulk][%d] postBulkNotFound  %+v", 404, o.Payload)
}

func (o *PostBulkNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *PostBulkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostBulkConflict creates a PostBulkConflict with default headers values
func NewPostBulkConflict() *PostBulkConflict {
	return &PostBulkConflict{}
}

/*PostBulkConflict handles this case with default header values.

Conflict
*/
type PostBulkConflict struct {
	Payload *models.APIResult
}

func (o *PostBulkConflict) Error() string {
	return fmt.Sprintf("[POST /bulk][%d] postBulkConflict  %+v", 409, o.Payload)
}

func (o *PostBulkConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *PostBulkConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostBulkInternalServerError creates a PostBulkInternalServerError with default headers values
func NewPostBulkInternalServerError() *PostBulkInternalServerError {
	return &PostBulkInternalServerError{}
}

/*PostBulkInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostBulkInternalServerError struct {
	Payload *models.APIResult
}

func (o *PostBulkInternalServerError) Error() string {
	return fmt.Sprintf("[POST /bulk][%d] postBulkInternalServerError  %+v", 500, o.Payload)
}

func (o *PostBulkInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *PostBulkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
