// Code generated by go-swagger; DO NOT EDIT.

package cloud_job_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ReadCloudJobReader is a Reader for the ReadCloudJob structure.
type ReadCloudJobReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadCloudJobReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadCloudJobOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReadCloudJobBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReadCloudJobUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewReadCloudJobForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReadCloudJobNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewReadCloudJobConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadCloudJobInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadCloudJobOK creates a ReadCloudJobOK with default headers values
func NewReadCloudJobOK() *ReadCloudJobOK {
	return &ReadCloudJobOK{}
}

/*ReadCloudJobOK handles this case with default header values.

OK
*/
type ReadCloudJobOK struct {
	Payload *models.APIResultCloudJob
}

func (o *ReadCloudJobOK) Error() string {
	return fmt.Sprintf("[GET /cloudjobs/{jobToken}][%d] readCloudJobOK  %+v", 200, o.Payload)
}

func (o *ReadCloudJobOK) GetPayload() *models.APIResultCloudJob {
	return o.Payload
}

func (o *ReadCloudJobOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultCloudJob)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadCloudJobBadRequest creates a ReadCloudJobBadRequest with default headers values
func NewReadCloudJobBadRequest() *ReadCloudJobBadRequest {
	return &ReadCloudJobBadRequest{}
}

/*ReadCloudJobBadRequest handles this case with default header values.

Bad Request
*/
type ReadCloudJobBadRequest struct {
	Payload *models.APIResult
}

func (o *ReadCloudJobBadRequest) Error() string {
	return fmt.Sprintf("[GET /cloudjobs/{jobToken}][%d] readCloudJobBadRequest  %+v", 400, o.Payload)
}

func (o *ReadCloudJobBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadCloudJobBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadCloudJobUnauthorized creates a ReadCloudJobUnauthorized with default headers values
func NewReadCloudJobUnauthorized() *ReadCloudJobUnauthorized {
	return &ReadCloudJobUnauthorized{}
}

/*ReadCloudJobUnauthorized handles this case with default header values.

Unauthorized
*/
type ReadCloudJobUnauthorized struct {
	Payload *models.APIResult
}

func (o *ReadCloudJobUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cloudjobs/{jobToken}][%d] readCloudJobUnauthorized  %+v", 401, o.Payload)
}

func (o *ReadCloudJobUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadCloudJobUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadCloudJobForbidden creates a ReadCloudJobForbidden with default headers values
func NewReadCloudJobForbidden() *ReadCloudJobForbidden {
	return &ReadCloudJobForbidden{}
}

/*ReadCloudJobForbidden handles this case with default header values.

Forbidden
*/
type ReadCloudJobForbidden struct {
	Payload *models.APIResult
}

func (o *ReadCloudJobForbidden) Error() string {
	return fmt.Sprintf("[GET /cloudjobs/{jobToken}][%d] readCloudJobForbidden  %+v", 403, o.Payload)
}

func (o *ReadCloudJobForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadCloudJobForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadCloudJobNotFound creates a ReadCloudJobNotFound with default headers values
func NewReadCloudJobNotFound() *ReadCloudJobNotFound {
	return &ReadCloudJobNotFound{}
}

/*ReadCloudJobNotFound handles this case with default header values.

Not Found
*/
type ReadCloudJobNotFound struct {
	Payload *models.APIResult
}

func (o *ReadCloudJobNotFound) Error() string {
	return fmt.Sprintf("[GET /cloudjobs/{jobToken}][%d] readCloudJobNotFound  %+v", 404, o.Payload)
}

func (o *ReadCloudJobNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadCloudJobNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadCloudJobConflict creates a ReadCloudJobConflict with default headers values
func NewReadCloudJobConflict() *ReadCloudJobConflict {
	return &ReadCloudJobConflict{}
}

/*ReadCloudJobConflict handles this case with default header values.

Conflict
*/
type ReadCloudJobConflict struct {
	Payload *models.APIResult
}

func (o *ReadCloudJobConflict) Error() string {
	return fmt.Sprintf("[GET /cloudjobs/{jobToken}][%d] readCloudJobConflict  %+v", 409, o.Payload)
}

func (o *ReadCloudJobConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadCloudJobConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadCloudJobInternalServerError creates a ReadCloudJobInternalServerError with default headers values
func NewReadCloudJobInternalServerError() *ReadCloudJobInternalServerError {
	return &ReadCloudJobInternalServerError{}
}

/*ReadCloudJobInternalServerError handles this case with default header values.

Internal Server Error
*/
type ReadCloudJobInternalServerError struct {
	Payload *models.APIResult
}

func (o *ReadCloudJobInternalServerError) Error() string {
	return fmt.Sprintf("[GET /cloudjobs/{jobToken}][%d] readCloudJobInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadCloudJobInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadCloudJobInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
