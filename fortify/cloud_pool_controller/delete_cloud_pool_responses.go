// Code generated by go-swagger; DO NOT EDIT.

package cloud_pool_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// DeleteCloudPoolReader is a Reader for the DeleteCloudPool structure.
type DeleteCloudPoolReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCloudPoolReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteCloudPoolOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteCloudPoolBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteCloudPoolUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteCloudPoolForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteCloudPoolNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteCloudPoolConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteCloudPoolInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteCloudPoolOK creates a DeleteCloudPoolOK with default headers values
func NewDeleteCloudPoolOK() *DeleteCloudPoolOK {
	return &DeleteCloudPoolOK{}
}

/*DeleteCloudPoolOK handles this case with default header values.

OK
*/
type DeleteCloudPoolOK struct {
	Payload *models.APIResultVoid
}

func (o *DeleteCloudPoolOK) Error() string {
	return fmt.Sprintf("[DELETE /cloudpools/{uuid}][%d] deleteCloudPoolOK  %+v", 200, o.Payload)
}

func (o *DeleteCloudPoolOK) GetPayload() *models.APIResultVoid {
	return o.Payload
}

func (o *DeleteCloudPoolOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultVoid)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCloudPoolBadRequest creates a DeleteCloudPoolBadRequest with default headers values
func NewDeleteCloudPoolBadRequest() *DeleteCloudPoolBadRequest {
	return &DeleteCloudPoolBadRequest{}
}

/*DeleteCloudPoolBadRequest handles this case with default header values.

Bad Request
*/
type DeleteCloudPoolBadRequest struct {
	Payload *models.APIResult
}

func (o *DeleteCloudPoolBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /cloudpools/{uuid}][%d] deleteCloudPoolBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteCloudPoolBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteCloudPoolBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCloudPoolUnauthorized creates a DeleteCloudPoolUnauthorized with default headers values
func NewDeleteCloudPoolUnauthorized() *DeleteCloudPoolUnauthorized {
	return &DeleteCloudPoolUnauthorized{}
}

/*DeleteCloudPoolUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteCloudPoolUnauthorized struct {
	Payload *models.APIResult
}

func (o *DeleteCloudPoolUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /cloudpools/{uuid}][%d] deleteCloudPoolUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteCloudPoolUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteCloudPoolUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCloudPoolForbidden creates a DeleteCloudPoolForbidden with default headers values
func NewDeleteCloudPoolForbidden() *DeleteCloudPoolForbidden {
	return &DeleteCloudPoolForbidden{}
}

/*DeleteCloudPoolForbidden handles this case with default header values.

Forbidden
*/
type DeleteCloudPoolForbidden struct {
	Payload *models.APIResult
}

func (o *DeleteCloudPoolForbidden) Error() string {
	return fmt.Sprintf("[DELETE /cloudpools/{uuid}][%d] deleteCloudPoolForbidden  %+v", 403, o.Payload)
}

func (o *DeleteCloudPoolForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteCloudPoolForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCloudPoolNotFound creates a DeleteCloudPoolNotFound with default headers values
func NewDeleteCloudPoolNotFound() *DeleteCloudPoolNotFound {
	return &DeleteCloudPoolNotFound{}
}

/*DeleteCloudPoolNotFound handles this case with default header values.

Not Found
*/
type DeleteCloudPoolNotFound struct {
	Payload *models.APIResult
}

func (o *DeleteCloudPoolNotFound) Error() string {
	return fmt.Sprintf("[DELETE /cloudpools/{uuid}][%d] deleteCloudPoolNotFound  %+v", 404, o.Payload)
}

func (o *DeleteCloudPoolNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteCloudPoolNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCloudPoolConflict creates a DeleteCloudPoolConflict with default headers values
func NewDeleteCloudPoolConflict() *DeleteCloudPoolConflict {
	return &DeleteCloudPoolConflict{}
}

/*DeleteCloudPoolConflict handles this case with default header values.

Conflict
*/
type DeleteCloudPoolConflict struct {
	Payload *models.APIResult
}

func (o *DeleteCloudPoolConflict) Error() string {
	return fmt.Sprintf("[DELETE /cloudpools/{uuid}][%d] deleteCloudPoolConflict  %+v", 409, o.Payload)
}

func (o *DeleteCloudPoolConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteCloudPoolConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCloudPoolInternalServerError creates a DeleteCloudPoolInternalServerError with default headers values
func NewDeleteCloudPoolInternalServerError() *DeleteCloudPoolInternalServerError {
	return &DeleteCloudPoolInternalServerError{}
}

/*DeleteCloudPoolInternalServerError handles this case with default header values.

Internal Server Error
*/
type DeleteCloudPoolInternalServerError struct {
	Payload *models.APIResult
}

func (o *DeleteCloudPoolInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /cloudpools/{uuid}][%d] deleteCloudPoolInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteCloudPoolInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteCloudPoolInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
