// Code generated by go-swagger; DO NOT EDIT.

package cloud_worker_of_cloud_pool_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// AssignCloudWorkerOfCloudPoolReader is a Reader for the AssignCloudWorkerOfCloudPool structure.
type AssignCloudWorkerOfCloudPoolReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AssignCloudWorkerOfCloudPoolReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAssignCloudWorkerOfCloudPoolOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAssignCloudWorkerOfCloudPoolBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAssignCloudWorkerOfCloudPoolUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAssignCloudWorkerOfCloudPoolForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAssignCloudWorkerOfCloudPoolNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewAssignCloudWorkerOfCloudPoolConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAssignCloudWorkerOfCloudPoolInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAssignCloudWorkerOfCloudPoolOK creates a AssignCloudWorkerOfCloudPoolOK with default headers values
func NewAssignCloudWorkerOfCloudPoolOK() *AssignCloudWorkerOfCloudPoolOK {
	return &AssignCloudWorkerOfCloudPoolOK{}
}

/*AssignCloudWorkerOfCloudPoolOK handles this case with default header values.

OK
*/
type AssignCloudWorkerOfCloudPoolOK struct {
	Payload *models.APIResultCloudPoolWorkerActionResponse
}

func (o *AssignCloudWorkerOfCloudPoolOK) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/workers/action/assign][%d] assignCloudWorkerOfCloudPoolOK  %+v", 200, o.Payload)
}

func (o *AssignCloudWorkerOfCloudPoolOK) GetPayload() *models.APIResultCloudPoolWorkerActionResponse {
	return o.Payload
}

func (o *AssignCloudWorkerOfCloudPoolOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultCloudPoolWorkerActionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAssignCloudWorkerOfCloudPoolBadRequest creates a AssignCloudWorkerOfCloudPoolBadRequest with default headers values
func NewAssignCloudWorkerOfCloudPoolBadRequest() *AssignCloudWorkerOfCloudPoolBadRequest {
	return &AssignCloudWorkerOfCloudPoolBadRequest{}
}

/*AssignCloudWorkerOfCloudPoolBadRequest handles this case with default header values.

Bad Request
*/
type AssignCloudWorkerOfCloudPoolBadRequest struct {
	Payload *models.APIResult
}

func (o *AssignCloudWorkerOfCloudPoolBadRequest) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/workers/action/assign][%d] assignCloudWorkerOfCloudPoolBadRequest  %+v", 400, o.Payload)
}

func (o *AssignCloudWorkerOfCloudPoolBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *AssignCloudWorkerOfCloudPoolBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAssignCloudWorkerOfCloudPoolUnauthorized creates a AssignCloudWorkerOfCloudPoolUnauthorized with default headers values
func NewAssignCloudWorkerOfCloudPoolUnauthorized() *AssignCloudWorkerOfCloudPoolUnauthorized {
	return &AssignCloudWorkerOfCloudPoolUnauthorized{}
}

/*AssignCloudWorkerOfCloudPoolUnauthorized handles this case with default header values.

Unauthorized
*/
type AssignCloudWorkerOfCloudPoolUnauthorized struct {
	Payload *models.APIResult
}

func (o *AssignCloudWorkerOfCloudPoolUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/workers/action/assign][%d] assignCloudWorkerOfCloudPoolUnauthorized  %+v", 401, o.Payload)
}

func (o *AssignCloudWorkerOfCloudPoolUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *AssignCloudWorkerOfCloudPoolUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAssignCloudWorkerOfCloudPoolForbidden creates a AssignCloudWorkerOfCloudPoolForbidden with default headers values
func NewAssignCloudWorkerOfCloudPoolForbidden() *AssignCloudWorkerOfCloudPoolForbidden {
	return &AssignCloudWorkerOfCloudPoolForbidden{}
}

/*AssignCloudWorkerOfCloudPoolForbidden handles this case with default header values.

Forbidden
*/
type AssignCloudWorkerOfCloudPoolForbidden struct {
	Payload *models.APIResult
}

func (o *AssignCloudWorkerOfCloudPoolForbidden) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/workers/action/assign][%d] assignCloudWorkerOfCloudPoolForbidden  %+v", 403, o.Payload)
}

func (o *AssignCloudWorkerOfCloudPoolForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *AssignCloudWorkerOfCloudPoolForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAssignCloudWorkerOfCloudPoolNotFound creates a AssignCloudWorkerOfCloudPoolNotFound with default headers values
func NewAssignCloudWorkerOfCloudPoolNotFound() *AssignCloudWorkerOfCloudPoolNotFound {
	return &AssignCloudWorkerOfCloudPoolNotFound{}
}

/*AssignCloudWorkerOfCloudPoolNotFound handles this case with default header values.

Not Found
*/
type AssignCloudWorkerOfCloudPoolNotFound struct {
	Payload *models.APIResult
}

func (o *AssignCloudWorkerOfCloudPoolNotFound) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/workers/action/assign][%d] assignCloudWorkerOfCloudPoolNotFound  %+v", 404, o.Payload)
}

func (o *AssignCloudWorkerOfCloudPoolNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *AssignCloudWorkerOfCloudPoolNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAssignCloudWorkerOfCloudPoolConflict creates a AssignCloudWorkerOfCloudPoolConflict with default headers values
func NewAssignCloudWorkerOfCloudPoolConflict() *AssignCloudWorkerOfCloudPoolConflict {
	return &AssignCloudWorkerOfCloudPoolConflict{}
}

/*AssignCloudWorkerOfCloudPoolConflict handles this case with default header values.

Conflict
*/
type AssignCloudWorkerOfCloudPoolConflict struct {
	Payload *models.APIResult
}

func (o *AssignCloudWorkerOfCloudPoolConflict) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/workers/action/assign][%d] assignCloudWorkerOfCloudPoolConflict  %+v", 409, o.Payload)
}

func (o *AssignCloudWorkerOfCloudPoolConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *AssignCloudWorkerOfCloudPoolConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAssignCloudWorkerOfCloudPoolInternalServerError creates a AssignCloudWorkerOfCloudPoolInternalServerError with default headers values
func NewAssignCloudWorkerOfCloudPoolInternalServerError() *AssignCloudWorkerOfCloudPoolInternalServerError {
	return &AssignCloudWorkerOfCloudPoolInternalServerError{}
}

/*AssignCloudWorkerOfCloudPoolInternalServerError handles this case with default header values.

Internal Server Error
*/
type AssignCloudWorkerOfCloudPoolInternalServerError struct {
	Payload *models.APIResult
}

func (o *AssignCloudWorkerOfCloudPoolInternalServerError) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/workers/action/assign][%d] assignCloudWorkerOfCloudPoolInternalServerError  %+v", 500, o.Payload)
}

func (o *AssignCloudWorkerOfCloudPoolInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *AssignCloudWorkerOfCloudPoolInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
