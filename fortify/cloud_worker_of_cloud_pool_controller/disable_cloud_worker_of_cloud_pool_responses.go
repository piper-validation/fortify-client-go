// Code generated by go-swagger; DO NOT EDIT.

package cloud_worker_of_cloud_pool_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// DisableCloudWorkerOfCloudPoolReader is a Reader for the DisableCloudWorkerOfCloudPool structure.
type DisableCloudWorkerOfCloudPoolReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DisableCloudWorkerOfCloudPoolReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDisableCloudWorkerOfCloudPoolOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDisableCloudWorkerOfCloudPoolBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDisableCloudWorkerOfCloudPoolUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDisableCloudWorkerOfCloudPoolForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDisableCloudWorkerOfCloudPoolNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDisableCloudWorkerOfCloudPoolConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDisableCloudWorkerOfCloudPoolInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDisableCloudWorkerOfCloudPoolOK creates a DisableCloudWorkerOfCloudPoolOK with default headers values
func NewDisableCloudWorkerOfCloudPoolOK() *DisableCloudWorkerOfCloudPoolOK {
	return &DisableCloudWorkerOfCloudPoolOK{}
}

/*DisableCloudWorkerOfCloudPoolOK handles this case with default header values.

OK
*/
type DisableCloudWorkerOfCloudPoolOK struct {
	Payload *models.APIResultCloudPoolWorkerActionResponse
}

func (o *DisableCloudWorkerOfCloudPoolOK) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/workers/action/disable][%d] disableCloudWorkerOfCloudPoolOK  %+v", 200, o.Payload)
}

func (o *DisableCloudWorkerOfCloudPoolOK) GetPayload() *models.APIResultCloudPoolWorkerActionResponse {
	return o.Payload
}

func (o *DisableCloudWorkerOfCloudPoolOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultCloudPoolWorkerActionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisableCloudWorkerOfCloudPoolBadRequest creates a DisableCloudWorkerOfCloudPoolBadRequest with default headers values
func NewDisableCloudWorkerOfCloudPoolBadRequest() *DisableCloudWorkerOfCloudPoolBadRequest {
	return &DisableCloudWorkerOfCloudPoolBadRequest{}
}

/*DisableCloudWorkerOfCloudPoolBadRequest handles this case with default header values.

Bad Request
*/
type DisableCloudWorkerOfCloudPoolBadRequest struct {
	Payload *models.APIResult
}

func (o *DisableCloudWorkerOfCloudPoolBadRequest) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/workers/action/disable][%d] disableCloudWorkerOfCloudPoolBadRequest  %+v", 400, o.Payload)
}

func (o *DisableCloudWorkerOfCloudPoolBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DisableCloudWorkerOfCloudPoolBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisableCloudWorkerOfCloudPoolUnauthorized creates a DisableCloudWorkerOfCloudPoolUnauthorized with default headers values
func NewDisableCloudWorkerOfCloudPoolUnauthorized() *DisableCloudWorkerOfCloudPoolUnauthorized {
	return &DisableCloudWorkerOfCloudPoolUnauthorized{}
}

/*DisableCloudWorkerOfCloudPoolUnauthorized handles this case with default header values.

Unauthorized
*/
type DisableCloudWorkerOfCloudPoolUnauthorized struct {
	Payload *models.APIResult
}

func (o *DisableCloudWorkerOfCloudPoolUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/workers/action/disable][%d] disableCloudWorkerOfCloudPoolUnauthorized  %+v", 401, o.Payload)
}

func (o *DisableCloudWorkerOfCloudPoolUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DisableCloudWorkerOfCloudPoolUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisableCloudWorkerOfCloudPoolForbidden creates a DisableCloudWorkerOfCloudPoolForbidden with default headers values
func NewDisableCloudWorkerOfCloudPoolForbidden() *DisableCloudWorkerOfCloudPoolForbidden {
	return &DisableCloudWorkerOfCloudPoolForbidden{}
}

/*DisableCloudWorkerOfCloudPoolForbidden handles this case with default header values.

Forbidden
*/
type DisableCloudWorkerOfCloudPoolForbidden struct {
	Payload *models.APIResult
}

func (o *DisableCloudWorkerOfCloudPoolForbidden) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/workers/action/disable][%d] disableCloudWorkerOfCloudPoolForbidden  %+v", 403, o.Payload)
}

func (o *DisableCloudWorkerOfCloudPoolForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DisableCloudWorkerOfCloudPoolForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisableCloudWorkerOfCloudPoolNotFound creates a DisableCloudWorkerOfCloudPoolNotFound with default headers values
func NewDisableCloudWorkerOfCloudPoolNotFound() *DisableCloudWorkerOfCloudPoolNotFound {
	return &DisableCloudWorkerOfCloudPoolNotFound{}
}

/*DisableCloudWorkerOfCloudPoolNotFound handles this case with default header values.

Not Found
*/
type DisableCloudWorkerOfCloudPoolNotFound struct {
	Payload *models.APIResult
}

func (o *DisableCloudWorkerOfCloudPoolNotFound) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/workers/action/disable][%d] disableCloudWorkerOfCloudPoolNotFound  %+v", 404, o.Payload)
}

func (o *DisableCloudWorkerOfCloudPoolNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DisableCloudWorkerOfCloudPoolNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisableCloudWorkerOfCloudPoolConflict creates a DisableCloudWorkerOfCloudPoolConflict with default headers values
func NewDisableCloudWorkerOfCloudPoolConflict() *DisableCloudWorkerOfCloudPoolConflict {
	return &DisableCloudWorkerOfCloudPoolConflict{}
}

/*DisableCloudWorkerOfCloudPoolConflict handles this case with default header values.

Conflict
*/
type DisableCloudWorkerOfCloudPoolConflict struct {
	Payload *models.APIResult
}

func (o *DisableCloudWorkerOfCloudPoolConflict) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/workers/action/disable][%d] disableCloudWorkerOfCloudPoolConflict  %+v", 409, o.Payload)
}

func (o *DisableCloudWorkerOfCloudPoolConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DisableCloudWorkerOfCloudPoolConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisableCloudWorkerOfCloudPoolInternalServerError creates a DisableCloudWorkerOfCloudPoolInternalServerError with default headers values
func NewDisableCloudWorkerOfCloudPoolInternalServerError() *DisableCloudWorkerOfCloudPoolInternalServerError {
	return &DisableCloudWorkerOfCloudPoolInternalServerError{}
}

/*DisableCloudWorkerOfCloudPoolInternalServerError handles this case with default header values.

Internal Server Error
*/
type DisableCloudWorkerOfCloudPoolInternalServerError struct {
	Payload *models.APIResult
}

func (o *DisableCloudWorkerOfCloudPoolInternalServerError) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/workers/action/disable][%d] disableCloudWorkerOfCloudPoolInternalServerError  %+v", 500, o.Payload)
}

func (o *DisableCloudWorkerOfCloudPoolInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DisableCloudWorkerOfCloudPoolInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
