// Code generated by go-swagger; DO NOT EDIT.

package cloud_worker_of_cloud_pool_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ReplaceCloudWorkerOfCloudPoolReader is a Reader for the ReplaceCloudWorkerOfCloudPool structure.
type ReplaceCloudWorkerOfCloudPoolReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReplaceCloudWorkerOfCloudPoolReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReplaceCloudWorkerOfCloudPoolOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReplaceCloudWorkerOfCloudPoolBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReplaceCloudWorkerOfCloudPoolUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewReplaceCloudWorkerOfCloudPoolForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReplaceCloudWorkerOfCloudPoolNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewReplaceCloudWorkerOfCloudPoolConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReplaceCloudWorkerOfCloudPoolInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReplaceCloudWorkerOfCloudPoolOK creates a ReplaceCloudWorkerOfCloudPoolOK with default headers values
func NewReplaceCloudWorkerOfCloudPoolOK() *ReplaceCloudWorkerOfCloudPoolOK {
	return &ReplaceCloudWorkerOfCloudPoolOK{}
}

/*ReplaceCloudWorkerOfCloudPoolOK handles this case with default header values.

OK
*/
type ReplaceCloudWorkerOfCloudPoolOK struct {
	Payload *models.APIResultCloudPoolWorkerActionResponse
}

func (o *ReplaceCloudWorkerOfCloudPoolOK) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/workers/action/replace][%d] replaceCloudWorkerOfCloudPoolOK  %+v", 200, o.Payload)
}

func (o *ReplaceCloudWorkerOfCloudPoolOK) GetPayload() *models.APIResultCloudPoolWorkerActionResponse {
	return o.Payload
}

func (o *ReplaceCloudWorkerOfCloudPoolOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultCloudPoolWorkerActionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCloudWorkerOfCloudPoolBadRequest creates a ReplaceCloudWorkerOfCloudPoolBadRequest with default headers values
func NewReplaceCloudWorkerOfCloudPoolBadRequest() *ReplaceCloudWorkerOfCloudPoolBadRequest {
	return &ReplaceCloudWorkerOfCloudPoolBadRequest{}
}

/*ReplaceCloudWorkerOfCloudPoolBadRequest handles this case with default header values.

Bad Request
*/
type ReplaceCloudWorkerOfCloudPoolBadRequest struct {
	Payload *models.APIResult
}

func (o *ReplaceCloudWorkerOfCloudPoolBadRequest) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/workers/action/replace][%d] replaceCloudWorkerOfCloudPoolBadRequest  %+v", 400, o.Payload)
}

func (o *ReplaceCloudWorkerOfCloudPoolBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReplaceCloudWorkerOfCloudPoolBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCloudWorkerOfCloudPoolUnauthorized creates a ReplaceCloudWorkerOfCloudPoolUnauthorized with default headers values
func NewReplaceCloudWorkerOfCloudPoolUnauthorized() *ReplaceCloudWorkerOfCloudPoolUnauthorized {
	return &ReplaceCloudWorkerOfCloudPoolUnauthorized{}
}

/*ReplaceCloudWorkerOfCloudPoolUnauthorized handles this case with default header values.

Unauthorized
*/
type ReplaceCloudWorkerOfCloudPoolUnauthorized struct {
	Payload *models.APIResult
}

func (o *ReplaceCloudWorkerOfCloudPoolUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/workers/action/replace][%d] replaceCloudWorkerOfCloudPoolUnauthorized  %+v", 401, o.Payload)
}

func (o *ReplaceCloudWorkerOfCloudPoolUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReplaceCloudWorkerOfCloudPoolUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCloudWorkerOfCloudPoolForbidden creates a ReplaceCloudWorkerOfCloudPoolForbidden with default headers values
func NewReplaceCloudWorkerOfCloudPoolForbidden() *ReplaceCloudWorkerOfCloudPoolForbidden {
	return &ReplaceCloudWorkerOfCloudPoolForbidden{}
}

/*ReplaceCloudWorkerOfCloudPoolForbidden handles this case with default header values.

Forbidden
*/
type ReplaceCloudWorkerOfCloudPoolForbidden struct {
	Payload *models.APIResult
}

func (o *ReplaceCloudWorkerOfCloudPoolForbidden) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/workers/action/replace][%d] replaceCloudWorkerOfCloudPoolForbidden  %+v", 403, o.Payload)
}

func (o *ReplaceCloudWorkerOfCloudPoolForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReplaceCloudWorkerOfCloudPoolForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCloudWorkerOfCloudPoolNotFound creates a ReplaceCloudWorkerOfCloudPoolNotFound with default headers values
func NewReplaceCloudWorkerOfCloudPoolNotFound() *ReplaceCloudWorkerOfCloudPoolNotFound {
	return &ReplaceCloudWorkerOfCloudPoolNotFound{}
}

/*ReplaceCloudWorkerOfCloudPoolNotFound handles this case with default header values.

Not Found
*/
type ReplaceCloudWorkerOfCloudPoolNotFound struct {
	Payload *models.APIResult
}

func (o *ReplaceCloudWorkerOfCloudPoolNotFound) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/workers/action/replace][%d] replaceCloudWorkerOfCloudPoolNotFound  %+v", 404, o.Payload)
}

func (o *ReplaceCloudWorkerOfCloudPoolNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReplaceCloudWorkerOfCloudPoolNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCloudWorkerOfCloudPoolConflict creates a ReplaceCloudWorkerOfCloudPoolConflict with default headers values
func NewReplaceCloudWorkerOfCloudPoolConflict() *ReplaceCloudWorkerOfCloudPoolConflict {
	return &ReplaceCloudWorkerOfCloudPoolConflict{}
}

/*ReplaceCloudWorkerOfCloudPoolConflict handles this case with default header values.

Conflict
*/
type ReplaceCloudWorkerOfCloudPoolConflict struct {
	Payload *models.APIResult
}

func (o *ReplaceCloudWorkerOfCloudPoolConflict) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/workers/action/replace][%d] replaceCloudWorkerOfCloudPoolConflict  %+v", 409, o.Payload)
}

func (o *ReplaceCloudWorkerOfCloudPoolConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReplaceCloudWorkerOfCloudPoolConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCloudWorkerOfCloudPoolInternalServerError creates a ReplaceCloudWorkerOfCloudPoolInternalServerError with default headers values
func NewReplaceCloudWorkerOfCloudPoolInternalServerError() *ReplaceCloudWorkerOfCloudPoolInternalServerError {
	return &ReplaceCloudWorkerOfCloudPoolInternalServerError{}
}

/*ReplaceCloudWorkerOfCloudPoolInternalServerError handles this case with default header values.

Internal Server Error
*/
type ReplaceCloudWorkerOfCloudPoolInternalServerError struct {
	Payload *models.APIResult
}

func (o *ReplaceCloudWorkerOfCloudPoolInternalServerError) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/workers/action/replace][%d] replaceCloudWorkerOfCloudPoolInternalServerError  %+v", 500, o.Payload)
}

func (o *ReplaceCloudWorkerOfCloudPoolInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReplaceCloudWorkerOfCloudPoolInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
