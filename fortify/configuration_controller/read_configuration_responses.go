// Code generated by go-swagger; DO NOT EDIT.

package configuration_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ReadConfigurationReader is a Reader for the ReadConfiguration structure.
type ReadConfigurationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadConfigurationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadConfigurationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReadConfigurationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReadConfigurationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewReadConfigurationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReadConfigurationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewReadConfigurationConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadConfigurationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadConfigurationOK creates a ReadConfigurationOK with default headers values
func NewReadConfigurationOK() *ReadConfigurationOK {
	return &ReadConfigurationOK{}
}

/*ReadConfigurationOK handles this case with default header values.

OK
*/
type ReadConfigurationOK struct {
	Payload *models.APIResultConfigProperty
}

func (o *ReadConfigurationOK) Error() string {
	return fmt.Sprintf("[GET /configuration/{id}][%d] readConfigurationOK  %+v", 200, o.Payload)
}

func (o *ReadConfigurationOK) GetPayload() *models.APIResultConfigProperty {
	return o.Payload
}

func (o *ReadConfigurationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultConfigProperty)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadConfigurationBadRequest creates a ReadConfigurationBadRequest with default headers values
func NewReadConfigurationBadRequest() *ReadConfigurationBadRequest {
	return &ReadConfigurationBadRequest{}
}

/*ReadConfigurationBadRequest handles this case with default header values.

Bad Request
*/
type ReadConfigurationBadRequest struct {
	Payload *models.APIResult
}

func (o *ReadConfigurationBadRequest) Error() string {
	return fmt.Sprintf("[GET /configuration/{id}][%d] readConfigurationBadRequest  %+v", 400, o.Payload)
}

func (o *ReadConfigurationBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadConfigurationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadConfigurationUnauthorized creates a ReadConfigurationUnauthorized with default headers values
func NewReadConfigurationUnauthorized() *ReadConfigurationUnauthorized {
	return &ReadConfigurationUnauthorized{}
}

/*ReadConfigurationUnauthorized handles this case with default header values.

Unauthorized
*/
type ReadConfigurationUnauthorized struct {
	Payload *models.APIResult
}

func (o *ReadConfigurationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /configuration/{id}][%d] readConfigurationUnauthorized  %+v", 401, o.Payload)
}

func (o *ReadConfigurationUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadConfigurationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadConfigurationForbidden creates a ReadConfigurationForbidden with default headers values
func NewReadConfigurationForbidden() *ReadConfigurationForbidden {
	return &ReadConfigurationForbidden{}
}

/*ReadConfigurationForbidden handles this case with default header values.

Forbidden
*/
type ReadConfigurationForbidden struct {
	Payload *models.APIResult
}

func (o *ReadConfigurationForbidden) Error() string {
	return fmt.Sprintf("[GET /configuration/{id}][%d] readConfigurationForbidden  %+v", 403, o.Payload)
}

func (o *ReadConfigurationForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadConfigurationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadConfigurationNotFound creates a ReadConfigurationNotFound with default headers values
func NewReadConfigurationNotFound() *ReadConfigurationNotFound {
	return &ReadConfigurationNotFound{}
}

/*ReadConfigurationNotFound handles this case with default header values.

Not Found
*/
type ReadConfigurationNotFound struct {
	Payload *models.APIResult
}

func (o *ReadConfigurationNotFound) Error() string {
	return fmt.Sprintf("[GET /configuration/{id}][%d] readConfigurationNotFound  %+v", 404, o.Payload)
}

func (o *ReadConfigurationNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadConfigurationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadConfigurationConflict creates a ReadConfigurationConflict with default headers values
func NewReadConfigurationConflict() *ReadConfigurationConflict {
	return &ReadConfigurationConflict{}
}

/*ReadConfigurationConflict handles this case with default header values.

Conflict
*/
type ReadConfigurationConflict struct {
	Payload *models.APIResult
}

func (o *ReadConfigurationConflict) Error() string {
	return fmt.Sprintf("[GET /configuration/{id}][%d] readConfigurationConflict  %+v", 409, o.Payload)
}

func (o *ReadConfigurationConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadConfigurationConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadConfigurationInternalServerError creates a ReadConfigurationInternalServerError with default headers values
func NewReadConfigurationInternalServerError() *ReadConfigurationInternalServerError {
	return &ReadConfigurationInternalServerError{}
}

/*ReadConfigurationInternalServerError handles this case with default header values.

Internal Server Error
*/
type ReadConfigurationInternalServerError struct {
	Payload *models.APIResult
}

func (o *ReadConfigurationInternalServerError) Error() string {
	return fmt.Sprintf("[GET /configuration/{id}][%d] readConfigurationInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadConfigurationInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadConfigurationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
