// Code generated by go-swagger; DO NOT EDIT.

package configuration_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// UpdateConfigurationReader is a Reader for the UpdateConfiguration structure.
type UpdateConfigurationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateConfigurationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateConfigurationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateConfigurationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateConfigurationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateConfigurationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateConfigurationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateConfigurationConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateConfigurationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateConfigurationOK creates a UpdateConfigurationOK with default headers values
func NewUpdateConfigurationOK() *UpdateConfigurationOK {
	return &UpdateConfigurationOK{}
}

/*UpdateConfigurationOK handles this case with default header values.

OK
*/
type UpdateConfigurationOK struct {
	Payload *models.APIResultConfigProperties
}

func (o *UpdateConfigurationOK) Error() string {
	return fmt.Sprintf("[PUT /configuration][%d] updateConfigurationOK  %+v", 200, o.Payload)
}

func (o *UpdateConfigurationOK) GetPayload() *models.APIResultConfigProperties {
	return o.Payload
}

func (o *UpdateConfigurationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultConfigProperties)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateConfigurationBadRequest creates a UpdateConfigurationBadRequest with default headers values
func NewUpdateConfigurationBadRequest() *UpdateConfigurationBadRequest {
	return &UpdateConfigurationBadRequest{}
}

/*UpdateConfigurationBadRequest handles this case with default header values.

Bad Request
*/
type UpdateConfigurationBadRequest struct {
	Payload *models.APIResult
}

func (o *UpdateConfigurationBadRequest) Error() string {
	return fmt.Sprintf("[PUT /configuration][%d] updateConfigurationBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateConfigurationBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateConfigurationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateConfigurationUnauthorized creates a UpdateConfigurationUnauthorized with default headers values
func NewUpdateConfigurationUnauthorized() *UpdateConfigurationUnauthorized {
	return &UpdateConfigurationUnauthorized{}
}

/*UpdateConfigurationUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateConfigurationUnauthorized struct {
	Payload *models.APIResult
}

func (o *UpdateConfigurationUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /configuration][%d] updateConfigurationUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateConfigurationUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateConfigurationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateConfigurationForbidden creates a UpdateConfigurationForbidden with default headers values
func NewUpdateConfigurationForbidden() *UpdateConfigurationForbidden {
	return &UpdateConfigurationForbidden{}
}

/*UpdateConfigurationForbidden handles this case with default header values.

Forbidden
*/
type UpdateConfigurationForbidden struct {
	Payload *models.APIResult
}

func (o *UpdateConfigurationForbidden) Error() string {
	return fmt.Sprintf("[PUT /configuration][%d] updateConfigurationForbidden  %+v", 403, o.Payload)
}

func (o *UpdateConfigurationForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateConfigurationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateConfigurationNotFound creates a UpdateConfigurationNotFound with default headers values
func NewUpdateConfigurationNotFound() *UpdateConfigurationNotFound {
	return &UpdateConfigurationNotFound{}
}

/*UpdateConfigurationNotFound handles this case with default header values.

Not Found
*/
type UpdateConfigurationNotFound struct {
	Payload *models.APIResult
}

func (o *UpdateConfigurationNotFound) Error() string {
	return fmt.Sprintf("[PUT /configuration][%d] updateConfigurationNotFound  %+v", 404, o.Payload)
}

func (o *UpdateConfigurationNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateConfigurationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateConfigurationConflict creates a UpdateConfigurationConflict with default headers values
func NewUpdateConfigurationConflict() *UpdateConfigurationConflict {
	return &UpdateConfigurationConflict{}
}

/*UpdateConfigurationConflict handles this case with default header values.

Conflict
*/
type UpdateConfigurationConflict struct {
	Payload *models.APIResult
}

func (o *UpdateConfigurationConflict) Error() string {
	return fmt.Sprintf("[PUT /configuration][%d] updateConfigurationConflict  %+v", 409, o.Payload)
}

func (o *UpdateConfigurationConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateConfigurationConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateConfigurationInternalServerError creates a UpdateConfigurationInternalServerError with default headers values
func NewUpdateConfigurationInternalServerError() *UpdateConfigurationInternalServerError {
	return &UpdateConfigurationInternalServerError{}
}

/*UpdateConfigurationInternalServerError handles this case with default header values.

Internal Server Error
*/
type UpdateConfigurationInternalServerError struct {
	Payload *models.APIResult
}

func (o *UpdateConfigurationInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /configuration][%d] updateConfigurationInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateConfigurationInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateConfigurationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
