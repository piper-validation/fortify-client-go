// Code generated by go-swagger; DO NOT EDIT.

package configuration_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ValidateReportConnectionConfigurationReader is a Reader for the ValidateReportConnectionConfiguration structure.
type ValidateReportConnectionConfigurationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateReportConnectionConfigurationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewValidateReportConnectionConfigurationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewValidateReportConnectionConfigurationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewValidateReportConnectionConfigurationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewValidateReportConnectionConfigurationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewValidateReportConnectionConfigurationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewValidateReportConnectionConfigurationConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewValidateReportConnectionConfigurationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewValidateReportConnectionConfigurationOK creates a ValidateReportConnectionConfigurationOK with default headers values
func NewValidateReportConnectionConfigurationOK() *ValidateReportConnectionConfigurationOK {
	return &ValidateReportConnectionConfigurationOK{}
}

/*ValidateReportConnectionConfigurationOK handles this case with default header values.

OK
*/
type ValidateReportConnectionConfigurationOK struct {
	Payload *models.APIResultConfigProperties
}

func (o *ValidateReportConnectionConfigurationOK) Error() string {
	return fmt.Sprintf("[POST /configuration/validateReportConnection][%d] validateReportConnectionConfigurationOK  %+v", 200, o.Payload)
}

func (o *ValidateReportConnectionConfigurationOK) GetPayload() *models.APIResultConfigProperties {
	return o.Payload
}

func (o *ValidateReportConnectionConfigurationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultConfigProperties)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateReportConnectionConfigurationBadRequest creates a ValidateReportConnectionConfigurationBadRequest with default headers values
func NewValidateReportConnectionConfigurationBadRequest() *ValidateReportConnectionConfigurationBadRequest {
	return &ValidateReportConnectionConfigurationBadRequest{}
}

/*ValidateReportConnectionConfigurationBadRequest handles this case with default header values.

Bad Request
*/
type ValidateReportConnectionConfigurationBadRequest struct {
	Payload *models.APIResult
}

func (o *ValidateReportConnectionConfigurationBadRequest) Error() string {
	return fmt.Sprintf("[POST /configuration/validateReportConnection][%d] validateReportConnectionConfigurationBadRequest  %+v", 400, o.Payload)
}

func (o *ValidateReportConnectionConfigurationBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ValidateReportConnectionConfigurationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateReportConnectionConfigurationUnauthorized creates a ValidateReportConnectionConfigurationUnauthorized with default headers values
func NewValidateReportConnectionConfigurationUnauthorized() *ValidateReportConnectionConfigurationUnauthorized {
	return &ValidateReportConnectionConfigurationUnauthorized{}
}

/*ValidateReportConnectionConfigurationUnauthorized handles this case with default header values.

Unauthorized
*/
type ValidateReportConnectionConfigurationUnauthorized struct {
	Payload *models.APIResult
}

func (o *ValidateReportConnectionConfigurationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /configuration/validateReportConnection][%d] validateReportConnectionConfigurationUnauthorized  %+v", 401, o.Payload)
}

func (o *ValidateReportConnectionConfigurationUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ValidateReportConnectionConfigurationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateReportConnectionConfigurationForbidden creates a ValidateReportConnectionConfigurationForbidden with default headers values
func NewValidateReportConnectionConfigurationForbidden() *ValidateReportConnectionConfigurationForbidden {
	return &ValidateReportConnectionConfigurationForbidden{}
}

/*ValidateReportConnectionConfigurationForbidden handles this case with default header values.

Forbidden
*/
type ValidateReportConnectionConfigurationForbidden struct {
	Payload *models.APIResult
}

func (o *ValidateReportConnectionConfigurationForbidden) Error() string {
	return fmt.Sprintf("[POST /configuration/validateReportConnection][%d] validateReportConnectionConfigurationForbidden  %+v", 403, o.Payload)
}

func (o *ValidateReportConnectionConfigurationForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ValidateReportConnectionConfigurationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateReportConnectionConfigurationNotFound creates a ValidateReportConnectionConfigurationNotFound with default headers values
func NewValidateReportConnectionConfigurationNotFound() *ValidateReportConnectionConfigurationNotFound {
	return &ValidateReportConnectionConfigurationNotFound{}
}

/*ValidateReportConnectionConfigurationNotFound handles this case with default header values.

Not Found
*/
type ValidateReportConnectionConfigurationNotFound struct {
	Payload *models.APIResult
}

func (o *ValidateReportConnectionConfigurationNotFound) Error() string {
	return fmt.Sprintf("[POST /configuration/validateReportConnection][%d] validateReportConnectionConfigurationNotFound  %+v", 404, o.Payload)
}

func (o *ValidateReportConnectionConfigurationNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ValidateReportConnectionConfigurationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateReportConnectionConfigurationConflict creates a ValidateReportConnectionConfigurationConflict with default headers values
func NewValidateReportConnectionConfigurationConflict() *ValidateReportConnectionConfigurationConflict {
	return &ValidateReportConnectionConfigurationConflict{}
}

/*ValidateReportConnectionConfigurationConflict handles this case with default header values.

Conflict
*/
type ValidateReportConnectionConfigurationConflict struct {
	Payload *models.APIResult
}

func (o *ValidateReportConnectionConfigurationConflict) Error() string {
	return fmt.Sprintf("[POST /configuration/validateReportConnection][%d] validateReportConnectionConfigurationConflict  %+v", 409, o.Payload)
}

func (o *ValidateReportConnectionConfigurationConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ValidateReportConnectionConfigurationConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateReportConnectionConfigurationInternalServerError creates a ValidateReportConnectionConfigurationInternalServerError with default headers values
func NewValidateReportConnectionConfigurationInternalServerError() *ValidateReportConnectionConfigurationInternalServerError {
	return &ValidateReportConnectionConfigurationInternalServerError{}
}

/*ValidateReportConnectionConfigurationInternalServerError handles this case with default header values.

Internal Server Error
*/
type ValidateReportConnectionConfigurationInternalServerError struct {
	Payload *models.APIResult
}

func (o *ValidateReportConnectionConfigurationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /configuration/validateReportConnection][%d] validateReportConnectionConfigurationInternalServerError  %+v", 500, o.Payload)
}

func (o *ValidateReportConnectionConfigurationInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ValidateReportConnectionConfigurationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
