// Code generated by go-swagger; DO NOT EDIT.

package custom_tag_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// UpdateCustomTagReader is a Reader for the UpdateCustomTag structure.
type UpdateCustomTagReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCustomTagReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCustomTagOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateCustomTagBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateCustomTagUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateCustomTagForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateCustomTagNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateCustomTagConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateCustomTagInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateCustomTagOK creates a UpdateCustomTagOK with default headers values
func NewUpdateCustomTagOK() *UpdateCustomTagOK {
	return &UpdateCustomTagOK{}
}

/*UpdateCustomTagOK handles this case with default header values.

OK
*/
type UpdateCustomTagOK struct {
	Payload *models.APIResultCustomTag
}

func (o *UpdateCustomTagOK) Error() string {
	return fmt.Sprintf("[PUT /customTags/{id}][%d] updateCustomTagOK  %+v", 200, o.Payload)
}

func (o *UpdateCustomTagOK) GetPayload() *models.APIResultCustomTag {
	return o.Payload
}

func (o *UpdateCustomTagOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultCustomTag)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCustomTagBadRequest creates a UpdateCustomTagBadRequest with default headers values
func NewUpdateCustomTagBadRequest() *UpdateCustomTagBadRequest {
	return &UpdateCustomTagBadRequest{}
}

/*UpdateCustomTagBadRequest handles this case with default header values.

Bad Request
*/
type UpdateCustomTagBadRequest struct {
	Payload *models.APIResult
}

func (o *UpdateCustomTagBadRequest) Error() string {
	return fmt.Sprintf("[PUT /customTags/{id}][%d] updateCustomTagBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateCustomTagBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateCustomTagBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCustomTagUnauthorized creates a UpdateCustomTagUnauthorized with default headers values
func NewUpdateCustomTagUnauthorized() *UpdateCustomTagUnauthorized {
	return &UpdateCustomTagUnauthorized{}
}

/*UpdateCustomTagUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateCustomTagUnauthorized struct {
	Payload *models.APIResult
}

func (o *UpdateCustomTagUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /customTags/{id}][%d] updateCustomTagUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateCustomTagUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateCustomTagUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCustomTagForbidden creates a UpdateCustomTagForbidden with default headers values
func NewUpdateCustomTagForbidden() *UpdateCustomTagForbidden {
	return &UpdateCustomTagForbidden{}
}

/*UpdateCustomTagForbidden handles this case with default header values.

Forbidden
*/
type UpdateCustomTagForbidden struct {
	Payload *models.APIResult
}

func (o *UpdateCustomTagForbidden) Error() string {
	return fmt.Sprintf("[PUT /customTags/{id}][%d] updateCustomTagForbidden  %+v", 403, o.Payload)
}

func (o *UpdateCustomTagForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateCustomTagForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCustomTagNotFound creates a UpdateCustomTagNotFound with default headers values
func NewUpdateCustomTagNotFound() *UpdateCustomTagNotFound {
	return &UpdateCustomTagNotFound{}
}

/*UpdateCustomTagNotFound handles this case with default header values.

Not Found
*/
type UpdateCustomTagNotFound struct {
	Payload *models.APIResult
}

func (o *UpdateCustomTagNotFound) Error() string {
	return fmt.Sprintf("[PUT /customTags/{id}][%d] updateCustomTagNotFound  %+v", 404, o.Payload)
}

func (o *UpdateCustomTagNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateCustomTagNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCustomTagConflict creates a UpdateCustomTagConflict with default headers values
func NewUpdateCustomTagConflict() *UpdateCustomTagConflict {
	return &UpdateCustomTagConflict{}
}

/*UpdateCustomTagConflict handles this case with default header values.

Conflict
*/
type UpdateCustomTagConflict struct {
	Payload *models.APIResult
}

func (o *UpdateCustomTagConflict) Error() string {
	return fmt.Sprintf("[PUT /customTags/{id}][%d] updateCustomTagConflict  %+v", 409, o.Payload)
}

func (o *UpdateCustomTagConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateCustomTagConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCustomTagInternalServerError creates a UpdateCustomTagInternalServerError with default headers values
func NewUpdateCustomTagInternalServerError() *UpdateCustomTagInternalServerError {
	return &UpdateCustomTagInternalServerError{}
}

/*UpdateCustomTagInternalServerError handles this case with default header values.

Internal Server Error
*/
type UpdateCustomTagInternalServerError struct {
	Payload *models.APIResult
}

func (o *UpdateCustomTagInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /customTags/{id}][%d] updateCustomTagInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateCustomTagInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateCustomTagInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
