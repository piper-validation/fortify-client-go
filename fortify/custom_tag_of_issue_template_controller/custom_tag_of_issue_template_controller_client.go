// Code generated by go-swagger; DO NOT EDIT.

package custom_tag_of_issue_template_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new custom tag of issue template controller API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for custom tag of issue template controller API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	ListCustomTagOfIssueTemplate(params *ListCustomTagOfIssueTemplateParams, authInfo runtime.ClientAuthInfoWriter) (*ListCustomTagOfIssueTemplateOK, error)

	UpdateCustomTagOfIssueTemplate(params *UpdateCustomTagOfIssueTemplateParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateCustomTagOfIssueTemplateOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  ListCustomTagOfIssueTemplate lists
*/
func (a *Client) ListCustomTagOfIssueTemplate(params *ListCustomTagOfIssueTemplateParams, authInfo runtime.ClientAuthInfoWriter) (*ListCustomTagOfIssueTemplateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListCustomTagOfIssueTemplateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "listCustomTagOfIssueTemplate",
		Method:             "GET",
		PathPattern:        "/issueTemplates/{parentId}/customTags",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ListCustomTagOfIssueTemplateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListCustomTagOfIssueTemplateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for listCustomTagOfIssueTemplate: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateCustomTagOfIssueTemplate updates
*/
func (a *Client) UpdateCustomTagOfIssueTemplate(params *UpdateCustomTagOfIssueTemplateParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateCustomTagOfIssueTemplateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateCustomTagOfIssueTemplateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateCustomTagOfIssueTemplate",
		Method:             "PUT",
		PathPattern:        "/issueTemplates/{parentId}/customTags",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &UpdateCustomTagOfIssueTemplateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateCustomTagOfIssueTemplateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateCustomTagOfIssueTemplate: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
