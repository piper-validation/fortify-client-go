// Code generated by go-swagger; DO NOT EDIT.

package custom_tag_of_project_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new custom tag of project version controller API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for custom tag of project version controller API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	CreateCustomTagOfProjectVersion(params *CreateCustomTagOfProjectVersionParams, authInfo runtime.ClientAuthInfoWriter) (*CreateCustomTagOfProjectVersionCreated, error)

	ListCustomTagOfProjectVersion(params *ListCustomTagOfProjectVersionParams, authInfo runtime.ClientAuthInfoWriter) (*ListCustomTagOfProjectVersionOK, error)

	UpdateCollectionCustomTagOfProjectVersion(params *UpdateCollectionCustomTagOfProjectVersionParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateCollectionCustomTagOfProjectVersionOK, error)

	UpdateCustomTagOfProjectVersion(params *UpdateCustomTagOfProjectVersionParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateCustomTagOfProjectVersionOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CreateCustomTagOfProjectVersion creates
*/
func (a *Client) CreateCustomTagOfProjectVersion(params *CreateCustomTagOfProjectVersionParams, authInfo runtime.ClientAuthInfoWriter) (*CreateCustomTagOfProjectVersionCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateCustomTagOfProjectVersionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createCustomTagOfProjectVersion",
		Method:             "POST",
		PathPattern:        "/projectVersions/{parentId}/customTags",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreateCustomTagOfProjectVersionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateCustomTagOfProjectVersionCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createCustomTagOfProjectVersion: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ListCustomTagOfProjectVersion lists
*/
func (a *Client) ListCustomTagOfProjectVersion(params *ListCustomTagOfProjectVersionParams, authInfo runtime.ClientAuthInfoWriter) (*ListCustomTagOfProjectVersionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListCustomTagOfProjectVersionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "listCustomTagOfProjectVersion",
		Method:             "GET",
		PathPattern:        "/projectVersions/{parentId}/customTags",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ListCustomTagOfProjectVersionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListCustomTagOfProjectVersionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for listCustomTagOfProjectVersion: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateCollectionCustomTagOfProjectVersion updates collection
*/
func (a *Client) UpdateCollectionCustomTagOfProjectVersion(params *UpdateCollectionCustomTagOfProjectVersionParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateCollectionCustomTagOfProjectVersionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateCollectionCustomTagOfProjectVersionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateCollectionCustomTagOfProjectVersion",
		Method:             "PUT",
		PathPattern:        "/projectVersions/{parentId}/customTags",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &UpdateCollectionCustomTagOfProjectVersionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateCollectionCustomTagOfProjectVersionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateCollectionCustomTagOfProjectVersion: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateCustomTagOfProjectVersion updates
*/
func (a *Client) UpdateCustomTagOfProjectVersion(params *UpdateCustomTagOfProjectVersionParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateCustomTagOfProjectVersionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateCustomTagOfProjectVersionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateCustomTagOfProjectVersion",
		Method:             "PUT",
		PathPattern:        "/projectVersions/{parentId}/customTags/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &UpdateCustomTagOfProjectVersionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateCustomTagOfProjectVersionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateCustomTagOfProjectVersion: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
