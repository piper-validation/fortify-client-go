// Code generated by go-swagger; DO NOT EDIT.

package dashboard_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListDashboardVersionReader is a Reader for the ListDashboardVersion structure.
type ListDashboardVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListDashboardVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListDashboardVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListDashboardVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListDashboardVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListDashboardVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListDashboardVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListDashboardVersionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListDashboardVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListDashboardVersionOK creates a ListDashboardVersionOK with default headers values
func NewListDashboardVersionOK() *ListDashboardVersionOK {
	return &ListDashboardVersionOK{}
}

/*ListDashboardVersionOK handles this case with default header values.

OK
*/
type ListDashboardVersionOK struct {
	Payload *models.APIResultListDashboardVersion
}

func (o *ListDashboardVersionOK) Error() string {
	return fmt.Sprintf("[GET /dashboardVersions][%d] listDashboardVersionOK  %+v", 200, o.Payload)
}

func (o *ListDashboardVersionOK) GetPayload() *models.APIResultListDashboardVersion {
	return o.Payload
}

func (o *ListDashboardVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListDashboardVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDashboardVersionBadRequest creates a ListDashboardVersionBadRequest with default headers values
func NewListDashboardVersionBadRequest() *ListDashboardVersionBadRequest {
	return &ListDashboardVersionBadRequest{}
}

/*ListDashboardVersionBadRequest handles this case with default header values.

Bad Request
*/
type ListDashboardVersionBadRequest struct {
	Payload *models.APIResult
}

func (o *ListDashboardVersionBadRequest) Error() string {
	return fmt.Sprintf("[GET /dashboardVersions][%d] listDashboardVersionBadRequest  %+v", 400, o.Payload)
}

func (o *ListDashboardVersionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListDashboardVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDashboardVersionUnauthorized creates a ListDashboardVersionUnauthorized with default headers values
func NewListDashboardVersionUnauthorized() *ListDashboardVersionUnauthorized {
	return &ListDashboardVersionUnauthorized{}
}

/*ListDashboardVersionUnauthorized handles this case with default header values.

Unauthorized
*/
type ListDashboardVersionUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListDashboardVersionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dashboardVersions][%d] listDashboardVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *ListDashboardVersionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListDashboardVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDashboardVersionForbidden creates a ListDashboardVersionForbidden with default headers values
func NewListDashboardVersionForbidden() *ListDashboardVersionForbidden {
	return &ListDashboardVersionForbidden{}
}

/*ListDashboardVersionForbidden handles this case with default header values.

Forbidden
*/
type ListDashboardVersionForbidden struct {
	Payload *models.APIResult
}

func (o *ListDashboardVersionForbidden) Error() string {
	return fmt.Sprintf("[GET /dashboardVersions][%d] listDashboardVersionForbidden  %+v", 403, o.Payload)
}

func (o *ListDashboardVersionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListDashboardVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDashboardVersionNotFound creates a ListDashboardVersionNotFound with default headers values
func NewListDashboardVersionNotFound() *ListDashboardVersionNotFound {
	return &ListDashboardVersionNotFound{}
}

/*ListDashboardVersionNotFound handles this case with default header values.

Not Found
*/
type ListDashboardVersionNotFound struct {
	Payload *models.APIResult
}

func (o *ListDashboardVersionNotFound) Error() string {
	return fmt.Sprintf("[GET /dashboardVersions][%d] listDashboardVersionNotFound  %+v", 404, o.Payload)
}

func (o *ListDashboardVersionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListDashboardVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDashboardVersionConflict creates a ListDashboardVersionConflict with default headers values
func NewListDashboardVersionConflict() *ListDashboardVersionConflict {
	return &ListDashboardVersionConflict{}
}

/*ListDashboardVersionConflict handles this case with default header values.

Conflict
*/
type ListDashboardVersionConflict struct {
	Payload *models.APIResult
}

func (o *ListDashboardVersionConflict) Error() string {
	return fmt.Sprintf("[GET /dashboardVersions][%d] listDashboardVersionConflict  %+v", 409, o.Payload)
}

func (o *ListDashboardVersionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListDashboardVersionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDashboardVersionInternalServerError creates a ListDashboardVersionInternalServerError with default headers values
func NewListDashboardVersionInternalServerError() *ListDashboardVersionInternalServerError {
	return &ListDashboardVersionInternalServerError{}
}

/*ListDashboardVersionInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListDashboardVersionInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListDashboardVersionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dashboardVersions][%d] listDashboardVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *ListDashboardVersionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListDashboardVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
