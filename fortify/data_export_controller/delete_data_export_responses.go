// Code generated by go-swagger; DO NOT EDIT.

package data_export_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// DeleteDataExportReader is a Reader for the DeleteDataExport structure.
type DeleteDataExportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDataExportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteDataExportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteDataExportBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteDataExportUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteDataExportForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteDataExportNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteDataExportConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteDataExportInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteDataExportOK creates a DeleteDataExportOK with default headers values
func NewDeleteDataExportOK() *DeleteDataExportOK {
	return &DeleteDataExportOK{}
}

/*DeleteDataExportOK handles this case with default header values.

OK
*/
type DeleteDataExportOK struct {
	Payload *models.APIResultVoid
}

func (o *DeleteDataExportOK) Error() string {
	return fmt.Sprintf("[DELETE /dataExports/{id}][%d] deleteDataExportOK  %+v", 200, o.Payload)
}

func (o *DeleteDataExportOK) GetPayload() *models.APIResultVoid {
	return o.Payload
}

func (o *DeleteDataExportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultVoid)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDataExportBadRequest creates a DeleteDataExportBadRequest with default headers values
func NewDeleteDataExportBadRequest() *DeleteDataExportBadRequest {
	return &DeleteDataExportBadRequest{}
}

/*DeleteDataExportBadRequest handles this case with default header values.

Bad Request
*/
type DeleteDataExportBadRequest struct {
	Payload *models.APIResult
}

func (o *DeleteDataExportBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /dataExports/{id}][%d] deleteDataExportBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteDataExportBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteDataExportBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDataExportUnauthorized creates a DeleteDataExportUnauthorized with default headers values
func NewDeleteDataExportUnauthorized() *DeleteDataExportUnauthorized {
	return &DeleteDataExportUnauthorized{}
}

/*DeleteDataExportUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteDataExportUnauthorized struct {
	Payload *models.APIResult
}

func (o *DeleteDataExportUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /dataExports/{id}][%d] deleteDataExportUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteDataExportUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteDataExportUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDataExportForbidden creates a DeleteDataExportForbidden with default headers values
func NewDeleteDataExportForbidden() *DeleteDataExportForbidden {
	return &DeleteDataExportForbidden{}
}

/*DeleteDataExportForbidden handles this case with default header values.

Forbidden
*/
type DeleteDataExportForbidden struct {
	Payload *models.APIResult
}

func (o *DeleteDataExportForbidden) Error() string {
	return fmt.Sprintf("[DELETE /dataExports/{id}][%d] deleteDataExportForbidden  %+v", 403, o.Payload)
}

func (o *DeleteDataExportForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteDataExportForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDataExportNotFound creates a DeleteDataExportNotFound with default headers values
func NewDeleteDataExportNotFound() *DeleteDataExportNotFound {
	return &DeleteDataExportNotFound{}
}

/*DeleteDataExportNotFound handles this case with default header values.

Not Found
*/
type DeleteDataExportNotFound struct {
	Payload *models.APIResult
}

func (o *DeleteDataExportNotFound) Error() string {
	return fmt.Sprintf("[DELETE /dataExports/{id}][%d] deleteDataExportNotFound  %+v", 404, o.Payload)
}

func (o *DeleteDataExportNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteDataExportNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDataExportConflict creates a DeleteDataExportConflict with default headers values
func NewDeleteDataExportConflict() *DeleteDataExportConflict {
	return &DeleteDataExportConflict{}
}

/*DeleteDataExportConflict handles this case with default header values.

Conflict
*/
type DeleteDataExportConflict struct {
	Payload *models.APIResult
}

func (o *DeleteDataExportConflict) Error() string {
	return fmt.Sprintf("[DELETE /dataExports/{id}][%d] deleteDataExportConflict  %+v", 409, o.Payload)
}

func (o *DeleteDataExportConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteDataExportConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDataExportInternalServerError creates a DeleteDataExportInternalServerError with default headers values
func NewDeleteDataExportInternalServerError() *DeleteDataExportInternalServerError {
	return &DeleteDataExportInternalServerError{}
}

/*DeleteDataExportInternalServerError handles this case with default header values.

Internal Server Error
*/
type DeleteDataExportInternalServerError struct {
	Payload *models.APIResult
}

func (o *DeleteDataExportInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /dataExports/{id}][%d] deleteDataExportInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteDataExportInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteDataExportInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
