// Code generated by go-swagger; DO NOT EDIT.

package data_export_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ExportAuditToCSVForDataExportReader is a Reader for the ExportAuditToCSVForDataExport structure.
type ExportAuditToCSVForDataExportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExportAuditToCSVForDataExportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExportAuditToCSVForDataExportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewExportAuditToCSVForDataExportBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewExportAuditToCSVForDataExportUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewExportAuditToCSVForDataExportForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewExportAuditToCSVForDataExportNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewExportAuditToCSVForDataExportConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewExportAuditToCSVForDataExportInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewExportAuditToCSVForDataExportOK creates a ExportAuditToCSVForDataExportOK with default headers values
func NewExportAuditToCSVForDataExportOK() *ExportAuditToCSVForDataExportOK {
	return &ExportAuditToCSVForDataExportOK{}
}

/*ExportAuditToCSVForDataExportOK handles this case with default header values.

OK
*/
type ExportAuditToCSVForDataExportOK struct {
	Payload *models.APIResultVoid
}

func (o *ExportAuditToCSVForDataExportOK) Error() string {
	return fmt.Sprintf("[POST /dataExports/action/exportAuditToCsv][%d] exportAuditToCSVForDataExportOK  %+v", 200, o.Payload)
}

func (o *ExportAuditToCSVForDataExportOK) GetPayload() *models.APIResultVoid {
	return o.Payload
}

func (o *ExportAuditToCSVForDataExportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultVoid)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportAuditToCSVForDataExportBadRequest creates a ExportAuditToCSVForDataExportBadRequest with default headers values
func NewExportAuditToCSVForDataExportBadRequest() *ExportAuditToCSVForDataExportBadRequest {
	return &ExportAuditToCSVForDataExportBadRequest{}
}

/*ExportAuditToCSVForDataExportBadRequest handles this case with default header values.

Bad Request
*/
type ExportAuditToCSVForDataExportBadRequest struct {
	Payload *models.APIResult
}

func (o *ExportAuditToCSVForDataExportBadRequest) Error() string {
	return fmt.Sprintf("[POST /dataExports/action/exportAuditToCsv][%d] exportAuditToCSVForDataExportBadRequest  %+v", 400, o.Payload)
}

func (o *ExportAuditToCSVForDataExportBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ExportAuditToCSVForDataExportBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportAuditToCSVForDataExportUnauthorized creates a ExportAuditToCSVForDataExportUnauthorized with default headers values
func NewExportAuditToCSVForDataExportUnauthorized() *ExportAuditToCSVForDataExportUnauthorized {
	return &ExportAuditToCSVForDataExportUnauthorized{}
}

/*ExportAuditToCSVForDataExportUnauthorized handles this case with default header values.

Unauthorized
*/
type ExportAuditToCSVForDataExportUnauthorized struct {
	Payload *models.APIResult
}

func (o *ExportAuditToCSVForDataExportUnauthorized) Error() string {
	return fmt.Sprintf("[POST /dataExports/action/exportAuditToCsv][%d] exportAuditToCSVForDataExportUnauthorized  %+v", 401, o.Payload)
}

func (o *ExportAuditToCSVForDataExportUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ExportAuditToCSVForDataExportUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportAuditToCSVForDataExportForbidden creates a ExportAuditToCSVForDataExportForbidden with default headers values
func NewExportAuditToCSVForDataExportForbidden() *ExportAuditToCSVForDataExportForbidden {
	return &ExportAuditToCSVForDataExportForbidden{}
}

/*ExportAuditToCSVForDataExportForbidden handles this case with default header values.

Forbidden
*/
type ExportAuditToCSVForDataExportForbidden struct {
	Payload *models.APIResult
}

func (o *ExportAuditToCSVForDataExportForbidden) Error() string {
	return fmt.Sprintf("[POST /dataExports/action/exportAuditToCsv][%d] exportAuditToCSVForDataExportForbidden  %+v", 403, o.Payload)
}

func (o *ExportAuditToCSVForDataExportForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ExportAuditToCSVForDataExportForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportAuditToCSVForDataExportNotFound creates a ExportAuditToCSVForDataExportNotFound with default headers values
func NewExportAuditToCSVForDataExportNotFound() *ExportAuditToCSVForDataExportNotFound {
	return &ExportAuditToCSVForDataExportNotFound{}
}

/*ExportAuditToCSVForDataExportNotFound handles this case with default header values.

Not Found
*/
type ExportAuditToCSVForDataExportNotFound struct {
	Payload *models.APIResult
}

func (o *ExportAuditToCSVForDataExportNotFound) Error() string {
	return fmt.Sprintf("[POST /dataExports/action/exportAuditToCsv][%d] exportAuditToCSVForDataExportNotFound  %+v", 404, o.Payload)
}

func (o *ExportAuditToCSVForDataExportNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ExportAuditToCSVForDataExportNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportAuditToCSVForDataExportConflict creates a ExportAuditToCSVForDataExportConflict with default headers values
func NewExportAuditToCSVForDataExportConflict() *ExportAuditToCSVForDataExportConflict {
	return &ExportAuditToCSVForDataExportConflict{}
}

/*ExportAuditToCSVForDataExportConflict handles this case with default header values.

Conflict
*/
type ExportAuditToCSVForDataExportConflict struct {
	Payload *models.APIResult
}

func (o *ExportAuditToCSVForDataExportConflict) Error() string {
	return fmt.Sprintf("[POST /dataExports/action/exportAuditToCsv][%d] exportAuditToCSVForDataExportConflict  %+v", 409, o.Payload)
}

func (o *ExportAuditToCSVForDataExportConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ExportAuditToCSVForDataExportConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportAuditToCSVForDataExportInternalServerError creates a ExportAuditToCSVForDataExportInternalServerError with default headers values
func NewExportAuditToCSVForDataExportInternalServerError() *ExportAuditToCSVForDataExportInternalServerError {
	return &ExportAuditToCSVForDataExportInternalServerError{}
}

/*ExportAuditToCSVForDataExportInternalServerError handles this case with default header values.

Internal Server Error
*/
type ExportAuditToCSVForDataExportInternalServerError struct {
	Payload *models.APIResult
}

func (o *ExportAuditToCSVForDataExportInternalServerError) Error() string {
	return fmt.Sprintf("[POST /dataExports/action/exportAuditToCsv][%d] exportAuditToCSVForDataExportInternalServerError  %+v", 500, o.Payload)
}

func (o *ExportAuditToCSVForDataExportInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ExportAuditToCSVForDataExportInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
