// Code generated by go-swagger; DO NOT EDIT.

package data_export_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListDataExportReader is a Reader for the ListDataExport structure.
type ListDataExportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListDataExportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListDataExportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListDataExportBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListDataExportUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListDataExportForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListDataExportNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListDataExportConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListDataExportInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListDataExportOK creates a ListDataExportOK with default headers values
func NewListDataExportOK() *ListDataExportOK {
	return &ListDataExportOK{}
}

/*ListDataExportOK handles this case with default header values.

OK
*/
type ListDataExportOK struct {
	Payload *models.APIResultListDataExport
}

func (o *ListDataExportOK) Error() string {
	return fmt.Sprintf("[GET /dataExports][%d] listDataExportOK  %+v", 200, o.Payload)
}

func (o *ListDataExportOK) GetPayload() *models.APIResultListDataExport {
	return o.Payload
}

func (o *ListDataExportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListDataExport)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDataExportBadRequest creates a ListDataExportBadRequest with default headers values
func NewListDataExportBadRequest() *ListDataExportBadRequest {
	return &ListDataExportBadRequest{}
}

/*ListDataExportBadRequest handles this case with default header values.

Bad Request
*/
type ListDataExportBadRequest struct {
	Payload *models.APIResult
}

func (o *ListDataExportBadRequest) Error() string {
	return fmt.Sprintf("[GET /dataExports][%d] listDataExportBadRequest  %+v", 400, o.Payload)
}

func (o *ListDataExportBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListDataExportBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDataExportUnauthorized creates a ListDataExportUnauthorized with default headers values
func NewListDataExportUnauthorized() *ListDataExportUnauthorized {
	return &ListDataExportUnauthorized{}
}

/*ListDataExportUnauthorized handles this case with default header values.

Unauthorized
*/
type ListDataExportUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListDataExportUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dataExports][%d] listDataExportUnauthorized  %+v", 401, o.Payload)
}

func (o *ListDataExportUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListDataExportUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDataExportForbidden creates a ListDataExportForbidden with default headers values
func NewListDataExportForbidden() *ListDataExportForbidden {
	return &ListDataExportForbidden{}
}

/*ListDataExportForbidden handles this case with default header values.

Forbidden
*/
type ListDataExportForbidden struct {
	Payload *models.APIResult
}

func (o *ListDataExportForbidden) Error() string {
	return fmt.Sprintf("[GET /dataExports][%d] listDataExportForbidden  %+v", 403, o.Payload)
}

func (o *ListDataExportForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListDataExportForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDataExportNotFound creates a ListDataExportNotFound with default headers values
func NewListDataExportNotFound() *ListDataExportNotFound {
	return &ListDataExportNotFound{}
}

/*ListDataExportNotFound handles this case with default header values.

Not Found
*/
type ListDataExportNotFound struct {
	Payload *models.APIResult
}

func (o *ListDataExportNotFound) Error() string {
	return fmt.Sprintf("[GET /dataExports][%d] listDataExportNotFound  %+v", 404, o.Payload)
}

func (o *ListDataExportNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListDataExportNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDataExportConflict creates a ListDataExportConflict with default headers values
func NewListDataExportConflict() *ListDataExportConflict {
	return &ListDataExportConflict{}
}

/*ListDataExportConflict handles this case with default header values.

Conflict
*/
type ListDataExportConflict struct {
	Payload *models.APIResult
}

func (o *ListDataExportConflict) Error() string {
	return fmt.Sprintf("[GET /dataExports][%d] listDataExportConflict  %+v", 409, o.Payload)
}

func (o *ListDataExportConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListDataExportConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDataExportInternalServerError creates a ListDataExportInternalServerError with default headers values
func NewListDataExportInternalServerError() *ListDataExportInternalServerError {
	return &ListDataExportInternalServerError{}
}

/*ListDataExportInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListDataExportInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListDataExportInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dataExports][%d] listDataExportInternalServerError  %+v", 500, o.Payload)
}

func (o *ListDataExportInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListDataExportInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
