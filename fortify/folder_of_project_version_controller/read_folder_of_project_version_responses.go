// Code generated by go-swagger; DO NOT EDIT.

package folder_of_project_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ReadFolderOfProjectVersionReader is a Reader for the ReadFolderOfProjectVersion structure.
type ReadFolderOfProjectVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadFolderOfProjectVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadFolderOfProjectVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReadFolderOfProjectVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReadFolderOfProjectVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewReadFolderOfProjectVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReadFolderOfProjectVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewReadFolderOfProjectVersionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadFolderOfProjectVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadFolderOfProjectVersionOK creates a ReadFolderOfProjectVersionOK with default headers values
func NewReadFolderOfProjectVersionOK() *ReadFolderOfProjectVersionOK {
	return &ReadFolderOfProjectVersionOK{}
}

/*ReadFolderOfProjectVersionOK handles this case with default header values.

OK
*/
type ReadFolderOfProjectVersionOK struct {
	Payload *models.APIResultFolder
}

func (o *ReadFolderOfProjectVersionOK) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/folders/{id}][%d] readFolderOfProjectVersionOK  %+v", 200, o.Payload)
}

func (o *ReadFolderOfProjectVersionOK) GetPayload() *models.APIResultFolder {
	return o.Payload
}

func (o *ReadFolderOfProjectVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultFolder)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadFolderOfProjectVersionBadRequest creates a ReadFolderOfProjectVersionBadRequest with default headers values
func NewReadFolderOfProjectVersionBadRequest() *ReadFolderOfProjectVersionBadRequest {
	return &ReadFolderOfProjectVersionBadRequest{}
}

/*ReadFolderOfProjectVersionBadRequest handles this case with default header values.

Bad Request
*/
type ReadFolderOfProjectVersionBadRequest struct {
	Payload *models.APIResult
}

func (o *ReadFolderOfProjectVersionBadRequest) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/folders/{id}][%d] readFolderOfProjectVersionBadRequest  %+v", 400, o.Payload)
}

func (o *ReadFolderOfProjectVersionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadFolderOfProjectVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadFolderOfProjectVersionUnauthorized creates a ReadFolderOfProjectVersionUnauthorized with default headers values
func NewReadFolderOfProjectVersionUnauthorized() *ReadFolderOfProjectVersionUnauthorized {
	return &ReadFolderOfProjectVersionUnauthorized{}
}

/*ReadFolderOfProjectVersionUnauthorized handles this case with default header values.

Unauthorized
*/
type ReadFolderOfProjectVersionUnauthorized struct {
	Payload *models.APIResult
}

func (o *ReadFolderOfProjectVersionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/folders/{id}][%d] readFolderOfProjectVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *ReadFolderOfProjectVersionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadFolderOfProjectVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadFolderOfProjectVersionForbidden creates a ReadFolderOfProjectVersionForbidden with default headers values
func NewReadFolderOfProjectVersionForbidden() *ReadFolderOfProjectVersionForbidden {
	return &ReadFolderOfProjectVersionForbidden{}
}

/*ReadFolderOfProjectVersionForbidden handles this case with default header values.

Forbidden
*/
type ReadFolderOfProjectVersionForbidden struct {
	Payload *models.APIResult
}

func (o *ReadFolderOfProjectVersionForbidden) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/folders/{id}][%d] readFolderOfProjectVersionForbidden  %+v", 403, o.Payload)
}

func (o *ReadFolderOfProjectVersionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadFolderOfProjectVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadFolderOfProjectVersionNotFound creates a ReadFolderOfProjectVersionNotFound with default headers values
func NewReadFolderOfProjectVersionNotFound() *ReadFolderOfProjectVersionNotFound {
	return &ReadFolderOfProjectVersionNotFound{}
}

/*ReadFolderOfProjectVersionNotFound handles this case with default header values.

Not Found
*/
type ReadFolderOfProjectVersionNotFound struct {
	Payload *models.APIResult
}

func (o *ReadFolderOfProjectVersionNotFound) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/folders/{id}][%d] readFolderOfProjectVersionNotFound  %+v", 404, o.Payload)
}

func (o *ReadFolderOfProjectVersionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadFolderOfProjectVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadFolderOfProjectVersionConflict creates a ReadFolderOfProjectVersionConflict with default headers values
func NewReadFolderOfProjectVersionConflict() *ReadFolderOfProjectVersionConflict {
	return &ReadFolderOfProjectVersionConflict{}
}

/*ReadFolderOfProjectVersionConflict handles this case with default header values.

Conflict
*/
type ReadFolderOfProjectVersionConflict struct {
	Payload *models.APIResult
}

func (o *ReadFolderOfProjectVersionConflict) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/folders/{id}][%d] readFolderOfProjectVersionConflict  %+v", 409, o.Payload)
}

func (o *ReadFolderOfProjectVersionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadFolderOfProjectVersionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadFolderOfProjectVersionInternalServerError creates a ReadFolderOfProjectVersionInternalServerError with default headers values
func NewReadFolderOfProjectVersionInternalServerError() *ReadFolderOfProjectVersionInternalServerError {
	return &ReadFolderOfProjectVersionInternalServerError{}
}

/*ReadFolderOfProjectVersionInternalServerError handles this case with default header values.

Internal Server Error
*/
type ReadFolderOfProjectVersionInternalServerError struct {
	Payload *models.APIResult
}

func (o *ReadFolderOfProjectVersionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/folders/{id}][%d] readFolderOfProjectVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadFolderOfProjectVersionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadFolderOfProjectVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
