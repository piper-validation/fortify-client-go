// Code generated by go-swagger; DO NOT EDIT.

package iid_migration_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ReadIidMigrationReader is a Reader for the ReadIidMigration structure.
type ReadIidMigrationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadIidMigrationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadIidMigrationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReadIidMigrationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReadIidMigrationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewReadIidMigrationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReadIidMigrationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewReadIidMigrationConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadIidMigrationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadIidMigrationOK creates a ReadIidMigrationOK with default headers values
func NewReadIidMigrationOK() *ReadIidMigrationOK {
	return &ReadIidMigrationOK{}
}

/*ReadIidMigrationOK handles this case with default header values.

OK
*/
type ReadIidMigrationOK struct {
	Payload *models.APIResultIIDMigration
}

func (o *ReadIidMigrationOK) Error() string {
	return fmt.Sprintf("[GET /iidMigrations/{id}][%d] readIidMigrationOK  %+v", 200, o.Payload)
}

func (o *ReadIidMigrationOK) GetPayload() *models.APIResultIIDMigration {
	return o.Payload
}

func (o *ReadIidMigrationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultIIDMigration)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadIidMigrationBadRequest creates a ReadIidMigrationBadRequest with default headers values
func NewReadIidMigrationBadRequest() *ReadIidMigrationBadRequest {
	return &ReadIidMigrationBadRequest{}
}

/*ReadIidMigrationBadRequest handles this case with default header values.

Bad Request
*/
type ReadIidMigrationBadRequest struct {
	Payload *models.APIResult
}

func (o *ReadIidMigrationBadRequest) Error() string {
	return fmt.Sprintf("[GET /iidMigrations/{id}][%d] readIidMigrationBadRequest  %+v", 400, o.Payload)
}

func (o *ReadIidMigrationBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadIidMigrationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadIidMigrationUnauthorized creates a ReadIidMigrationUnauthorized with default headers values
func NewReadIidMigrationUnauthorized() *ReadIidMigrationUnauthorized {
	return &ReadIidMigrationUnauthorized{}
}

/*ReadIidMigrationUnauthorized handles this case with default header values.

Unauthorized
*/
type ReadIidMigrationUnauthorized struct {
	Payload *models.APIResult
}

func (o *ReadIidMigrationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /iidMigrations/{id}][%d] readIidMigrationUnauthorized  %+v", 401, o.Payload)
}

func (o *ReadIidMigrationUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadIidMigrationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadIidMigrationForbidden creates a ReadIidMigrationForbidden with default headers values
func NewReadIidMigrationForbidden() *ReadIidMigrationForbidden {
	return &ReadIidMigrationForbidden{}
}

/*ReadIidMigrationForbidden handles this case with default header values.

Forbidden
*/
type ReadIidMigrationForbidden struct {
	Payload *models.APIResult
}

func (o *ReadIidMigrationForbidden) Error() string {
	return fmt.Sprintf("[GET /iidMigrations/{id}][%d] readIidMigrationForbidden  %+v", 403, o.Payload)
}

func (o *ReadIidMigrationForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadIidMigrationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadIidMigrationNotFound creates a ReadIidMigrationNotFound with default headers values
func NewReadIidMigrationNotFound() *ReadIidMigrationNotFound {
	return &ReadIidMigrationNotFound{}
}

/*ReadIidMigrationNotFound handles this case with default header values.

Not Found
*/
type ReadIidMigrationNotFound struct {
	Payload *models.APIResult
}

func (o *ReadIidMigrationNotFound) Error() string {
	return fmt.Sprintf("[GET /iidMigrations/{id}][%d] readIidMigrationNotFound  %+v", 404, o.Payload)
}

func (o *ReadIidMigrationNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadIidMigrationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadIidMigrationConflict creates a ReadIidMigrationConflict with default headers values
func NewReadIidMigrationConflict() *ReadIidMigrationConflict {
	return &ReadIidMigrationConflict{}
}

/*ReadIidMigrationConflict handles this case with default header values.

Conflict
*/
type ReadIidMigrationConflict struct {
	Payload *models.APIResult
}

func (o *ReadIidMigrationConflict) Error() string {
	return fmt.Sprintf("[GET /iidMigrations/{id}][%d] readIidMigrationConflict  %+v", 409, o.Payload)
}

func (o *ReadIidMigrationConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadIidMigrationConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadIidMigrationInternalServerError creates a ReadIidMigrationInternalServerError with default headers values
func NewReadIidMigrationInternalServerError() *ReadIidMigrationInternalServerError {
	return &ReadIidMigrationInternalServerError{}
}

/*ReadIidMigrationInternalServerError handles this case with default header values.

Internal Server Error
*/
type ReadIidMigrationInternalServerError struct {
	Payload *models.APIResult
}

func (o *ReadIidMigrationInternalServerError) Error() string {
	return fmt.Sprintf("[GET /iidMigrations/{id}][%d] readIidMigrationInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadIidMigrationInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadIidMigrationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
