// Code generated by go-swagger; DO NOT EDIT.

package issue_aging_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListIssueAgingReader is a Reader for the ListIssueAging structure.
type ListIssueAgingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListIssueAgingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListIssueAgingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListIssueAgingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListIssueAgingUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListIssueAgingForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListIssueAgingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListIssueAgingConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListIssueAgingInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListIssueAgingOK creates a ListIssueAgingOK with default headers values
func NewListIssueAgingOK() *ListIssueAgingOK {
	return &ListIssueAgingOK{}
}

/*ListIssueAgingOK handles this case with default header values.

OK
*/
type ListIssueAgingOK struct {
	Payload *models.APIResultListIssueAgingDto
}

func (o *ListIssueAgingOK) Error() string {
	return fmt.Sprintf("[GET /issueaging][%d] listIssueAgingOK  %+v", 200, o.Payload)
}

func (o *ListIssueAgingOK) GetPayload() *models.APIResultListIssueAgingDto {
	return o.Payload
}

func (o *ListIssueAgingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListIssueAgingDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueAgingBadRequest creates a ListIssueAgingBadRequest with default headers values
func NewListIssueAgingBadRequest() *ListIssueAgingBadRequest {
	return &ListIssueAgingBadRequest{}
}

/*ListIssueAgingBadRequest handles this case with default header values.

Bad Request
*/
type ListIssueAgingBadRequest struct {
	Payload *models.APIResult
}

func (o *ListIssueAgingBadRequest) Error() string {
	return fmt.Sprintf("[GET /issueaging][%d] listIssueAgingBadRequest  %+v", 400, o.Payload)
}

func (o *ListIssueAgingBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueAgingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueAgingUnauthorized creates a ListIssueAgingUnauthorized with default headers values
func NewListIssueAgingUnauthorized() *ListIssueAgingUnauthorized {
	return &ListIssueAgingUnauthorized{}
}

/*ListIssueAgingUnauthorized handles this case with default header values.

Unauthorized
*/
type ListIssueAgingUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListIssueAgingUnauthorized) Error() string {
	return fmt.Sprintf("[GET /issueaging][%d] listIssueAgingUnauthorized  %+v", 401, o.Payload)
}

func (o *ListIssueAgingUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueAgingUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueAgingForbidden creates a ListIssueAgingForbidden with default headers values
func NewListIssueAgingForbidden() *ListIssueAgingForbidden {
	return &ListIssueAgingForbidden{}
}

/*ListIssueAgingForbidden handles this case with default header values.

Forbidden
*/
type ListIssueAgingForbidden struct {
	Payload *models.APIResult
}

func (o *ListIssueAgingForbidden) Error() string {
	return fmt.Sprintf("[GET /issueaging][%d] listIssueAgingForbidden  %+v", 403, o.Payload)
}

func (o *ListIssueAgingForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueAgingForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueAgingNotFound creates a ListIssueAgingNotFound with default headers values
func NewListIssueAgingNotFound() *ListIssueAgingNotFound {
	return &ListIssueAgingNotFound{}
}

/*ListIssueAgingNotFound handles this case with default header values.

Not Found
*/
type ListIssueAgingNotFound struct {
	Payload *models.APIResult
}

func (o *ListIssueAgingNotFound) Error() string {
	return fmt.Sprintf("[GET /issueaging][%d] listIssueAgingNotFound  %+v", 404, o.Payload)
}

func (o *ListIssueAgingNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueAgingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueAgingConflict creates a ListIssueAgingConflict with default headers values
func NewListIssueAgingConflict() *ListIssueAgingConflict {
	return &ListIssueAgingConflict{}
}

/*ListIssueAgingConflict handles this case with default header values.

Conflict
*/
type ListIssueAgingConflict struct {
	Payload *models.APIResult
}

func (o *ListIssueAgingConflict) Error() string {
	return fmt.Sprintf("[GET /issueaging][%d] listIssueAgingConflict  %+v", 409, o.Payload)
}

func (o *ListIssueAgingConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueAgingConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueAgingInternalServerError creates a ListIssueAgingInternalServerError with default headers values
func NewListIssueAgingInternalServerError() *ListIssueAgingInternalServerError {
	return &ListIssueAgingInternalServerError{}
}

/*ListIssueAgingInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListIssueAgingInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListIssueAgingInternalServerError) Error() string {
	return fmt.Sprintf("[GET /issueaging][%d] listIssueAgingInternalServerError  %+v", 500, o.Payload)
}

func (o *ListIssueAgingInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueAgingInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
