// Code generated by go-swagger; DO NOT EDIT.

package issue_attachment_of_issue_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// NewUpdateIssueAttachmentOfIssueParams creates a new UpdateIssueAttachmentOfIssueParams object
// with the default values initialized.
func NewUpdateIssueAttachmentOfIssueParams() *UpdateIssueAttachmentOfIssueParams {
	var ()
	return &UpdateIssueAttachmentOfIssueParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateIssueAttachmentOfIssueParamsWithTimeout creates a new UpdateIssueAttachmentOfIssueParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateIssueAttachmentOfIssueParamsWithTimeout(timeout time.Duration) *UpdateIssueAttachmentOfIssueParams {
	var ()
	return &UpdateIssueAttachmentOfIssueParams{

		timeout: timeout,
	}
}

// NewUpdateIssueAttachmentOfIssueParamsWithContext creates a new UpdateIssueAttachmentOfIssueParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateIssueAttachmentOfIssueParamsWithContext(ctx context.Context) *UpdateIssueAttachmentOfIssueParams {
	var ()
	return &UpdateIssueAttachmentOfIssueParams{

		Context: ctx,
	}
}

// NewUpdateIssueAttachmentOfIssueParamsWithHTTPClient creates a new UpdateIssueAttachmentOfIssueParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateIssueAttachmentOfIssueParamsWithHTTPClient(client *http.Client) *UpdateIssueAttachmentOfIssueParams {
	var ()
	return &UpdateIssueAttachmentOfIssueParams{
		HTTPClient: client,
	}
}

/*UpdateIssueAttachmentOfIssueParams contains all the parameters to send to the API endpoint
for the update issue attachment of issue operation typically these are written to a http.Request
*/
type UpdateIssueAttachmentOfIssueParams struct {

	/*Data
	  data

	*/
	Data *models.IssueAttachment
	/*ID
	  id

	*/
	ID int64
	/*ParentID
	  parentId

	*/
	ParentID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update issue attachment of issue params
func (o *UpdateIssueAttachmentOfIssueParams) WithTimeout(timeout time.Duration) *UpdateIssueAttachmentOfIssueParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update issue attachment of issue params
func (o *UpdateIssueAttachmentOfIssueParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update issue attachment of issue params
func (o *UpdateIssueAttachmentOfIssueParams) WithContext(ctx context.Context) *UpdateIssueAttachmentOfIssueParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update issue attachment of issue params
func (o *UpdateIssueAttachmentOfIssueParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update issue attachment of issue params
func (o *UpdateIssueAttachmentOfIssueParams) WithHTTPClient(client *http.Client) *UpdateIssueAttachmentOfIssueParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update issue attachment of issue params
func (o *UpdateIssueAttachmentOfIssueParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithData adds the data to the update issue attachment of issue params
func (o *UpdateIssueAttachmentOfIssueParams) WithData(data *models.IssueAttachment) *UpdateIssueAttachmentOfIssueParams {
	o.SetData(data)
	return o
}

// SetData adds the data to the update issue attachment of issue params
func (o *UpdateIssueAttachmentOfIssueParams) SetData(data *models.IssueAttachment) {
	o.Data = data
}

// WithID adds the id to the update issue attachment of issue params
func (o *UpdateIssueAttachmentOfIssueParams) WithID(id int64) *UpdateIssueAttachmentOfIssueParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the update issue attachment of issue params
func (o *UpdateIssueAttachmentOfIssueParams) SetID(id int64) {
	o.ID = id
}

// WithParentID adds the parentID to the update issue attachment of issue params
func (o *UpdateIssueAttachmentOfIssueParams) WithParentID(parentID int64) *UpdateIssueAttachmentOfIssueParams {
	o.SetParentID(parentID)
	return o
}

// SetParentID adds the parentId to the update issue attachment of issue params
func (o *UpdateIssueAttachmentOfIssueParams) SetParentID(parentID int64) {
	o.ParentID = parentID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateIssueAttachmentOfIssueParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Data != nil {
		if err := r.SetBodyParam(o.Data); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	// path param parentId
	if err := r.SetPathParam("parentId", swag.FormatInt64(o.ParentID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
