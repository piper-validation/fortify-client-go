// Code generated by go-swagger; DO NOT EDIT.

package issue_audit_comment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListIssueAuditCommentReader is a Reader for the ListIssueAuditComment structure.
type ListIssueAuditCommentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListIssueAuditCommentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListIssueAuditCommentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListIssueAuditCommentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListIssueAuditCommentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListIssueAuditCommentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListIssueAuditCommentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListIssueAuditCommentConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListIssueAuditCommentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListIssueAuditCommentOK creates a ListIssueAuditCommentOK with default headers values
func NewListIssueAuditCommentOK() *ListIssueAuditCommentOK {
	return &ListIssueAuditCommentOK{}
}

/*ListIssueAuditCommentOK handles this case with default header values.

OK
*/
type ListIssueAuditCommentOK struct {
	Payload *models.APIResultListIssueAuditComment
}

func (o *ListIssueAuditCommentOK) Error() string {
	return fmt.Sprintf("[GET /comments][%d] listIssueAuditCommentOK  %+v", 200, o.Payload)
}

func (o *ListIssueAuditCommentOK) GetPayload() *models.APIResultListIssueAuditComment {
	return o.Payload
}

func (o *ListIssueAuditCommentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListIssueAuditComment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueAuditCommentBadRequest creates a ListIssueAuditCommentBadRequest with default headers values
func NewListIssueAuditCommentBadRequest() *ListIssueAuditCommentBadRequest {
	return &ListIssueAuditCommentBadRequest{}
}

/*ListIssueAuditCommentBadRequest handles this case with default header values.

Bad Request
*/
type ListIssueAuditCommentBadRequest struct {
	Payload *models.APIResult
}

func (o *ListIssueAuditCommentBadRequest) Error() string {
	return fmt.Sprintf("[GET /comments][%d] listIssueAuditCommentBadRequest  %+v", 400, o.Payload)
}

func (o *ListIssueAuditCommentBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueAuditCommentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueAuditCommentUnauthorized creates a ListIssueAuditCommentUnauthorized with default headers values
func NewListIssueAuditCommentUnauthorized() *ListIssueAuditCommentUnauthorized {
	return &ListIssueAuditCommentUnauthorized{}
}

/*ListIssueAuditCommentUnauthorized handles this case with default header values.

Unauthorized
*/
type ListIssueAuditCommentUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListIssueAuditCommentUnauthorized) Error() string {
	return fmt.Sprintf("[GET /comments][%d] listIssueAuditCommentUnauthorized  %+v", 401, o.Payload)
}

func (o *ListIssueAuditCommentUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueAuditCommentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueAuditCommentForbidden creates a ListIssueAuditCommentForbidden with default headers values
func NewListIssueAuditCommentForbidden() *ListIssueAuditCommentForbidden {
	return &ListIssueAuditCommentForbidden{}
}

/*ListIssueAuditCommentForbidden handles this case with default header values.

Forbidden
*/
type ListIssueAuditCommentForbidden struct {
	Payload *models.APIResult
}

func (o *ListIssueAuditCommentForbidden) Error() string {
	return fmt.Sprintf("[GET /comments][%d] listIssueAuditCommentForbidden  %+v", 403, o.Payload)
}

func (o *ListIssueAuditCommentForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueAuditCommentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueAuditCommentNotFound creates a ListIssueAuditCommentNotFound with default headers values
func NewListIssueAuditCommentNotFound() *ListIssueAuditCommentNotFound {
	return &ListIssueAuditCommentNotFound{}
}

/*ListIssueAuditCommentNotFound handles this case with default header values.

Not Found
*/
type ListIssueAuditCommentNotFound struct {
	Payload *models.APIResult
}

func (o *ListIssueAuditCommentNotFound) Error() string {
	return fmt.Sprintf("[GET /comments][%d] listIssueAuditCommentNotFound  %+v", 404, o.Payload)
}

func (o *ListIssueAuditCommentNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueAuditCommentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueAuditCommentConflict creates a ListIssueAuditCommentConflict with default headers values
func NewListIssueAuditCommentConflict() *ListIssueAuditCommentConflict {
	return &ListIssueAuditCommentConflict{}
}

/*ListIssueAuditCommentConflict handles this case with default header values.

Conflict
*/
type ListIssueAuditCommentConflict struct {
	Payload *models.APIResult
}

func (o *ListIssueAuditCommentConflict) Error() string {
	return fmt.Sprintf("[GET /comments][%d] listIssueAuditCommentConflict  %+v", 409, o.Payload)
}

func (o *ListIssueAuditCommentConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueAuditCommentConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueAuditCommentInternalServerError creates a ListIssueAuditCommentInternalServerError with default headers values
func NewListIssueAuditCommentInternalServerError() *ListIssueAuditCommentInternalServerError {
	return &ListIssueAuditCommentInternalServerError{}
}

/*ListIssueAuditCommentInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListIssueAuditCommentInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListIssueAuditCommentInternalServerError) Error() string {
	return fmt.Sprintf("[GET /comments][%d] listIssueAuditCommentInternalServerError  %+v", 500, o.Payload)
}

func (o *ListIssueAuditCommentInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueAuditCommentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
