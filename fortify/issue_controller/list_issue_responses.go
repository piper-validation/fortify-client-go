// Code generated by go-swagger; DO NOT EDIT.

package issue_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListIssueReader is a Reader for the ListIssue structure.
type ListIssueReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListIssueReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListIssueOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListIssueBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListIssueUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListIssueForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListIssueNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListIssueConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListIssueInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListIssueOK creates a ListIssueOK with default headers values
func NewListIssueOK() *ListIssueOK {
	return &ListIssueOK{}
}

/*ListIssueOK handles this case with default header values.

OK
*/
type ListIssueOK struct {
	Payload *models.APIResultListProjectVersionIssue
}

func (o *ListIssueOK) Error() string {
	return fmt.Sprintf("[GET /issues][%d] listIssueOK  %+v", 200, o.Payload)
}

func (o *ListIssueOK) GetPayload() *models.APIResultListProjectVersionIssue {
	return o.Payload
}

func (o *ListIssueOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListProjectVersionIssue)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueBadRequest creates a ListIssueBadRequest with default headers values
func NewListIssueBadRequest() *ListIssueBadRequest {
	return &ListIssueBadRequest{}
}

/*ListIssueBadRequest handles this case with default header values.

Bad Request
*/
type ListIssueBadRequest struct {
	Payload *models.APIResult
}

func (o *ListIssueBadRequest) Error() string {
	return fmt.Sprintf("[GET /issues][%d] listIssueBadRequest  %+v", 400, o.Payload)
}

func (o *ListIssueBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueUnauthorized creates a ListIssueUnauthorized with default headers values
func NewListIssueUnauthorized() *ListIssueUnauthorized {
	return &ListIssueUnauthorized{}
}

/*ListIssueUnauthorized handles this case with default header values.

Unauthorized
*/
type ListIssueUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListIssueUnauthorized) Error() string {
	return fmt.Sprintf("[GET /issues][%d] listIssueUnauthorized  %+v", 401, o.Payload)
}

func (o *ListIssueUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueForbidden creates a ListIssueForbidden with default headers values
func NewListIssueForbidden() *ListIssueForbidden {
	return &ListIssueForbidden{}
}

/*ListIssueForbidden handles this case with default header values.

Forbidden
*/
type ListIssueForbidden struct {
	Payload *models.APIResult
}

func (o *ListIssueForbidden) Error() string {
	return fmt.Sprintf("[GET /issues][%d] listIssueForbidden  %+v", 403, o.Payload)
}

func (o *ListIssueForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueNotFound creates a ListIssueNotFound with default headers values
func NewListIssueNotFound() *ListIssueNotFound {
	return &ListIssueNotFound{}
}

/*ListIssueNotFound handles this case with default header values.

Not Found
*/
type ListIssueNotFound struct {
	Payload *models.APIResult
}

func (o *ListIssueNotFound) Error() string {
	return fmt.Sprintf("[GET /issues][%d] listIssueNotFound  %+v", 404, o.Payload)
}

func (o *ListIssueNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueConflict creates a ListIssueConflict with default headers values
func NewListIssueConflict() *ListIssueConflict {
	return &ListIssueConflict{}
}

/*ListIssueConflict handles this case with default header values.

Conflict
*/
type ListIssueConflict struct {
	Payload *models.APIResult
}

func (o *ListIssueConflict) Error() string {
	return fmt.Sprintf("[GET /issues][%d] listIssueConflict  %+v", 409, o.Payload)
}

func (o *ListIssueConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueInternalServerError creates a ListIssueInternalServerError with default headers values
func NewListIssueInternalServerError() *ListIssueInternalServerError {
	return &ListIssueInternalServerError{}
}

/*ListIssueInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListIssueInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListIssueInternalServerError) Error() string {
	return fmt.Sprintf("[GET /issues][%d] listIssueInternalServerError  %+v", 500, o.Payload)
}

func (o *ListIssueInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
