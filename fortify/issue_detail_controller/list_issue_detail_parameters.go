// Code generated by go-swagger; DO NOT EDIT.

package issue_detail_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListIssueDetailParams creates a new ListIssueDetailParams object
// with the default values initialized.
func NewListIssueDetailParams() *ListIssueDetailParams {
	var ()
	return &ListIssueDetailParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListIssueDetailParamsWithTimeout creates a new ListIssueDetailParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListIssueDetailParamsWithTimeout(timeout time.Duration) *ListIssueDetailParams {
	var ()
	return &ListIssueDetailParams{

		timeout: timeout,
	}
}

// NewListIssueDetailParamsWithContext creates a new ListIssueDetailParams object
// with the default values initialized, and the ability to set a context for a request
func NewListIssueDetailParamsWithContext(ctx context.Context) *ListIssueDetailParams {
	var ()
	return &ListIssueDetailParams{

		Context: ctx,
	}
}

// NewListIssueDetailParamsWithHTTPClient creates a new ListIssueDetailParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListIssueDetailParamsWithHTTPClient(client *http.Client) *ListIssueDetailParams {
	var ()
	return &ListIssueDetailParams{
		HTTPClient: client,
	}
}

/*ListIssueDetailParams contains all the parameters to send to the API endpoint
for the list issue detail operation typically these are written to a http.Request
*/
type ListIssueDetailParams struct {

	/*InstanceID
	  instanceId

	*/
	InstanceID string
	/*ProjectName
	  projectName

	*/
	ProjectName string
	/*ProjectVersionName
	  projectVersionName

	*/
	ProjectVersionName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list issue detail params
func (o *ListIssueDetailParams) WithTimeout(timeout time.Duration) *ListIssueDetailParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list issue detail params
func (o *ListIssueDetailParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list issue detail params
func (o *ListIssueDetailParams) WithContext(ctx context.Context) *ListIssueDetailParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list issue detail params
func (o *ListIssueDetailParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list issue detail params
func (o *ListIssueDetailParams) WithHTTPClient(client *http.Client) *ListIssueDetailParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list issue detail params
func (o *ListIssueDetailParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithInstanceID adds the instanceID to the list issue detail params
func (o *ListIssueDetailParams) WithInstanceID(instanceID string) *ListIssueDetailParams {
	o.SetInstanceID(instanceID)
	return o
}

// SetInstanceID adds the instanceId to the list issue detail params
func (o *ListIssueDetailParams) SetInstanceID(instanceID string) {
	o.InstanceID = instanceID
}

// WithProjectName adds the projectName to the list issue detail params
func (o *ListIssueDetailParams) WithProjectName(projectName string) *ListIssueDetailParams {
	o.SetProjectName(projectName)
	return o
}

// SetProjectName adds the projectName to the list issue detail params
func (o *ListIssueDetailParams) SetProjectName(projectName string) {
	o.ProjectName = projectName
}

// WithProjectVersionName adds the projectVersionName to the list issue detail params
func (o *ListIssueDetailParams) WithProjectVersionName(projectVersionName string) *ListIssueDetailParams {
	o.SetProjectVersionName(projectVersionName)
	return o
}

// SetProjectVersionName adds the projectVersionName to the list issue detail params
func (o *ListIssueDetailParams) SetProjectVersionName(projectVersionName string) {
	o.ProjectVersionName = projectVersionName
}

// WriteToRequest writes these params to a swagger request
func (o *ListIssueDetailParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param instanceId
	qrInstanceID := o.InstanceID
	qInstanceID := qrInstanceID
	if qInstanceID != "" {
		if err := r.SetQueryParam("instanceId", qInstanceID); err != nil {
			return err
		}
	}

	// query param projectName
	qrProjectName := o.ProjectName
	qProjectName := qrProjectName
	if qProjectName != "" {
		if err := r.SetQueryParam("projectName", qProjectName); err != nil {
			return err
		}
	}

	// query param projectVersionName
	qrProjectVersionName := o.ProjectVersionName
	qProjectVersionName := qrProjectVersionName
	if qProjectVersionName != "" {
		if err := r.SetQueryParam("projectVersionName", qProjectVersionName); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
