// Code generated by go-swagger; DO NOT EDIT.

package issue_detail_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListIssueDetailReader is a Reader for the ListIssueDetail structure.
type ListIssueDetailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListIssueDetailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListIssueDetailOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListIssueDetailBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListIssueDetailUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListIssueDetailForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListIssueDetailNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListIssueDetailConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListIssueDetailInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListIssueDetailOK creates a ListIssueDetailOK with default headers values
func NewListIssueDetailOK() *ListIssueDetailOK {
	return &ListIssueDetailOK{}
}

/*ListIssueDetailOK handles this case with default header values.

OK
*/
type ListIssueDetailOK struct {
	Payload *models.APIResultListProjectVersionIssueDetails
}

func (o *ListIssueDetailOK) Error() string {
	return fmt.Sprintf("[GET /issueDetails][%d] listIssueDetailOK  %+v", 200, o.Payload)
}

func (o *ListIssueDetailOK) GetPayload() *models.APIResultListProjectVersionIssueDetails {
	return o.Payload
}

func (o *ListIssueDetailOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListProjectVersionIssueDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueDetailBadRequest creates a ListIssueDetailBadRequest with default headers values
func NewListIssueDetailBadRequest() *ListIssueDetailBadRequest {
	return &ListIssueDetailBadRequest{}
}

/*ListIssueDetailBadRequest handles this case with default header values.

Bad Request
*/
type ListIssueDetailBadRequest struct {
	Payload *models.APIResult
}

func (o *ListIssueDetailBadRequest) Error() string {
	return fmt.Sprintf("[GET /issueDetails][%d] listIssueDetailBadRequest  %+v", 400, o.Payload)
}

func (o *ListIssueDetailBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueDetailBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueDetailUnauthorized creates a ListIssueDetailUnauthorized with default headers values
func NewListIssueDetailUnauthorized() *ListIssueDetailUnauthorized {
	return &ListIssueDetailUnauthorized{}
}

/*ListIssueDetailUnauthorized handles this case with default header values.

Unauthorized
*/
type ListIssueDetailUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListIssueDetailUnauthorized) Error() string {
	return fmt.Sprintf("[GET /issueDetails][%d] listIssueDetailUnauthorized  %+v", 401, o.Payload)
}

func (o *ListIssueDetailUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueDetailUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueDetailForbidden creates a ListIssueDetailForbidden with default headers values
func NewListIssueDetailForbidden() *ListIssueDetailForbidden {
	return &ListIssueDetailForbidden{}
}

/*ListIssueDetailForbidden handles this case with default header values.

Forbidden
*/
type ListIssueDetailForbidden struct {
	Payload *models.APIResult
}

func (o *ListIssueDetailForbidden) Error() string {
	return fmt.Sprintf("[GET /issueDetails][%d] listIssueDetailForbidden  %+v", 403, o.Payload)
}

func (o *ListIssueDetailForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueDetailForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueDetailNotFound creates a ListIssueDetailNotFound with default headers values
func NewListIssueDetailNotFound() *ListIssueDetailNotFound {
	return &ListIssueDetailNotFound{}
}

/*ListIssueDetailNotFound handles this case with default header values.

Not Found
*/
type ListIssueDetailNotFound struct {
	Payload *models.APIResult
}

func (o *ListIssueDetailNotFound) Error() string {
	return fmt.Sprintf("[GET /issueDetails][%d] listIssueDetailNotFound  %+v", 404, o.Payload)
}

func (o *ListIssueDetailNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueDetailNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueDetailConflict creates a ListIssueDetailConflict with default headers values
func NewListIssueDetailConflict() *ListIssueDetailConflict {
	return &ListIssueDetailConflict{}
}

/*ListIssueDetailConflict handles this case with default header values.

Conflict
*/
type ListIssueDetailConflict struct {
	Payload *models.APIResult
}

func (o *ListIssueDetailConflict) Error() string {
	return fmt.Sprintf("[GET /issueDetails][%d] listIssueDetailConflict  %+v", 409, o.Payload)
}

func (o *ListIssueDetailConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueDetailConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueDetailInternalServerError creates a ListIssueDetailInternalServerError with default headers values
func NewListIssueDetailInternalServerError() *ListIssueDetailInternalServerError {
	return &ListIssueDetailInternalServerError{}
}

/*ListIssueDetailInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListIssueDetailInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListIssueDetailInternalServerError) Error() string {
	return fmt.Sprintf("[GET /issueDetails][%d] listIssueDetailInternalServerError  %+v", 500, o.Payload)
}

func (o *ListIssueDetailInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueDetailInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
