// Code generated by go-swagger; DO NOT EDIT.

package issue_of_project_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListIssueOfProjectVersionReader is a Reader for the ListIssueOfProjectVersion structure.
type ListIssueOfProjectVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListIssueOfProjectVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListIssueOfProjectVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListIssueOfProjectVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListIssueOfProjectVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListIssueOfProjectVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListIssueOfProjectVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListIssueOfProjectVersionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListIssueOfProjectVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListIssueOfProjectVersionOK creates a ListIssueOfProjectVersionOK with default headers values
func NewListIssueOfProjectVersionOK() *ListIssueOfProjectVersionOK {
	return &ListIssueOfProjectVersionOK{}
}

/*ListIssueOfProjectVersionOK handles this case with default header values.

OK
*/
type ListIssueOfProjectVersionOK struct {
	Payload *models.APIResultListProjectVersionIssue
}

func (o *ListIssueOfProjectVersionOK) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/issues][%d] listIssueOfProjectVersionOK  %+v", 200, o.Payload)
}

func (o *ListIssueOfProjectVersionOK) GetPayload() *models.APIResultListProjectVersionIssue {
	return o.Payload
}

func (o *ListIssueOfProjectVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListProjectVersionIssue)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueOfProjectVersionBadRequest creates a ListIssueOfProjectVersionBadRequest with default headers values
func NewListIssueOfProjectVersionBadRequest() *ListIssueOfProjectVersionBadRequest {
	return &ListIssueOfProjectVersionBadRequest{}
}

/*ListIssueOfProjectVersionBadRequest handles this case with default header values.

Bad Request
*/
type ListIssueOfProjectVersionBadRequest struct {
	Payload *models.APIResult
}

func (o *ListIssueOfProjectVersionBadRequest) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/issues][%d] listIssueOfProjectVersionBadRequest  %+v", 400, o.Payload)
}

func (o *ListIssueOfProjectVersionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueOfProjectVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueOfProjectVersionUnauthorized creates a ListIssueOfProjectVersionUnauthorized with default headers values
func NewListIssueOfProjectVersionUnauthorized() *ListIssueOfProjectVersionUnauthorized {
	return &ListIssueOfProjectVersionUnauthorized{}
}

/*ListIssueOfProjectVersionUnauthorized handles this case with default header values.

Unauthorized
*/
type ListIssueOfProjectVersionUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListIssueOfProjectVersionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/issues][%d] listIssueOfProjectVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *ListIssueOfProjectVersionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueOfProjectVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueOfProjectVersionForbidden creates a ListIssueOfProjectVersionForbidden with default headers values
func NewListIssueOfProjectVersionForbidden() *ListIssueOfProjectVersionForbidden {
	return &ListIssueOfProjectVersionForbidden{}
}

/*ListIssueOfProjectVersionForbidden handles this case with default header values.

Forbidden
*/
type ListIssueOfProjectVersionForbidden struct {
	Payload *models.APIResult
}

func (o *ListIssueOfProjectVersionForbidden) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/issues][%d] listIssueOfProjectVersionForbidden  %+v", 403, o.Payload)
}

func (o *ListIssueOfProjectVersionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueOfProjectVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueOfProjectVersionNotFound creates a ListIssueOfProjectVersionNotFound with default headers values
func NewListIssueOfProjectVersionNotFound() *ListIssueOfProjectVersionNotFound {
	return &ListIssueOfProjectVersionNotFound{}
}

/*ListIssueOfProjectVersionNotFound handles this case with default header values.

Not Found
*/
type ListIssueOfProjectVersionNotFound struct {
	Payload *models.APIResult
}

func (o *ListIssueOfProjectVersionNotFound) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/issues][%d] listIssueOfProjectVersionNotFound  %+v", 404, o.Payload)
}

func (o *ListIssueOfProjectVersionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueOfProjectVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueOfProjectVersionConflict creates a ListIssueOfProjectVersionConflict with default headers values
func NewListIssueOfProjectVersionConflict() *ListIssueOfProjectVersionConflict {
	return &ListIssueOfProjectVersionConflict{}
}

/*ListIssueOfProjectVersionConflict handles this case with default header values.

Conflict
*/
type ListIssueOfProjectVersionConflict struct {
	Payload *models.APIResult
}

func (o *ListIssueOfProjectVersionConflict) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/issues][%d] listIssueOfProjectVersionConflict  %+v", 409, o.Payload)
}

func (o *ListIssueOfProjectVersionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueOfProjectVersionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIssueOfProjectVersionInternalServerError creates a ListIssueOfProjectVersionInternalServerError with default headers values
func NewListIssueOfProjectVersionInternalServerError() *ListIssueOfProjectVersionInternalServerError {
	return &ListIssueOfProjectVersionInternalServerError{}
}

/*ListIssueOfProjectVersionInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListIssueOfProjectVersionInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListIssueOfProjectVersionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/issues][%d] listIssueOfProjectVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *ListIssueOfProjectVersionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListIssueOfProjectVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
