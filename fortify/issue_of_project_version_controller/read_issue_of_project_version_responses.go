// Code generated by go-swagger; DO NOT EDIT.

package issue_of_project_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ReadIssueOfProjectVersionReader is a Reader for the ReadIssueOfProjectVersion structure.
type ReadIssueOfProjectVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadIssueOfProjectVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadIssueOfProjectVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReadIssueOfProjectVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReadIssueOfProjectVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewReadIssueOfProjectVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReadIssueOfProjectVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewReadIssueOfProjectVersionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadIssueOfProjectVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadIssueOfProjectVersionOK creates a ReadIssueOfProjectVersionOK with default headers values
func NewReadIssueOfProjectVersionOK() *ReadIssueOfProjectVersionOK {
	return &ReadIssueOfProjectVersionOK{}
}

/*ReadIssueOfProjectVersionOK handles this case with default header values.

OK
*/
type ReadIssueOfProjectVersionOK struct {
	Payload *models.APIResultProjectVersionIssue
}

func (o *ReadIssueOfProjectVersionOK) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/issues/{id}][%d] readIssueOfProjectVersionOK  %+v", 200, o.Payload)
}

func (o *ReadIssueOfProjectVersionOK) GetPayload() *models.APIResultProjectVersionIssue {
	return o.Payload
}

func (o *ReadIssueOfProjectVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultProjectVersionIssue)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadIssueOfProjectVersionBadRequest creates a ReadIssueOfProjectVersionBadRequest with default headers values
func NewReadIssueOfProjectVersionBadRequest() *ReadIssueOfProjectVersionBadRequest {
	return &ReadIssueOfProjectVersionBadRequest{}
}

/*ReadIssueOfProjectVersionBadRequest handles this case with default header values.

Bad Request
*/
type ReadIssueOfProjectVersionBadRequest struct {
	Payload *models.APIResult
}

func (o *ReadIssueOfProjectVersionBadRequest) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/issues/{id}][%d] readIssueOfProjectVersionBadRequest  %+v", 400, o.Payload)
}

func (o *ReadIssueOfProjectVersionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadIssueOfProjectVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadIssueOfProjectVersionUnauthorized creates a ReadIssueOfProjectVersionUnauthorized with default headers values
func NewReadIssueOfProjectVersionUnauthorized() *ReadIssueOfProjectVersionUnauthorized {
	return &ReadIssueOfProjectVersionUnauthorized{}
}

/*ReadIssueOfProjectVersionUnauthorized handles this case with default header values.

Unauthorized
*/
type ReadIssueOfProjectVersionUnauthorized struct {
	Payload *models.APIResult
}

func (o *ReadIssueOfProjectVersionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/issues/{id}][%d] readIssueOfProjectVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *ReadIssueOfProjectVersionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadIssueOfProjectVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadIssueOfProjectVersionForbidden creates a ReadIssueOfProjectVersionForbidden with default headers values
func NewReadIssueOfProjectVersionForbidden() *ReadIssueOfProjectVersionForbidden {
	return &ReadIssueOfProjectVersionForbidden{}
}

/*ReadIssueOfProjectVersionForbidden handles this case with default header values.

Forbidden
*/
type ReadIssueOfProjectVersionForbidden struct {
	Payload *models.APIResult
}

func (o *ReadIssueOfProjectVersionForbidden) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/issues/{id}][%d] readIssueOfProjectVersionForbidden  %+v", 403, o.Payload)
}

func (o *ReadIssueOfProjectVersionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadIssueOfProjectVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadIssueOfProjectVersionNotFound creates a ReadIssueOfProjectVersionNotFound with default headers values
func NewReadIssueOfProjectVersionNotFound() *ReadIssueOfProjectVersionNotFound {
	return &ReadIssueOfProjectVersionNotFound{}
}

/*ReadIssueOfProjectVersionNotFound handles this case with default header values.

Not Found
*/
type ReadIssueOfProjectVersionNotFound struct {
	Payload *models.APIResult
}

func (o *ReadIssueOfProjectVersionNotFound) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/issues/{id}][%d] readIssueOfProjectVersionNotFound  %+v", 404, o.Payload)
}

func (o *ReadIssueOfProjectVersionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadIssueOfProjectVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadIssueOfProjectVersionConflict creates a ReadIssueOfProjectVersionConflict with default headers values
func NewReadIssueOfProjectVersionConflict() *ReadIssueOfProjectVersionConflict {
	return &ReadIssueOfProjectVersionConflict{}
}

/*ReadIssueOfProjectVersionConflict handles this case with default header values.

Conflict
*/
type ReadIssueOfProjectVersionConflict struct {
	Payload *models.APIResult
}

func (o *ReadIssueOfProjectVersionConflict) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/issues/{id}][%d] readIssueOfProjectVersionConflict  %+v", 409, o.Payload)
}

func (o *ReadIssueOfProjectVersionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadIssueOfProjectVersionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadIssueOfProjectVersionInternalServerError creates a ReadIssueOfProjectVersionInternalServerError with default headers values
func NewReadIssueOfProjectVersionInternalServerError() *ReadIssueOfProjectVersionInternalServerError {
	return &ReadIssueOfProjectVersionInternalServerError{}
}

/*ReadIssueOfProjectVersionInternalServerError handles this case with default header values.

Internal Server Error
*/
type ReadIssueOfProjectVersionInternalServerError struct {
	Payload *models.APIResult
}

func (o *ReadIssueOfProjectVersionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/issues/{id}][%d] readIssueOfProjectVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadIssueOfProjectVersionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadIssueOfProjectVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
