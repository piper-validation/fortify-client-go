// Code generated by go-swagger; DO NOT EDIT.

package issue_of_project_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// SuppressIssueOfProjectVersionReader is a Reader for the SuppressIssueOfProjectVersion structure.
type SuppressIssueOfProjectVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SuppressIssueOfProjectVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSuppressIssueOfProjectVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSuppressIssueOfProjectVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSuppressIssueOfProjectVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSuppressIssueOfProjectVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSuppressIssueOfProjectVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewSuppressIssueOfProjectVersionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSuppressIssueOfProjectVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSuppressIssueOfProjectVersionOK creates a SuppressIssueOfProjectVersionOK with default headers values
func NewSuppressIssueOfProjectVersionOK() *SuppressIssueOfProjectVersionOK {
	return &SuppressIssueOfProjectVersionOK{}
}

/*SuppressIssueOfProjectVersionOK handles this case with default header values.

OK
*/
type SuppressIssueOfProjectVersionOK struct {
	Payload *models.APIResultIssueActionResponse
}

func (o *SuppressIssueOfProjectVersionOK) Error() string {
	return fmt.Sprintf("[POST /projectVersions/{parentId}/issues/action/suppress][%d] suppressIssueOfProjectVersionOK  %+v", 200, o.Payload)
}

func (o *SuppressIssueOfProjectVersionOK) GetPayload() *models.APIResultIssueActionResponse {
	return o.Payload
}

func (o *SuppressIssueOfProjectVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultIssueActionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSuppressIssueOfProjectVersionBadRequest creates a SuppressIssueOfProjectVersionBadRequest with default headers values
func NewSuppressIssueOfProjectVersionBadRequest() *SuppressIssueOfProjectVersionBadRequest {
	return &SuppressIssueOfProjectVersionBadRequest{}
}

/*SuppressIssueOfProjectVersionBadRequest handles this case with default header values.

Bad Request
*/
type SuppressIssueOfProjectVersionBadRequest struct {
	Payload *models.APIResult
}

func (o *SuppressIssueOfProjectVersionBadRequest) Error() string {
	return fmt.Sprintf("[POST /projectVersions/{parentId}/issues/action/suppress][%d] suppressIssueOfProjectVersionBadRequest  %+v", 400, o.Payload)
}

func (o *SuppressIssueOfProjectVersionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *SuppressIssueOfProjectVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSuppressIssueOfProjectVersionUnauthorized creates a SuppressIssueOfProjectVersionUnauthorized with default headers values
func NewSuppressIssueOfProjectVersionUnauthorized() *SuppressIssueOfProjectVersionUnauthorized {
	return &SuppressIssueOfProjectVersionUnauthorized{}
}

/*SuppressIssueOfProjectVersionUnauthorized handles this case with default header values.

Unauthorized
*/
type SuppressIssueOfProjectVersionUnauthorized struct {
	Payload *models.APIResult
}

func (o *SuppressIssueOfProjectVersionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /projectVersions/{parentId}/issues/action/suppress][%d] suppressIssueOfProjectVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *SuppressIssueOfProjectVersionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *SuppressIssueOfProjectVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSuppressIssueOfProjectVersionForbidden creates a SuppressIssueOfProjectVersionForbidden with default headers values
func NewSuppressIssueOfProjectVersionForbidden() *SuppressIssueOfProjectVersionForbidden {
	return &SuppressIssueOfProjectVersionForbidden{}
}

/*SuppressIssueOfProjectVersionForbidden handles this case with default header values.

Forbidden
*/
type SuppressIssueOfProjectVersionForbidden struct {
	Payload *models.APIResult
}

func (o *SuppressIssueOfProjectVersionForbidden) Error() string {
	return fmt.Sprintf("[POST /projectVersions/{parentId}/issues/action/suppress][%d] suppressIssueOfProjectVersionForbidden  %+v", 403, o.Payload)
}

func (o *SuppressIssueOfProjectVersionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *SuppressIssueOfProjectVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSuppressIssueOfProjectVersionNotFound creates a SuppressIssueOfProjectVersionNotFound with default headers values
func NewSuppressIssueOfProjectVersionNotFound() *SuppressIssueOfProjectVersionNotFound {
	return &SuppressIssueOfProjectVersionNotFound{}
}

/*SuppressIssueOfProjectVersionNotFound handles this case with default header values.

Not Found
*/
type SuppressIssueOfProjectVersionNotFound struct {
	Payload *models.APIResult
}

func (o *SuppressIssueOfProjectVersionNotFound) Error() string {
	return fmt.Sprintf("[POST /projectVersions/{parentId}/issues/action/suppress][%d] suppressIssueOfProjectVersionNotFound  %+v", 404, o.Payload)
}

func (o *SuppressIssueOfProjectVersionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *SuppressIssueOfProjectVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSuppressIssueOfProjectVersionConflict creates a SuppressIssueOfProjectVersionConflict with default headers values
func NewSuppressIssueOfProjectVersionConflict() *SuppressIssueOfProjectVersionConflict {
	return &SuppressIssueOfProjectVersionConflict{}
}

/*SuppressIssueOfProjectVersionConflict handles this case with default header values.

Conflict
*/
type SuppressIssueOfProjectVersionConflict struct {
	Payload *models.APIResult
}

func (o *SuppressIssueOfProjectVersionConflict) Error() string {
	return fmt.Sprintf("[POST /projectVersions/{parentId}/issues/action/suppress][%d] suppressIssueOfProjectVersionConflict  %+v", 409, o.Payload)
}

func (o *SuppressIssueOfProjectVersionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *SuppressIssueOfProjectVersionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSuppressIssueOfProjectVersionInternalServerError creates a SuppressIssueOfProjectVersionInternalServerError with default headers values
func NewSuppressIssueOfProjectVersionInternalServerError() *SuppressIssueOfProjectVersionInternalServerError {
	return &SuppressIssueOfProjectVersionInternalServerError{}
}

/*SuppressIssueOfProjectVersionInternalServerError handles this case with default header values.

Internal Server Error
*/
type SuppressIssueOfProjectVersionInternalServerError struct {
	Payload *models.APIResult
}

func (o *SuppressIssueOfProjectVersionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /projectVersions/{parentId}/issues/action/suppress][%d] suppressIssueOfProjectVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *SuppressIssueOfProjectVersionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *SuppressIssueOfProjectVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
