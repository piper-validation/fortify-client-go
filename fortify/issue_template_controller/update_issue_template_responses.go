// Code generated by go-swagger; DO NOT EDIT.

package issue_template_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// UpdateIssueTemplateReader is a Reader for the UpdateIssueTemplate structure.
type UpdateIssueTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateIssueTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateIssueTemplateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateIssueTemplateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateIssueTemplateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateIssueTemplateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateIssueTemplateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateIssueTemplateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateIssueTemplateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateIssueTemplateOK creates a UpdateIssueTemplateOK with default headers values
func NewUpdateIssueTemplateOK() *UpdateIssueTemplateOK {
	return &UpdateIssueTemplateOK{}
}

/*UpdateIssueTemplateOK handles this case with default header values.

OK
*/
type UpdateIssueTemplateOK struct {
	Payload *models.APIResultIssueTemplate
}

func (o *UpdateIssueTemplateOK) Error() string {
	return fmt.Sprintf("[PUT /issueTemplates/{id}][%d] updateIssueTemplateOK  %+v", 200, o.Payload)
}

func (o *UpdateIssueTemplateOK) GetPayload() *models.APIResultIssueTemplate {
	return o.Payload
}

func (o *UpdateIssueTemplateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultIssueTemplate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateIssueTemplateBadRequest creates a UpdateIssueTemplateBadRequest with default headers values
func NewUpdateIssueTemplateBadRequest() *UpdateIssueTemplateBadRequest {
	return &UpdateIssueTemplateBadRequest{}
}

/*UpdateIssueTemplateBadRequest handles this case with default header values.

Bad Request
*/
type UpdateIssueTemplateBadRequest struct {
	Payload *models.APIResult
}

func (o *UpdateIssueTemplateBadRequest) Error() string {
	return fmt.Sprintf("[PUT /issueTemplates/{id}][%d] updateIssueTemplateBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateIssueTemplateBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateIssueTemplateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateIssueTemplateUnauthorized creates a UpdateIssueTemplateUnauthorized with default headers values
func NewUpdateIssueTemplateUnauthorized() *UpdateIssueTemplateUnauthorized {
	return &UpdateIssueTemplateUnauthorized{}
}

/*UpdateIssueTemplateUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateIssueTemplateUnauthorized struct {
	Payload *models.APIResult
}

func (o *UpdateIssueTemplateUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /issueTemplates/{id}][%d] updateIssueTemplateUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateIssueTemplateUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateIssueTemplateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateIssueTemplateForbidden creates a UpdateIssueTemplateForbidden with default headers values
func NewUpdateIssueTemplateForbidden() *UpdateIssueTemplateForbidden {
	return &UpdateIssueTemplateForbidden{}
}

/*UpdateIssueTemplateForbidden handles this case with default header values.

Forbidden
*/
type UpdateIssueTemplateForbidden struct {
	Payload *models.APIResult
}

func (o *UpdateIssueTemplateForbidden) Error() string {
	return fmt.Sprintf("[PUT /issueTemplates/{id}][%d] updateIssueTemplateForbidden  %+v", 403, o.Payload)
}

func (o *UpdateIssueTemplateForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateIssueTemplateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateIssueTemplateNotFound creates a UpdateIssueTemplateNotFound with default headers values
func NewUpdateIssueTemplateNotFound() *UpdateIssueTemplateNotFound {
	return &UpdateIssueTemplateNotFound{}
}

/*UpdateIssueTemplateNotFound handles this case with default header values.

Not Found
*/
type UpdateIssueTemplateNotFound struct {
	Payload *models.APIResult
}

func (o *UpdateIssueTemplateNotFound) Error() string {
	return fmt.Sprintf("[PUT /issueTemplates/{id}][%d] updateIssueTemplateNotFound  %+v", 404, o.Payload)
}

func (o *UpdateIssueTemplateNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateIssueTemplateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateIssueTemplateConflict creates a UpdateIssueTemplateConflict with default headers values
func NewUpdateIssueTemplateConflict() *UpdateIssueTemplateConflict {
	return &UpdateIssueTemplateConflict{}
}

/*UpdateIssueTemplateConflict handles this case with default header values.

Conflict
*/
type UpdateIssueTemplateConflict struct {
	Payload *models.APIResult
}

func (o *UpdateIssueTemplateConflict) Error() string {
	return fmt.Sprintf("[PUT /issueTemplates/{id}][%d] updateIssueTemplateConflict  %+v", 409, o.Payload)
}

func (o *UpdateIssueTemplateConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateIssueTemplateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateIssueTemplateInternalServerError creates a UpdateIssueTemplateInternalServerError with default headers values
func NewUpdateIssueTemplateInternalServerError() *UpdateIssueTemplateInternalServerError {
	return &UpdateIssueTemplateInternalServerError{}
}

/*UpdateIssueTemplateInternalServerError handles this case with default header values.

Internal Server Error
*/
type UpdateIssueTemplateInternalServerError struct {
	Payload *models.APIResult
}

func (o *UpdateIssueTemplateInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /issueTemplates/{id}][%d] updateIssueTemplateInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateIssueTemplateInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateIssueTemplateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
