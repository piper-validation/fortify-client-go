// Code generated by go-swagger; DO NOT EDIT.

package issue_template_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// UploadIssueTemplateReader is a Reader for the UploadIssueTemplate structure.
type UploadIssueTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UploadIssueTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUploadIssueTemplateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUploadIssueTemplateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUploadIssueTemplateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUploadIssueTemplateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUploadIssueTemplateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUploadIssueTemplateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUploadIssueTemplateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUploadIssueTemplateCreated creates a UploadIssueTemplateCreated with default headers values
func NewUploadIssueTemplateCreated() *UploadIssueTemplateCreated {
	return &UploadIssueTemplateCreated{}
}

/*UploadIssueTemplateCreated handles this case with default header values.

Created
*/
type UploadIssueTemplateCreated struct {
	Payload *models.APIResultIssueTemplate
}

func (o *UploadIssueTemplateCreated) Error() string {
	return fmt.Sprintf("[POST /issueTemplates][%d] uploadIssueTemplateCreated  %+v", 201, o.Payload)
}

func (o *UploadIssueTemplateCreated) GetPayload() *models.APIResultIssueTemplate {
	return o.Payload
}

func (o *UploadIssueTemplateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultIssueTemplate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadIssueTemplateBadRequest creates a UploadIssueTemplateBadRequest with default headers values
func NewUploadIssueTemplateBadRequest() *UploadIssueTemplateBadRequest {
	return &UploadIssueTemplateBadRequest{}
}

/*UploadIssueTemplateBadRequest handles this case with default header values.

Bad Request
*/
type UploadIssueTemplateBadRequest struct {
	Payload *models.APIResult
}

func (o *UploadIssueTemplateBadRequest) Error() string {
	return fmt.Sprintf("[POST /issueTemplates][%d] uploadIssueTemplateBadRequest  %+v", 400, o.Payload)
}

func (o *UploadIssueTemplateBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UploadIssueTemplateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadIssueTemplateUnauthorized creates a UploadIssueTemplateUnauthorized with default headers values
func NewUploadIssueTemplateUnauthorized() *UploadIssueTemplateUnauthorized {
	return &UploadIssueTemplateUnauthorized{}
}

/*UploadIssueTemplateUnauthorized handles this case with default header values.

Unauthorized
*/
type UploadIssueTemplateUnauthorized struct {
	Payload *models.APIResult
}

func (o *UploadIssueTemplateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /issueTemplates][%d] uploadIssueTemplateUnauthorized  %+v", 401, o.Payload)
}

func (o *UploadIssueTemplateUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UploadIssueTemplateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadIssueTemplateForbidden creates a UploadIssueTemplateForbidden with default headers values
func NewUploadIssueTemplateForbidden() *UploadIssueTemplateForbidden {
	return &UploadIssueTemplateForbidden{}
}

/*UploadIssueTemplateForbidden handles this case with default header values.

Forbidden
*/
type UploadIssueTemplateForbidden struct {
	Payload *models.APIResult
}

func (o *UploadIssueTemplateForbidden) Error() string {
	return fmt.Sprintf("[POST /issueTemplates][%d] uploadIssueTemplateForbidden  %+v", 403, o.Payload)
}

func (o *UploadIssueTemplateForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UploadIssueTemplateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadIssueTemplateNotFound creates a UploadIssueTemplateNotFound with default headers values
func NewUploadIssueTemplateNotFound() *UploadIssueTemplateNotFound {
	return &UploadIssueTemplateNotFound{}
}

/*UploadIssueTemplateNotFound handles this case with default header values.

Not Found
*/
type UploadIssueTemplateNotFound struct {
	Payload *models.APIResult
}

func (o *UploadIssueTemplateNotFound) Error() string {
	return fmt.Sprintf("[POST /issueTemplates][%d] uploadIssueTemplateNotFound  %+v", 404, o.Payload)
}

func (o *UploadIssueTemplateNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UploadIssueTemplateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadIssueTemplateConflict creates a UploadIssueTemplateConflict with default headers values
func NewUploadIssueTemplateConflict() *UploadIssueTemplateConflict {
	return &UploadIssueTemplateConflict{}
}

/*UploadIssueTemplateConflict handles this case with default header values.

Conflict
*/
type UploadIssueTemplateConflict struct {
	Payload *models.APIResult
}

func (o *UploadIssueTemplateConflict) Error() string {
	return fmt.Sprintf("[POST /issueTemplates][%d] uploadIssueTemplateConflict  %+v", 409, o.Payload)
}

func (o *UploadIssueTemplateConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UploadIssueTemplateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadIssueTemplateInternalServerError creates a UploadIssueTemplateInternalServerError with default headers values
func NewUploadIssueTemplateInternalServerError() *UploadIssueTemplateInternalServerError {
	return &UploadIssueTemplateInternalServerError{}
}

/*UploadIssueTemplateInternalServerError handles this case with default header values.

Internal Server Error
*/
type UploadIssueTemplateInternalServerError struct {
	Payload *models.APIResult
}

func (o *UploadIssueTemplateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /issueTemplates][%d] uploadIssueTemplateInternalServerError  %+v", 500, o.Payload)
}

func (o *UploadIssueTemplateInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UploadIssueTemplateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
