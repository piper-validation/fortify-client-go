// Code generated by go-swagger; DO NOT EDIT.

package issue_view_template_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ReadIssueViewTemplateReader is a Reader for the ReadIssueViewTemplate structure.
type ReadIssueViewTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadIssueViewTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadIssueViewTemplateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReadIssueViewTemplateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReadIssueViewTemplateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewReadIssueViewTemplateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReadIssueViewTemplateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewReadIssueViewTemplateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadIssueViewTemplateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadIssueViewTemplateOK creates a ReadIssueViewTemplateOK with default headers values
func NewReadIssueViewTemplateOK() *ReadIssueViewTemplateOK {
	return &ReadIssueViewTemplateOK{}
}

/*ReadIssueViewTemplateOK handles this case with default header values.

OK
*/
type ReadIssueViewTemplateOK struct {
	Payload *models.APIResultIssueViewTemplate
}

func (o *ReadIssueViewTemplateOK) Error() string {
	return fmt.Sprintf("[GET /issueViewTemplates/{id}][%d] readIssueViewTemplateOK  %+v", 200, o.Payload)
}

func (o *ReadIssueViewTemplateOK) GetPayload() *models.APIResultIssueViewTemplate {
	return o.Payload
}

func (o *ReadIssueViewTemplateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultIssueViewTemplate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadIssueViewTemplateBadRequest creates a ReadIssueViewTemplateBadRequest with default headers values
func NewReadIssueViewTemplateBadRequest() *ReadIssueViewTemplateBadRequest {
	return &ReadIssueViewTemplateBadRequest{}
}

/*ReadIssueViewTemplateBadRequest handles this case with default header values.

Bad Request
*/
type ReadIssueViewTemplateBadRequest struct {
	Payload *models.APIResult
}

func (o *ReadIssueViewTemplateBadRequest) Error() string {
	return fmt.Sprintf("[GET /issueViewTemplates/{id}][%d] readIssueViewTemplateBadRequest  %+v", 400, o.Payload)
}

func (o *ReadIssueViewTemplateBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadIssueViewTemplateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadIssueViewTemplateUnauthorized creates a ReadIssueViewTemplateUnauthorized with default headers values
func NewReadIssueViewTemplateUnauthorized() *ReadIssueViewTemplateUnauthorized {
	return &ReadIssueViewTemplateUnauthorized{}
}

/*ReadIssueViewTemplateUnauthorized handles this case with default header values.

Unauthorized
*/
type ReadIssueViewTemplateUnauthorized struct {
	Payload *models.APIResult
}

func (o *ReadIssueViewTemplateUnauthorized) Error() string {
	return fmt.Sprintf("[GET /issueViewTemplates/{id}][%d] readIssueViewTemplateUnauthorized  %+v", 401, o.Payload)
}

func (o *ReadIssueViewTemplateUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadIssueViewTemplateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadIssueViewTemplateForbidden creates a ReadIssueViewTemplateForbidden with default headers values
func NewReadIssueViewTemplateForbidden() *ReadIssueViewTemplateForbidden {
	return &ReadIssueViewTemplateForbidden{}
}

/*ReadIssueViewTemplateForbidden handles this case with default header values.

Forbidden
*/
type ReadIssueViewTemplateForbidden struct {
	Payload *models.APIResult
}

func (o *ReadIssueViewTemplateForbidden) Error() string {
	return fmt.Sprintf("[GET /issueViewTemplates/{id}][%d] readIssueViewTemplateForbidden  %+v", 403, o.Payload)
}

func (o *ReadIssueViewTemplateForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadIssueViewTemplateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadIssueViewTemplateNotFound creates a ReadIssueViewTemplateNotFound with default headers values
func NewReadIssueViewTemplateNotFound() *ReadIssueViewTemplateNotFound {
	return &ReadIssueViewTemplateNotFound{}
}

/*ReadIssueViewTemplateNotFound handles this case with default header values.

Not Found
*/
type ReadIssueViewTemplateNotFound struct {
	Payload *models.APIResult
}

func (o *ReadIssueViewTemplateNotFound) Error() string {
	return fmt.Sprintf("[GET /issueViewTemplates/{id}][%d] readIssueViewTemplateNotFound  %+v", 404, o.Payload)
}

func (o *ReadIssueViewTemplateNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadIssueViewTemplateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadIssueViewTemplateConflict creates a ReadIssueViewTemplateConflict with default headers values
func NewReadIssueViewTemplateConflict() *ReadIssueViewTemplateConflict {
	return &ReadIssueViewTemplateConflict{}
}

/*ReadIssueViewTemplateConflict handles this case with default header values.

Conflict
*/
type ReadIssueViewTemplateConflict struct {
	Payload *models.APIResult
}

func (o *ReadIssueViewTemplateConflict) Error() string {
	return fmt.Sprintf("[GET /issueViewTemplates/{id}][%d] readIssueViewTemplateConflict  %+v", 409, o.Payload)
}

func (o *ReadIssueViewTemplateConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadIssueViewTemplateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadIssueViewTemplateInternalServerError creates a ReadIssueViewTemplateInternalServerError with default headers values
func NewReadIssueViewTemplateInternalServerError() *ReadIssueViewTemplateInternalServerError {
	return &ReadIssueViewTemplateInternalServerError{}
}

/*ReadIssueViewTemplateInternalServerError handles this case with default header values.

Internal Server Error
*/
type ReadIssueViewTemplateInternalServerError struct {
	Payload *models.APIResult
}

func (o *ReadIssueViewTemplateInternalServerError) Error() string {
	return fmt.Sprintf("[GET /issueViewTemplates/{id}][%d] readIssueViewTemplateInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadIssueViewTemplateInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadIssueViewTemplateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
