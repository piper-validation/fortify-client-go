// Code generated by go-swagger; DO NOT EDIT.

package job_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ReadJobReader is a Reader for the ReadJob structure.
type ReadJobReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadJobReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadJobOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReadJobBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReadJobUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewReadJobForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReadJobNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewReadJobConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadJobInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadJobOK creates a ReadJobOK with default headers values
func NewReadJobOK() *ReadJobOK {
	return &ReadJobOK{}
}

/*ReadJobOK handles this case with default header values.

OK
*/
type ReadJobOK struct {
	Payload *models.APIResultJob
}

func (o *ReadJobOK) Error() string {
	return fmt.Sprintf("[GET /jobs/{jobName}][%d] readJobOK  %+v", 200, o.Payload)
}

func (o *ReadJobOK) GetPayload() *models.APIResultJob {
	return o.Payload
}

func (o *ReadJobOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultJob)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadJobBadRequest creates a ReadJobBadRequest with default headers values
func NewReadJobBadRequest() *ReadJobBadRequest {
	return &ReadJobBadRequest{}
}

/*ReadJobBadRequest handles this case with default header values.

Bad Request
*/
type ReadJobBadRequest struct {
	Payload *models.APIResult
}

func (o *ReadJobBadRequest) Error() string {
	return fmt.Sprintf("[GET /jobs/{jobName}][%d] readJobBadRequest  %+v", 400, o.Payload)
}

func (o *ReadJobBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadJobBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadJobUnauthorized creates a ReadJobUnauthorized with default headers values
func NewReadJobUnauthorized() *ReadJobUnauthorized {
	return &ReadJobUnauthorized{}
}

/*ReadJobUnauthorized handles this case with default header values.

Unauthorized
*/
type ReadJobUnauthorized struct {
	Payload *models.APIResult
}

func (o *ReadJobUnauthorized) Error() string {
	return fmt.Sprintf("[GET /jobs/{jobName}][%d] readJobUnauthorized  %+v", 401, o.Payload)
}

func (o *ReadJobUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadJobUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadJobForbidden creates a ReadJobForbidden with default headers values
func NewReadJobForbidden() *ReadJobForbidden {
	return &ReadJobForbidden{}
}

/*ReadJobForbidden handles this case with default header values.

Forbidden
*/
type ReadJobForbidden struct {
	Payload *models.APIResult
}

func (o *ReadJobForbidden) Error() string {
	return fmt.Sprintf("[GET /jobs/{jobName}][%d] readJobForbidden  %+v", 403, o.Payload)
}

func (o *ReadJobForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadJobForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadJobNotFound creates a ReadJobNotFound with default headers values
func NewReadJobNotFound() *ReadJobNotFound {
	return &ReadJobNotFound{}
}

/*ReadJobNotFound handles this case with default header values.

Not Found
*/
type ReadJobNotFound struct {
	Payload *models.APIResult
}

func (o *ReadJobNotFound) Error() string {
	return fmt.Sprintf("[GET /jobs/{jobName}][%d] readJobNotFound  %+v", 404, o.Payload)
}

func (o *ReadJobNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadJobNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadJobConflict creates a ReadJobConflict with default headers values
func NewReadJobConflict() *ReadJobConflict {
	return &ReadJobConflict{}
}

/*ReadJobConflict handles this case with default header values.

Conflict
*/
type ReadJobConflict struct {
	Payload *models.APIResult
}

func (o *ReadJobConflict) Error() string {
	return fmt.Sprintf("[GET /jobs/{jobName}][%d] readJobConflict  %+v", 409, o.Payload)
}

func (o *ReadJobConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadJobConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadJobInternalServerError creates a ReadJobInternalServerError with default headers values
func NewReadJobInternalServerError() *ReadJobInternalServerError {
	return &ReadJobInternalServerError{}
}

/*ReadJobInternalServerError handles this case with default header values.

Internal Server Error
*/
type ReadJobInternalServerError struct {
	Payload *models.APIResult
}

func (o *ReadJobInternalServerError) Error() string {
	return fmt.Sprintf("[GET /jobs/{jobName}][%d] readJobInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadJobInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadJobInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
