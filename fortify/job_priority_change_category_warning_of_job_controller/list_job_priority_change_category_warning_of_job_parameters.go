// Code generated by go-swagger; DO NOT EDIT.

package job_priority_change_category_warning_of_job_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListJobPriorityChangeCategoryWarningOfJobParams creates a new ListJobPriorityChangeCategoryWarningOfJobParams object
// with the default values initialized.
func NewListJobPriorityChangeCategoryWarningOfJobParams() *ListJobPriorityChangeCategoryWarningOfJobParams {
	var ()
	return &ListJobPriorityChangeCategoryWarningOfJobParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListJobPriorityChangeCategoryWarningOfJobParamsWithTimeout creates a new ListJobPriorityChangeCategoryWarningOfJobParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListJobPriorityChangeCategoryWarningOfJobParamsWithTimeout(timeout time.Duration) *ListJobPriorityChangeCategoryWarningOfJobParams {
	var ()
	return &ListJobPriorityChangeCategoryWarningOfJobParams{

		timeout: timeout,
	}
}

// NewListJobPriorityChangeCategoryWarningOfJobParamsWithContext creates a new ListJobPriorityChangeCategoryWarningOfJobParams object
// with the default values initialized, and the ability to set a context for a request
func NewListJobPriorityChangeCategoryWarningOfJobParamsWithContext(ctx context.Context) *ListJobPriorityChangeCategoryWarningOfJobParams {
	var ()
	return &ListJobPriorityChangeCategoryWarningOfJobParams{

		Context: ctx,
	}
}

// NewListJobPriorityChangeCategoryWarningOfJobParamsWithHTTPClient creates a new ListJobPriorityChangeCategoryWarningOfJobParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListJobPriorityChangeCategoryWarningOfJobParamsWithHTTPClient(client *http.Client) *ListJobPriorityChangeCategoryWarningOfJobParams {
	var ()
	return &ListJobPriorityChangeCategoryWarningOfJobParams{
		HTTPClient: client,
	}
}

/*ListJobPriorityChangeCategoryWarningOfJobParams contains all the parameters to send to the API endpoint
for the list job priority change category warning of job operation typically these are written to a http.Request
*/
type ListJobPriorityChangeCategoryWarningOfJobParams struct {

	/*Fields
	  Output fields

	*/
	Fields *string
	/*ParentID
	  parentId

	*/
	ParentID string
	/*Priority
	  priority

	*/
	Priority string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list job priority change category warning of job params
func (o *ListJobPriorityChangeCategoryWarningOfJobParams) WithTimeout(timeout time.Duration) *ListJobPriorityChangeCategoryWarningOfJobParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list job priority change category warning of job params
func (o *ListJobPriorityChangeCategoryWarningOfJobParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list job priority change category warning of job params
func (o *ListJobPriorityChangeCategoryWarningOfJobParams) WithContext(ctx context.Context) *ListJobPriorityChangeCategoryWarningOfJobParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list job priority change category warning of job params
func (o *ListJobPriorityChangeCategoryWarningOfJobParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list job priority change category warning of job params
func (o *ListJobPriorityChangeCategoryWarningOfJobParams) WithHTTPClient(client *http.Client) *ListJobPriorityChangeCategoryWarningOfJobParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list job priority change category warning of job params
func (o *ListJobPriorityChangeCategoryWarningOfJobParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFields adds the fields to the list job priority change category warning of job params
func (o *ListJobPriorityChangeCategoryWarningOfJobParams) WithFields(fields *string) *ListJobPriorityChangeCategoryWarningOfJobParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the list job priority change category warning of job params
func (o *ListJobPriorityChangeCategoryWarningOfJobParams) SetFields(fields *string) {
	o.Fields = fields
}

// WithParentID adds the parentID to the list job priority change category warning of job params
func (o *ListJobPriorityChangeCategoryWarningOfJobParams) WithParentID(parentID string) *ListJobPriorityChangeCategoryWarningOfJobParams {
	o.SetParentID(parentID)
	return o
}

// SetParentID adds the parentId to the list job priority change category warning of job params
func (o *ListJobPriorityChangeCategoryWarningOfJobParams) SetParentID(parentID string) {
	o.ParentID = parentID
}

// WithPriority adds the priority to the list job priority change category warning of job params
func (o *ListJobPriorityChangeCategoryWarningOfJobParams) WithPriority(priority string) *ListJobPriorityChangeCategoryWarningOfJobParams {
	o.SetPriority(priority)
	return o
}

// SetPriority adds the priority to the list job priority change category warning of job params
func (o *ListJobPriorityChangeCategoryWarningOfJobParams) SetPriority(priority string) {
	o.Priority = priority
}

// WriteToRequest writes these params to a swagger request
func (o *ListJobPriorityChangeCategoryWarningOfJobParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Fields != nil {

		// query param fields
		var qrFields string
		if o.Fields != nil {
			qrFields = *o.Fields
		}
		qFields := qrFields
		if qFields != "" {
			if err := r.SetQueryParam("fields", qFields); err != nil {
				return err
			}
		}

	}

	// path param parentId
	if err := r.SetPathParam("parentId", o.ParentID); err != nil {
		return err
	}

	// query param priority
	qrPriority := o.Priority
	qPriority := qrPriority
	if qPriority != "" {
		if err := r.SetQueryParam("priority", qPriority); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
