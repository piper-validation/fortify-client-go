// Code generated by go-swagger; DO NOT EDIT.

package ldap_object_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ReadLdapObjectReader is a Reader for the ReadLdapObject structure.
type ReadLdapObjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadLdapObjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadLdapObjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReadLdapObjectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReadLdapObjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewReadLdapObjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReadLdapObjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewReadLdapObjectConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadLdapObjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadLdapObjectOK creates a ReadLdapObjectOK with default headers values
func NewReadLdapObjectOK() *ReadLdapObjectOK {
	return &ReadLdapObjectOK{}
}

/*ReadLdapObjectOK handles this case with default header values.

OK
*/
type ReadLdapObjectOK struct {
	Payload *models.APIResultLDAPEntity
}

func (o *ReadLdapObjectOK) Error() string {
	return fmt.Sprintf("[GET /ldapObjects/{id}][%d] readLdapObjectOK  %+v", 200, o.Payload)
}

func (o *ReadLdapObjectOK) GetPayload() *models.APIResultLDAPEntity {
	return o.Payload
}

func (o *ReadLdapObjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultLDAPEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadLdapObjectBadRequest creates a ReadLdapObjectBadRequest with default headers values
func NewReadLdapObjectBadRequest() *ReadLdapObjectBadRequest {
	return &ReadLdapObjectBadRequest{}
}

/*ReadLdapObjectBadRequest handles this case with default header values.

Bad Request
*/
type ReadLdapObjectBadRequest struct {
	Payload *models.APIResult
}

func (o *ReadLdapObjectBadRequest) Error() string {
	return fmt.Sprintf("[GET /ldapObjects/{id}][%d] readLdapObjectBadRequest  %+v", 400, o.Payload)
}

func (o *ReadLdapObjectBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadLdapObjectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadLdapObjectUnauthorized creates a ReadLdapObjectUnauthorized with default headers values
func NewReadLdapObjectUnauthorized() *ReadLdapObjectUnauthorized {
	return &ReadLdapObjectUnauthorized{}
}

/*ReadLdapObjectUnauthorized handles this case with default header values.

Unauthorized
*/
type ReadLdapObjectUnauthorized struct {
	Payload *models.APIResult
}

func (o *ReadLdapObjectUnauthorized) Error() string {
	return fmt.Sprintf("[GET /ldapObjects/{id}][%d] readLdapObjectUnauthorized  %+v", 401, o.Payload)
}

func (o *ReadLdapObjectUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadLdapObjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadLdapObjectForbidden creates a ReadLdapObjectForbidden with default headers values
func NewReadLdapObjectForbidden() *ReadLdapObjectForbidden {
	return &ReadLdapObjectForbidden{}
}

/*ReadLdapObjectForbidden handles this case with default header values.

Forbidden
*/
type ReadLdapObjectForbidden struct {
	Payload *models.APIResult
}

func (o *ReadLdapObjectForbidden) Error() string {
	return fmt.Sprintf("[GET /ldapObjects/{id}][%d] readLdapObjectForbidden  %+v", 403, o.Payload)
}

func (o *ReadLdapObjectForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadLdapObjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadLdapObjectNotFound creates a ReadLdapObjectNotFound with default headers values
func NewReadLdapObjectNotFound() *ReadLdapObjectNotFound {
	return &ReadLdapObjectNotFound{}
}

/*ReadLdapObjectNotFound handles this case with default header values.

Not Found
*/
type ReadLdapObjectNotFound struct {
	Payload *models.APIResult
}

func (o *ReadLdapObjectNotFound) Error() string {
	return fmt.Sprintf("[GET /ldapObjects/{id}][%d] readLdapObjectNotFound  %+v", 404, o.Payload)
}

func (o *ReadLdapObjectNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadLdapObjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadLdapObjectConflict creates a ReadLdapObjectConflict with default headers values
func NewReadLdapObjectConflict() *ReadLdapObjectConflict {
	return &ReadLdapObjectConflict{}
}

/*ReadLdapObjectConflict handles this case with default header values.

Conflict
*/
type ReadLdapObjectConflict struct {
	Payload *models.APIResult
}

func (o *ReadLdapObjectConflict) Error() string {
	return fmt.Sprintf("[GET /ldapObjects/{id}][%d] readLdapObjectConflict  %+v", 409, o.Payload)
}

func (o *ReadLdapObjectConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadLdapObjectConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadLdapObjectInternalServerError creates a ReadLdapObjectInternalServerError with default headers values
func NewReadLdapObjectInternalServerError() *ReadLdapObjectInternalServerError {
	return &ReadLdapObjectInternalServerError{}
}

/*ReadLdapObjectInternalServerError handles this case with default header values.

Internal Server Error
*/
type ReadLdapObjectInternalServerError struct {
	Payload *models.APIResult
}

func (o *ReadLdapObjectInternalServerError) Error() string {
	return fmt.Sprintf("[GET /ldapObjects/{id}][%d] readLdapObjectInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadLdapObjectInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadLdapObjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
