// Code generated by go-swagger; DO NOT EDIT.

package ldap_object_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// UpdateLdapObjectReader is a Reader for the UpdateLdapObject structure.
type UpdateLdapObjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateLdapObjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateLdapObjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateLdapObjectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateLdapObjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateLdapObjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateLdapObjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateLdapObjectConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateLdapObjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateLdapObjectOK creates a UpdateLdapObjectOK with default headers values
func NewUpdateLdapObjectOK() *UpdateLdapObjectOK {
	return &UpdateLdapObjectOK{}
}

/*UpdateLdapObjectOK handles this case with default header values.

OK
*/
type UpdateLdapObjectOK struct {
	Payload *models.APIResultLDAPEntity
}

func (o *UpdateLdapObjectOK) Error() string {
	return fmt.Sprintf("[PUT /ldapObjects/{id}][%d] updateLdapObjectOK  %+v", 200, o.Payload)
}

func (o *UpdateLdapObjectOK) GetPayload() *models.APIResultLDAPEntity {
	return o.Payload
}

func (o *UpdateLdapObjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultLDAPEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLdapObjectBadRequest creates a UpdateLdapObjectBadRequest with default headers values
func NewUpdateLdapObjectBadRequest() *UpdateLdapObjectBadRequest {
	return &UpdateLdapObjectBadRequest{}
}

/*UpdateLdapObjectBadRequest handles this case with default header values.

Bad Request
*/
type UpdateLdapObjectBadRequest struct {
	Payload *models.APIResult
}

func (o *UpdateLdapObjectBadRequest) Error() string {
	return fmt.Sprintf("[PUT /ldapObjects/{id}][%d] updateLdapObjectBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateLdapObjectBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateLdapObjectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLdapObjectUnauthorized creates a UpdateLdapObjectUnauthorized with default headers values
func NewUpdateLdapObjectUnauthorized() *UpdateLdapObjectUnauthorized {
	return &UpdateLdapObjectUnauthorized{}
}

/*UpdateLdapObjectUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateLdapObjectUnauthorized struct {
	Payload *models.APIResult
}

func (o *UpdateLdapObjectUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /ldapObjects/{id}][%d] updateLdapObjectUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateLdapObjectUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateLdapObjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLdapObjectForbidden creates a UpdateLdapObjectForbidden with default headers values
func NewUpdateLdapObjectForbidden() *UpdateLdapObjectForbidden {
	return &UpdateLdapObjectForbidden{}
}

/*UpdateLdapObjectForbidden handles this case with default header values.

Forbidden
*/
type UpdateLdapObjectForbidden struct {
	Payload *models.APIResult
}

func (o *UpdateLdapObjectForbidden) Error() string {
	return fmt.Sprintf("[PUT /ldapObjects/{id}][%d] updateLdapObjectForbidden  %+v", 403, o.Payload)
}

func (o *UpdateLdapObjectForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateLdapObjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLdapObjectNotFound creates a UpdateLdapObjectNotFound with default headers values
func NewUpdateLdapObjectNotFound() *UpdateLdapObjectNotFound {
	return &UpdateLdapObjectNotFound{}
}

/*UpdateLdapObjectNotFound handles this case with default header values.

Not Found
*/
type UpdateLdapObjectNotFound struct {
	Payload *models.APIResult
}

func (o *UpdateLdapObjectNotFound) Error() string {
	return fmt.Sprintf("[PUT /ldapObjects/{id}][%d] updateLdapObjectNotFound  %+v", 404, o.Payload)
}

func (o *UpdateLdapObjectNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateLdapObjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLdapObjectConflict creates a UpdateLdapObjectConflict with default headers values
func NewUpdateLdapObjectConflict() *UpdateLdapObjectConflict {
	return &UpdateLdapObjectConflict{}
}

/*UpdateLdapObjectConflict handles this case with default header values.

Conflict
*/
type UpdateLdapObjectConflict struct {
	Payload *models.APIResult
}

func (o *UpdateLdapObjectConflict) Error() string {
	return fmt.Sprintf("[PUT /ldapObjects/{id}][%d] updateLdapObjectConflict  %+v", 409, o.Payload)
}

func (o *UpdateLdapObjectConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateLdapObjectConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLdapObjectInternalServerError creates a UpdateLdapObjectInternalServerError with default headers values
func NewUpdateLdapObjectInternalServerError() *UpdateLdapObjectInternalServerError {
	return &UpdateLdapObjectInternalServerError{}
}

/*UpdateLdapObjectInternalServerError handles this case with default header values.

Internal Server Error
*/
type UpdateLdapObjectInternalServerError struct {
	Payload *models.APIResult
}

func (o *UpdateLdapObjectInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /ldapObjects/{id}][%d] updateLdapObjectInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateLdapObjectInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateLdapObjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
