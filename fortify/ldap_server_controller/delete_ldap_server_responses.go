// Code generated by go-swagger; DO NOT EDIT.

package ldap_server_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// DeleteLdapServerReader is a Reader for the DeleteLdapServer structure.
type DeleteLdapServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteLdapServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteLdapServerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteLdapServerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteLdapServerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteLdapServerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteLdapServerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteLdapServerConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteLdapServerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteLdapServerOK creates a DeleteLdapServerOK with default headers values
func NewDeleteLdapServerOK() *DeleteLdapServerOK {
	return &DeleteLdapServerOK{}
}

/*DeleteLdapServerOK handles this case with default header values.

OK
*/
type DeleteLdapServerOK struct {
	Payload *models.APIResultVoid
}

func (o *DeleteLdapServerOK) Error() string {
	return fmt.Sprintf("[DELETE /ldapServers/{id}][%d] deleteLdapServerOK  %+v", 200, o.Payload)
}

func (o *DeleteLdapServerOK) GetPayload() *models.APIResultVoid {
	return o.Payload
}

func (o *DeleteLdapServerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultVoid)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLdapServerBadRequest creates a DeleteLdapServerBadRequest with default headers values
func NewDeleteLdapServerBadRequest() *DeleteLdapServerBadRequest {
	return &DeleteLdapServerBadRequest{}
}

/*DeleteLdapServerBadRequest handles this case with default header values.

Bad Request
*/
type DeleteLdapServerBadRequest struct {
	Payload *models.APIResult
}

func (o *DeleteLdapServerBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /ldapServers/{id}][%d] deleteLdapServerBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteLdapServerBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteLdapServerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLdapServerUnauthorized creates a DeleteLdapServerUnauthorized with default headers values
func NewDeleteLdapServerUnauthorized() *DeleteLdapServerUnauthorized {
	return &DeleteLdapServerUnauthorized{}
}

/*DeleteLdapServerUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteLdapServerUnauthorized struct {
	Payload *models.APIResult
}

func (o *DeleteLdapServerUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /ldapServers/{id}][%d] deleteLdapServerUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteLdapServerUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteLdapServerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLdapServerForbidden creates a DeleteLdapServerForbidden with default headers values
func NewDeleteLdapServerForbidden() *DeleteLdapServerForbidden {
	return &DeleteLdapServerForbidden{}
}

/*DeleteLdapServerForbidden handles this case with default header values.

Forbidden
*/
type DeleteLdapServerForbidden struct {
	Payload *models.APIResult
}

func (o *DeleteLdapServerForbidden) Error() string {
	return fmt.Sprintf("[DELETE /ldapServers/{id}][%d] deleteLdapServerForbidden  %+v", 403, o.Payload)
}

func (o *DeleteLdapServerForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteLdapServerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLdapServerNotFound creates a DeleteLdapServerNotFound with default headers values
func NewDeleteLdapServerNotFound() *DeleteLdapServerNotFound {
	return &DeleteLdapServerNotFound{}
}

/*DeleteLdapServerNotFound handles this case with default header values.

Not Found
*/
type DeleteLdapServerNotFound struct {
	Payload *models.APIResult
}

func (o *DeleteLdapServerNotFound) Error() string {
	return fmt.Sprintf("[DELETE /ldapServers/{id}][%d] deleteLdapServerNotFound  %+v", 404, o.Payload)
}

func (o *DeleteLdapServerNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteLdapServerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLdapServerConflict creates a DeleteLdapServerConflict with default headers values
func NewDeleteLdapServerConflict() *DeleteLdapServerConflict {
	return &DeleteLdapServerConflict{}
}

/*DeleteLdapServerConflict handles this case with default header values.

Conflict
*/
type DeleteLdapServerConflict struct {
	Payload *models.APIResult
}

func (o *DeleteLdapServerConflict) Error() string {
	return fmt.Sprintf("[DELETE /ldapServers/{id}][%d] deleteLdapServerConflict  %+v", 409, o.Payload)
}

func (o *DeleteLdapServerConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteLdapServerConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLdapServerInternalServerError creates a DeleteLdapServerInternalServerError with default headers values
func NewDeleteLdapServerInternalServerError() *DeleteLdapServerInternalServerError {
	return &DeleteLdapServerInternalServerError{}
}

/*DeleteLdapServerInternalServerError handles this case with default header values.

Internal Server Error
*/
type DeleteLdapServerInternalServerError struct {
	Payload *models.APIResult
}

func (o *DeleteLdapServerInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /ldapServers/{id}][%d] deleteLdapServerInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteLdapServerInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteLdapServerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
