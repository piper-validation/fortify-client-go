// Code generated by go-swagger; DO NOT EDIT.

package ldap_server_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListLdapServerReader is a Reader for the ListLdapServer structure.
type ListLdapServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListLdapServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListLdapServerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListLdapServerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListLdapServerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListLdapServerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListLdapServerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListLdapServerConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListLdapServerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListLdapServerOK creates a ListLdapServerOK with default headers values
func NewListLdapServerOK() *ListLdapServerOK {
	return &ListLdapServerOK{}
}

/*ListLdapServerOK handles this case with default header values.

OK
*/
type ListLdapServerOK struct {
	Payload *models.APIResultListLdapServerDto
}

func (o *ListLdapServerOK) Error() string {
	return fmt.Sprintf("[GET /ldapServers][%d] listLdapServerOK  %+v", 200, o.Payload)
}

func (o *ListLdapServerOK) GetPayload() *models.APIResultListLdapServerDto {
	return o.Payload
}

func (o *ListLdapServerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListLdapServerDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLdapServerBadRequest creates a ListLdapServerBadRequest with default headers values
func NewListLdapServerBadRequest() *ListLdapServerBadRequest {
	return &ListLdapServerBadRequest{}
}

/*ListLdapServerBadRequest handles this case with default header values.

Bad Request
*/
type ListLdapServerBadRequest struct {
	Payload *models.APIResult
}

func (o *ListLdapServerBadRequest) Error() string {
	return fmt.Sprintf("[GET /ldapServers][%d] listLdapServerBadRequest  %+v", 400, o.Payload)
}

func (o *ListLdapServerBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListLdapServerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLdapServerUnauthorized creates a ListLdapServerUnauthorized with default headers values
func NewListLdapServerUnauthorized() *ListLdapServerUnauthorized {
	return &ListLdapServerUnauthorized{}
}

/*ListLdapServerUnauthorized handles this case with default header values.

Unauthorized
*/
type ListLdapServerUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListLdapServerUnauthorized) Error() string {
	return fmt.Sprintf("[GET /ldapServers][%d] listLdapServerUnauthorized  %+v", 401, o.Payload)
}

func (o *ListLdapServerUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListLdapServerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLdapServerForbidden creates a ListLdapServerForbidden with default headers values
func NewListLdapServerForbidden() *ListLdapServerForbidden {
	return &ListLdapServerForbidden{}
}

/*ListLdapServerForbidden handles this case with default header values.

Forbidden
*/
type ListLdapServerForbidden struct {
	Payload *models.APIResult
}

func (o *ListLdapServerForbidden) Error() string {
	return fmt.Sprintf("[GET /ldapServers][%d] listLdapServerForbidden  %+v", 403, o.Payload)
}

func (o *ListLdapServerForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListLdapServerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLdapServerNotFound creates a ListLdapServerNotFound with default headers values
func NewListLdapServerNotFound() *ListLdapServerNotFound {
	return &ListLdapServerNotFound{}
}

/*ListLdapServerNotFound handles this case with default header values.

Not Found
*/
type ListLdapServerNotFound struct {
	Payload *models.APIResult
}

func (o *ListLdapServerNotFound) Error() string {
	return fmt.Sprintf("[GET /ldapServers][%d] listLdapServerNotFound  %+v", 404, o.Payload)
}

func (o *ListLdapServerNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListLdapServerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLdapServerConflict creates a ListLdapServerConflict with default headers values
func NewListLdapServerConflict() *ListLdapServerConflict {
	return &ListLdapServerConflict{}
}

/*ListLdapServerConflict handles this case with default header values.

Conflict
*/
type ListLdapServerConflict struct {
	Payload *models.APIResult
}

func (o *ListLdapServerConflict) Error() string {
	return fmt.Sprintf("[GET /ldapServers][%d] listLdapServerConflict  %+v", 409, o.Payload)
}

func (o *ListLdapServerConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListLdapServerConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLdapServerInternalServerError creates a ListLdapServerInternalServerError with default headers values
func NewListLdapServerInternalServerError() *ListLdapServerInternalServerError {
	return &ListLdapServerInternalServerError{}
}

/*ListLdapServerInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListLdapServerInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListLdapServerInternalServerError) Error() string {
	return fmt.Sprintf("[GET /ldapServers][%d] listLdapServerInternalServerError  %+v", 500, o.Payload)
}

func (o *ListLdapServerInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListLdapServerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
