// Code generated by go-swagger; DO NOT EDIT.

package ldap_server_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// MultiDeleteLdapServerReader is a Reader for the MultiDeleteLdapServer structure.
type MultiDeleteLdapServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MultiDeleteLdapServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewMultiDeleteLdapServerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMultiDeleteLdapServerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewMultiDeleteLdapServerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewMultiDeleteLdapServerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewMultiDeleteLdapServerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewMultiDeleteLdapServerConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewMultiDeleteLdapServerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewMultiDeleteLdapServerOK creates a MultiDeleteLdapServerOK with default headers values
func NewMultiDeleteLdapServerOK() *MultiDeleteLdapServerOK {
	return &MultiDeleteLdapServerOK{}
}

/*MultiDeleteLdapServerOK handles this case with default header values.

OK
*/
type MultiDeleteLdapServerOK struct {
	Payload *models.APIResultVoid
}

func (o *MultiDeleteLdapServerOK) Error() string {
	return fmt.Sprintf("[DELETE /ldapServers][%d] multiDeleteLdapServerOK  %+v", 200, o.Payload)
}

func (o *MultiDeleteLdapServerOK) GetPayload() *models.APIResultVoid {
	return o.Payload
}

func (o *MultiDeleteLdapServerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultVoid)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiDeleteLdapServerBadRequest creates a MultiDeleteLdapServerBadRequest with default headers values
func NewMultiDeleteLdapServerBadRequest() *MultiDeleteLdapServerBadRequest {
	return &MultiDeleteLdapServerBadRequest{}
}

/*MultiDeleteLdapServerBadRequest handles this case with default header values.

Bad Request
*/
type MultiDeleteLdapServerBadRequest struct {
	Payload *models.APIResult
}

func (o *MultiDeleteLdapServerBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /ldapServers][%d] multiDeleteLdapServerBadRequest  %+v", 400, o.Payload)
}

func (o *MultiDeleteLdapServerBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *MultiDeleteLdapServerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiDeleteLdapServerUnauthorized creates a MultiDeleteLdapServerUnauthorized with default headers values
func NewMultiDeleteLdapServerUnauthorized() *MultiDeleteLdapServerUnauthorized {
	return &MultiDeleteLdapServerUnauthorized{}
}

/*MultiDeleteLdapServerUnauthorized handles this case with default header values.

Unauthorized
*/
type MultiDeleteLdapServerUnauthorized struct {
	Payload *models.APIResult
}

func (o *MultiDeleteLdapServerUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /ldapServers][%d] multiDeleteLdapServerUnauthorized  %+v", 401, o.Payload)
}

func (o *MultiDeleteLdapServerUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *MultiDeleteLdapServerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiDeleteLdapServerForbidden creates a MultiDeleteLdapServerForbidden with default headers values
func NewMultiDeleteLdapServerForbidden() *MultiDeleteLdapServerForbidden {
	return &MultiDeleteLdapServerForbidden{}
}

/*MultiDeleteLdapServerForbidden handles this case with default header values.

Forbidden
*/
type MultiDeleteLdapServerForbidden struct {
	Payload *models.APIResult
}

func (o *MultiDeleteLdapServerForbidden) Error() string {
	return fmt.Sprintf("[DELETE /ldapServers][%d] multiDeleteLdapServerForbidden  %+v", 403, o.Payload)
}

func (o *MultiDeleteLdapServerForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *MultiDeleteLdapServerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiDeleteLdapServerNotFound creates a MultiDeleteLdapServerNotFound with default headers values
func NewMultiDeleteLdapServerNotFound() *MultiDeleteLdapServerNotFound {
	return &MultiDeleteLdapServerNotFound{}
}

/*MultiDeleteLdapServerNotFound handles this case with default header values.

Not Found
*/
type MultiDeleteLdapServerNotFound struct {
	Payload *models.APIResult
}

func (o *MultiDeleteLdapServerNotFound) Error() string {
	return fmt.Sprintf("[DELETE /ldapServers][%d] multiDeleteLdapServerNotFound  %+v", 404, o.Payload)
}

func (o *MultiDeleteLdapServerNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *MultiDeleteLdapServerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiDeleteLdapServerConflict creates a MultiDeleteLdapServerConflict with default headers values
func NewMultiDeleteLdapServerConflict() *MultiDeleteLdapServerConflict {
	return &MultiDeleteLdapServerConflict{}
}

/*MultiDeleteLdapServerConflict handles this case with default header values.

Conflict
*/
type MultiDeleteLdapServerConflict struct {
	Payload *models.APIResult
}

func (o *MultiDeleteLdapServerConflict) Error() string {
	return fmt.Sprintf("[DELETE /ldapServers][%d] multiDeleteLdapServerConflict  %+v", 409, o.Payload)
}

func (o *MultiDeleteLdapServerConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *MultiDeleteLdapServerConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiDeleteLdapServerInternalServerError creates a MultiDeleteLdapServerInternalServerError with default headers values
func NewMultiDeleteLdapServerInternalServerError() *MultiDeleteLdapServerInternalServerError {
	return &MultiDeleteLdapServerInternalServerError{}
}

/*MultiDeleteLdapServerInternalServerError handles this case with default header values.

Internal Server Error
*/
type MultiDeleteLdapServerInternalServerError struct {
	Payload *models.APIResult
}

func (o *MultiDeleteLdapServerInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /ldapServers][%d] multiDeleteLdapServerInternalServerError  %+v", 500, o.Payload)
}

func (o *MultiDeleteLdapServerInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *MultiDeleteLdapServerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
