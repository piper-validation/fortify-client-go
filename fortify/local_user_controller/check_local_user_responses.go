// Code generated by go-swagger; DO NOT EDIT.

package local_user_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// CheckLocalUserReader is a Reader for the CheckLocalUser structure.
type CheckLocalUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CheckLocalUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCheckLocalUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCheckLocalUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCheckLocalUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCheckLocalUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCheckLocalUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCheckLocalUserConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCheckLocalUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCheckLocalUserOK creates a CheckLocalUserOK with default headers values
func NewCheckLocalUserOK() *CheckLocalUserOK {
	return &CheckLocalUserOK{}
}

/*CheckLocalUserOK handles this case with default header values.

OK
*/
type CheckLocalUserOK struct {
	Payload *models.APIResultPasswordStrengthCheckResponse
}

func (o *CheckLocalUserOK) Error() string {
	return fmt.Sprintf("[POST /localUsers/action/checkPasswordStrength][%d] checkLocalUserOK  %+v", 200, o.Payload)
}

func (o *CheckLocalUserOK) GetPayload() *models.APIResultPasswordStrengthCheckResponse {
	return o.Payload
}

func (o *CheckLocalUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultPasswordStrengthCheckResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckLocalUserBadRequest creates a CheckLocalUserBadRequest with default headers values
func NewCheckLocalUserBadRequest() *CheckLocalUserBadRequest {
	return &CheckLocalUserBadRequest{}
}

/*CheckLocalUserBadRequest handles this case with default header values.

Bad Request
*/
type CheckLocalUserBadRequest struct {
	Payload *models.APIResult
}

func (o *CheckLocalUserBadRequest) Error() string {
	return fmt.Sprintf("[POST /localUsers/action/checkPasswordStrength][%d] checkLocalUserBadRequest  %+v", 400, o.Payload)
}

func (o *CheckLocalUserBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *CheckLocalUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckLocalUserUnauthorized creates a CheckLocalUserUnauthorized with default headers values
func NewCheckLocalUserUnauthorized() *CheckLocalUserUnauthorized {
	return &CheckLocalUserUnauthorized{}
}

/*CheckLocalUserUnauthorized handles this case with default header values.

Unauthorized
*/
type CheckLocalUserUnauthorized struct {
	Payload *models.APIResult
}

func (o *CheckLocalUserUnauthorized) Error() string {
	return fmt.Sprintf("[POST /localUsers/action/checkPasswordStrength][%d] checkLocalUserUnauthorized  %+v", 401, o.Payload)
}

func (o *CheckLocalUserUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *CheckLocalUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckLocalUserForbidden creates a CheckLocalUserForbidden with default headers values
func NewCheckLocalUserForbidden() *CheckLocalUserForbidden {
	return &CheckLocalUserForbidden{}
}

/*CheckLocalUserForbidden handles this case with default header values.

Forbidden
*/
type CheckLocalUserForbidden struct {
	Payload *models.APIResult
}

func (o *CheckLocalUserForbidden) Error() string {
	return fmt.Sprintf("[POST /localUsers/action/checkPasswordStrength][%d] checkLocalUserForbidden  %+v", 403, o.Payload)
}

func (o *CheckLocalUserForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *CheckLocalUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckLocalUserNotFound creates a CheckLocalUserNotFound with default headers values
func NewCheckLocalUserNotFound() *CheckLocalUserNotFound {
	return &CheckLocalUserNotFound{}
}

/*CheckLocalUserNotFound handles this case with default header values.

Not Found
*/
type CheckLocalUserNotFound struct {
	Payload *models.APIResult
}

func (o *CheckLocalUserNotFound) Error() string {
	return fmt.Sprintf("[POST /localUsers/action/checkPasswordStrength][%d] checkLocalUserNotFound  %+v", 404, o.Payload)
}

func (o *CheckLocalUserNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *CheckLocalUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckLocalUserConflict creates a CheckLocalUserConflict with default headers values
func NewCheckLocalUserConflict() *CheckLocalUserConflict {
	return &CheckLocalUserConflict{}
}

/*CheckLocalUserConflict handles this case with default header values.

Conflict
*/
type CheckLocalUserConflict struct {
	Payload *models.APIResult
}

func (o *CheckLocalUserConflict) Error() string {
	return fmt.Sprintf("[POST /localUsers/action/checkPasswordStrength][%d] checkLocalUserConflict  %+v", 409, o.Payload)
}

func (o *CheckLocalUserConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *CheckLocalUserConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckLocalUserInternalServerError creates a CheckLocalUserInternalServerError with default headers values
func NewCheckLocalUserInternalServerError() *CheckLocalUserInternalServerError {
	return &CheckLocalUserInternalServerError{}
}

/*CheckLocalUserInternalServerError handles this case with default header values.

Internal Server Error
*/
type CheckLocalUserInternalServerError struct {
	Payload *models.APIResult
}

func (o *CheckLocalUserInternalServerError) Error() string {
	return fmt.Sprintf("[POST /localUsers/action/checkPasswordStrength][%d] checkLocalUserInternalServerError  %+v", 500, o.Payload)
}

func (o *CheckLocalUserInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *CheckLocalUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
