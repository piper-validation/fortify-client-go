// Code generated by go-swagger; DO NOT EDIT.

package local_user_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// DeleteLocalUserReader is a Reader for the DeleteLocalUser structure.
type DeleteLocalUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteLocalUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteLocalUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteLocalUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteLocalUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteLocalUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteLocalUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteLocalUserConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteLocalUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteLocalUserOK creates a DeleteLocalUserOK with default headers values
func NewDeleteLocalUserOK() *DeleteLocalUserOK {
	return &DeleteLocalUserOK{}
}

/*DeleteLocalUserOK handles this case with default header values.

OK
*/
type DeleteLocalUserOK struct {
	Payload *models.APIResultVoid
}

func (o *DeleteLocalUserOK) Error() string {
	return fmt.Sprintf("[DELETE /localUsers/{id}][%d] deleteLocalUserOK  %+v", 200, o.Payload)
}

func (o *DeleteLocalUserOK) GetPayload() *models.APIResultVoid {
	return o.Payload
}

func (o *DeleteLocalUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultVoid)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLocalUserBadRequest creates a DeleteLocalUserBadRequest with default headers values
func NewDeleteLocalUserBadRequest() *DeleteLocalUserBadRequest {
	return &DeleteLocalUserBadRequest{}
}

/*DeleteLocalUserBadRequest handles this case with default header values.

Bad Request
*/
type DeleteLocalUserBadRequest struct {
	Payload *models.APIResult
}

func (o *DeleteLocalUserBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /localUsers/{id}][%d] deleteLocalUserBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteLocalUserBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteLocalUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLocalUserUnauthorized creates a DeleteLocalUserUnauthorized with default headers values
func NewDeleteLocalUserUnauthorized() *DeleteLocalUserUnauthorized {
	return &DeleteLocalUserUnauthorized{}
}

/*DeleteLocalUserUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteLocalUserUnauthorized struct {
	Payload *models.APIResult
}

func (o *DeleteLocalUserUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /localUsers/{id}][%d] deleteLocalUserUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteLocalUserUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteLocalUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLocalUserForbidden creates a DeleteLocalUserForbidden with default headers values
func NewDeleteLocalUserForbidden() *DeleteLocalUserForbidden {
	return &DeleteLocalUserForbidden{}
}

/*DeleteLocalUserForbidden handles this case with default header values.

Forbidden
*/
type DeleteLocalUserForbidden struct {
	Payload *models.APIResult
}

func (o *DeleteLocalUserForbidden) Error() string {
	return fmt.Sprintf("[DELETE /localUsers/{id}][%d] deleteLocalUserForbidden  %+v", 403, o.Payload)
}

func (o *DeleteLocalUserForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteLocalUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLocalUserNotFound creates a DeleteLocalUserNotFound with default headers values
func NewDeleteLocalUserNotFound() *DeleteLocalUserNotFound {
	return &DeleteLocalUserNotFound{}
}

/*DeleteLocalUserNotFound handles this case with default header values.

Not Found
*/
type DeleteLocalUserNotFound struct {
	Payload *models.APIResult
}

func (o *DeleteLocalUserNotFound) Error() string {
	return fmt.Sprintf("[DELETE /localUsers/{id}][%d] deleteLocalUserNotFound  %+v", 404, o.Payload)
}

func (o *DeleteLocalUserNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteLocalUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLocalUserConflict creates a DeleteLocalUserConflict with default headers values
func NewDeleteLocalUserConflict() *DeleteLocalUserConflict {
	return &DeleteLocalUserConflict{}
}

/*DeleteLocalUserConflict handles this case with default header values.

Conflict
*/
type DeleteLocalUserConflict struct {
	Payload *models.APIResult
}

func (o *DeleteLocalUserConflict) Error() string {
	return fmt.Sprintf("[DELETE /localUsers/{id}][%d] deleteLocalUserConflict  %+v", 409, o.Payload)
}

func (o *DeleteLocalUserConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteLocalUserConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLocalUserInternalServerError creates a DeleteLocalUserInternalServerError with default headers values
func NewDeleteLocalUserInternalServerError() *DeleteLocalUserInternalServerError {
	return &DeleteLocalUserInternalServerError{}
}

/*DeleteLocalUserInternalServerError handles this case with default header values.

Internal Server Error
*/
type DeleteLocalUserInternalServerError struct {
	Payload *models.APIResult
}

func (o *DeleteLocalUserInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /localUsers/{id}][%d] deleteLocalUserInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteLocalUserInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteLocalUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
