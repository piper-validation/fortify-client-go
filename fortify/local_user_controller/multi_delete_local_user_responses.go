// Code generated by go-swagger; DO NOT EDIT.

package local_user_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// MultiDeleteLocalUserReader is a Reader for the MultiDeleteLocalUser structure.
type MultiDeleteLocalUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MultiDeleteLocalUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewMultiDeleteLocalUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMultiDeleteLocalUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewMultiDeleteLocalUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewMultiDeleteLocalUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewMultiDeleteLocalUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewMultiDeleteLocalUserConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewMultiDeleteLocalUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewMultiDeleteLocalUserOK creates a MultiDeleteLocalUserOK with default headers values
func NewMultiDeleteLocalUserOK() *MultiDeleteLocalUserOK {
	return &MultiDeleteLocalUserOK{}
}

/*MultiDeleteLocalUserOK handles this case with default header values.

OK
*/
type MultiDeleteLocalUserOK struct {
	Payload *models.APIResultVoid
}

func (o *MultiDeleteLocalUserOK) Error() string {
	return fmt.Sprintf("[DELETE /localUsers][%d] multiDeleteLocalUserOK  %+v", 200, o.Payload)
}

func (o *MultiDeleteLocalUserOK) GetPayload() *models.APIResultVoid {
	return o.Payload
}

func (o *MultiDeleteLocalUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultVoid)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiDeleteLocalUserBadRequest creates a MultiDeleteLocalUserBadRequest with default headers values
func NewMultiDeleteLocalUserBadRequest() *MultiDeleteLocalUserBadRequest {
	return &MultiDeleteLocalUserBadRequest{}
}

/*MultiDeleteLocalUserBadRequest handles this case with default header values.

Bad Request
*/
type MultiDeleteLocalUserBadRequest struct {
	Payload *models.APIResult
}

func (o *MultiDeleteLocalUserBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /localUsers][%d] multiDeleteLocalUserBadRequest  %+v", 400, o.Payload)
}

func (o *MultiDeleteLocalUserBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *MultiDeleteLocalUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiDeleteLocalUserUnauthorized creates a MultiDeleteLocalUserUnauthorized with default headers values
func NewMultiDeleteLocalUserUnauthorized() *MultiDeleteLocalUserUnauthorized {
	return &MultiDeleteLocalUserUnauthorized{}
}

/*MultiDeleteLocalUserUnauthorized handles this case with default header values.

Unauthorized
*/
type MultiDeleteLocalUserUnauthorized struct {
	Payload *models.APIResult
}

func (o *MultiDeleteLocalUserUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /localUsers][%d] multiDeleteLocalUserUnauthorized  %+v", 401, o.Payload)
}

func (o *MultiDeleteLocalUserUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *MultiDeleteLocalUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiDeleteLocalUserForbidden creates a MultiDeleteLocalUserForbidden with default headers values
func NewMultiDeleteLocalUserForbidden() *MultiDeleteLocalUserForbidden {
	return &MultiDeleteLocalUserForbidden{}
}

/*MultiDeleteLocalUserForbidden handles this case with default header values.

Forbidden
*/
type MultiDeleteLocalUserForbidden struct {
	Payload *models.APIResult
}

func (o *MultiDeleteLocalUserForbidden) Error() string {
	return fmt.Sprintf("[DELETE /localUsers][%d] multiDeleteLocalUserForbidden  %+v", 403, o.Payload)
}

func (o *MultiDeleteLocalUserForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *MultiDeleteLocalUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiDeleteLocalUserNotFound creates a MultiDeleteLocalUserNotFound with default headers values
func NewMultiDeleteLocalUserNotFound() *MultiDeleteLocalUserNotFound {
	return &MultiDeleteLocalUserNotFound{}
}

/*MultiDeleteLocalUserNotFound handles this case with default header values.

Not Found
*/
type MultiDeleteLocalUserNotFound struct {
	Payload *models.APIResult
}

func (o *MultiDeleteLocalUserNotFound) Error() string {
	return fmt.Sprintf("[DELETE /localUsers][%d] multiDeleteLocalUserNotFound  %+v", 404, o.Payload)
}

func (o *MultiDeleteLocalUserNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *MultiDeleteLocalUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiDeleteLocalUserConflict creates a MultiDeleteLocalUserConflict with default headers values
func NewMultiDeleteLocalUserConflict() *MultiDeleteLocalUserConflict {
	return &MultiDeleteLocalUserConflict{}
}

/*MultiDeleteLocalUserConflict handles this case with default header values.

Conflict
*/
type MultiDeleteLocalUserConflict struct {
	Payload *models.APIResult
}

func (o *MultiDeleteLocalUserConflict) Error() string {
	return fmt.Sprintf("[DELETE /localUsers][%d] multiDeleteLocalUserConflict  %+v", 409, o.Payload)
}

func (o *MultiDeleteLocalUserConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *MultiDeleteLocalUserConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiDeleteLocalUserInternalServerError creates a MultiDeleteLocalUserInternalServerError with default headers values
func NewMultiDeleteLocalUserInternalServerError() *MultiDeleteLocalUserInternalServerError {
	return &MultiDeleteLocalUserInternalServerError{}
}

/*MultiDeleteLocalUserInternalServerError handles this case with default header values.

Internal Server Error
*/
type MultiDeleteLocalUserInternalServerError struct {
	Payload *models.APIResult
}

func (o *MultiDeleteLocalUserInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /localUsers][%d] multiDeleteLocalUserInternalServerError  %+v", 500, o.Payload)
}

func (o *MultiDeleteLocalUserInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *MultiDeleteLocalUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
