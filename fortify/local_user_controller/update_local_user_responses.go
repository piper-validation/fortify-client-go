// Code generated by go-swagger; DO NOT EDIT.

package local_user_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// UpdateLocalUserReader is a Reader for the UpdateLocalUser structure.
type UpdateLocalUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateLocalUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateLocalUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateLocalUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateLocalUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateLocalUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateLocalUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateLocalUserConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateLocalUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateLocalUserOK creates a UpdateLocalUserOK with default headers values
func NewUpdateLocalUserOK() *UpdateLocalUserOK {
	return &UpdateLocalUserOK{}
}

/*UpdateLocalUserOK handles this case with default header values.

OK
*/
type UpdateLocalUserOK struct {
	Payload *models.APIResultLocalUser
}

func (o *UpdateLocalUserOK) Error() string {
	return fmt.Sprintf("[PUT /localUsers/{id}][%d] updateLocalUserOK  %+v", 200, o.Payload)
}

func (o *UpdateLocalUserOK) GetPayload() *models.APIResultLocalUser {
	return o.Payload
}

func (o *UpdateLocalUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultLocalUser)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLocalUserBadRequest creates a UpdateLocalUserBadRequest with default headers values
func NewUpdateLocalUserBadRequest() *UpdateLocalUserBadRequest {
	return &UpdateLocalUserBadRequest{}
}

/*UpdateLocalUserBadRequest handles this case with default header values.

Bad Request
*/
type UpdateLocalUserBadRequest struct {
	Payload *models.APIResult
}

func (o *UpdateLocalUserBadRequest) Error() string {
	return fmt.Sprintf("[PUT /localUsers/{id}][%d] updateLocalUserBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateLocalUserBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateLocalUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLocalUserUnauthorized creates a UpdateLocalUserUnauthorized with default headers values
func NewUpdateLocalUserUnauthorized() *UpdateLocalUserUnauthorized {
	return &UpdateLocalUserUnauthorized{}
}

/*UpdateLocalUserUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateLocalUserUnauthorized struct {
	Payload *models.APIResult
}

func (o *UpdateLocalUserUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /localUsers/{id}][%d] updateLocalUserUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateLocalUserUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateLocalUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLocalUserForbidden creates a UpdateLocalUserForbidden with default headers values
func NewUpdateLocalUserForbidden() *UpdateLocalUserForbidden {
	return &UpdateLocalUserForbidden{}
}

/*UpdateLocalUserForbidden handles this case with default header values.

Forbidden
*/
type UpdateLocalUserForbidden struct {
	Payload *models.APIResult
}

func (o *UpdateLocalUserForbidden) Error() string {
	return fmt.Sprintf("[PUT /localUsers/{id}][%d] updateLocalUserForbidden  %+v", 403, o.Payload)
}

func (o *UpdateLocalUserForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateLocalUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLocalUserNotFound creates a UpdateLocalUserNotFound with default headers values
func NewUpdateLocalUserNotFound() *UpdateLocalUserNotFound {
	return &UpdateLocalUserNotFound{}
}

/*UpdateLocalUserNotFound handles this case with default header values.

Not Found
*/
type UpdateLocalUserNotFound struct {
	Payload *models.APIResult
}

func (o *UpdateLocalUserNotFound) Error() string {
	return fmt.Sprintf("[PUT /localUsers/{id}][%d] updateLocalUserNotFound  %+v", 404, o.Payload)
}

func (o *UpdateLocalUserNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateLocalUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLocalUserConflict creates a UpdateLocalUserConflict with default headers values
func NewUpdateLocalUserConflict() *UpdateLocalUserConflict {
	return &UpdateLocalUserConflict{}
}

/*UpdateLocalUserConflict handles this case with default header values.

Conflict
*/
type UpdateLocalUserConflict struct {
	Payload *models.APIResult
}

func (o *UpdateLocalUserConflict) Error() string {
	return fmt.Sprintf("[PUT /localUsers/{id}][%d] updateLocalUserConflict  %+v", 409, o.Payload)
}

func (o *UpdateLocalUserConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateLocalUserConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLocalUserInternalServerError creates a UpdateLocalUserInternalServerError with default headers values
func NewUpdateLocalUserInternalServerError() *UpdateLocalUserInternalServerError {
	return &UpdateLocalUserInternalServerError{}
}

/*UpdateLocalUserInternalServerError handles this case with default header values.

Internal Server Error
*/
type UpdateLocalUserInternalServerError struct {
	Payload *models.APIResult
}

func (o *UpdateLocalUserInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /localUsers/{id}][%d] updateLocalUserInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateLocalUserInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateLocalUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
