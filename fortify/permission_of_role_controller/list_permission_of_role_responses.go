// Code generated by go-swagger; DO NOT EDIT.

package permission_of_role_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListPermissionOfRoleReader is a Reader for the ListPermissionOfRole structure.
type ListPermissionOfRoleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListPermissionOfRoleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListPermissionOfRoleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListPermissionOfRoleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListPermissionOfRoleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListPermissionOfRoleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListPermissionOfRoleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListPermissionOfRoleConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListPermissionOfRoleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListPermissionOfRoleOK creates a ListPermissionOfRoleOK with default headers values
func NewListPermissionOfRoleOK() *ListPermissionOfRoleOK {
	return &ListPermissionOfRoleOK{}
}

/*ListPermissionOfRoleOK handles this case with default header values.

OK
*/
type ListPermissionOfRoleOK struct {
	Payload *models.APIResultListPermission
}

func (o *ListPermissionOfRoleOK) Error() string {
	return fmt.Sprintf("[GET /roles/{parentId}/permissions][%d] listPermissionOfRoleOK  %+v", 200, o.Payload)
}

func (o *ListPermissionOfRoleOK) GetPayload() *models.APIResultListPermission {
	return o.Payload
}

func (o *ListPermissionOfRoleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListPermission)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPermissionOfRoleBadRequest creates a ListPermissionOfRoleBadRequest with default headers values
func NewListPermissionOfRoleBadRequest() *ListPermissionOfRoleBadRequest {
	return &ListPermissionOfRoleBadRequest{}
}

/*ListPermissionOfRoleBadRequest handles this case with default header values.

Bad Request
*/
type ListPermissionOfRoleBadRequest struct {
	Payload *models.APIResult
}

func (o *ListPermissionOfRoleBadRequest) Error() string {
	return fmt.Sprintf("[GET /roles/{parentId}/permissions][%d] listPermissionOfRoleBadRequest  %+v", 400, o.Payload)
}

func (o *ListPermissionOfRoleBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListPermissionOfRoleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPermissionOfRoleUnauthorized creates a ListPermissionOfRoleUnauthorized with default headers values
func NewListPermissionOfRoleUnauthorized() *ListPermissionOfRoleUnauthorized {
	return &ListPermissionOfRoleUnauthorized{}
}

/*ListPermissionOfRoleUnauthorized handles this case with default header values.

Unauthorized
*/
type ListPermissionOfRoleUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListPermissionOfRoleUnauthorized) Error() string {
	return fmt.Sprintf("[GET /roles/{parentId}/permissions][%d] listPermissionOfRoleUnauthorized  %+v", 401, o.Payload)
}

func (o *ListPermissionOfRoleUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListPermissionOfRoleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPermissionOfRoleForbidden creates a ListPermissionOfRoleForbidden with default headers values
func NewListPermissionOfRoleForbidden() *ListPermissionOfRoleForbidden {
	return &ListPermissionOfRoleForbidden{}
}

/*ListPermissionOfRoleForbidden handles this case with default header values.

Forbidden
*/
type ListPermissionOfRoleForbidden struct {
	Payload *models.APIResult
}

func (o *ListPermissionOfRoleForbidden) Error() string {
	return fmt.Sprintf("[GET /roles/{parentId}/permissions][%d] listPermissionOfRoleForbidden  %+v", 403, o.Payload)
}

func (o *ListPermissionOfRoleForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListPermissionOfRoleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPermissionOfRoleNotFound creates a ListPermissionOfRoleNotFound with default headers values
func NewListPermissionOfRoleNotFound() *ListPermissionOfRoleNotFound {
	return &ListPermissionOfRoleNotFound{}
}

/*ListPermissionOfRoleNotFound handles this case with default header values.

Not Found
*/
type ListPermissionOfRoleNotFound struct {
	Payload *models.APIResult
}

func (o *ListPermissionOfRoleNotFound) Error() string {
	return fmt.Sprintf("[GET /roles/{parentId}/permissions][%d] listPermissionOfRoleNotFound  %+v", 404, o.Payload)
}

func (o *ListPermissionOfRoleNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListPermissionOfRoleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPermissionOfRoleConflict creates a ListPermissionOfRoleConflict with default headers values
func NewListPermissionOfRoleConflict() *ListPermissionOfRoleConflict {
	return &ListPermissionOfRoleConflict{}
}

/*ListPermissionOfRoleConflict handles this case with default header values.

Conflict
*/
type ListPermissionOfRoleConflict struct {
	Payload *models.APIResult
}

func (o *ListPermissionOfRoleConflict) Error() string {
	return fmt.Sprintf("[GET /roles/{parentId}/permissions][%d] listPermissionOfRoleConflict  %+v", 409, o.Payload)
}

func (o *ListPermissionOfRoleConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListPermissionOfRoleConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPermissionOfRoleInternalServerError creates a ListPermissionOfRoleInternalServerError with default headers values
func NewListPermissionOfRoleInternalServerError() *ListPermissionOfRoleInternalServerError {
	return &ListPermissionOfRoleInternalServerError{}
}

/*ListPermissionOfRoleInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListPermissionOfRoleInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListPermissionOfRoleInternalServerError) Error() string {
	return fmt.Sprintf("[GET /roles/{parentId}/permissions][%d] listPermissionOfRoleInternalServerError  %+v", 500, o.Payload)
}

func (o *ListPermissionOfRoleInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListPermissionOfRoleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
