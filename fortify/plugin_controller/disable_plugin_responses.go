// Code generated by go-swagger; DO NOT EDIT.

package plugin_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// DisablePluginReader is a Reader for the DisablePlugin structure.
type DisablePluginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DisablePluginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDisablePluginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDisablePluginBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDisablePluginUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDisablePluginForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDisablePluginNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDisablePluginConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDisablePluginInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDisablePluginOK creates a DisablePluginOK with default headers values
func NewDisablePluginOK() *DisablePluginOK {
	return &DisablePluginOK{}
}

/*DisablePluginOK handles this case with default header values.

OK
*/
type DisablePluginOK struct {
	Payload *models.APIResultVoid
}

func (o *DisablePluginOK) Error() string {
	return fmt.Sprintf("[POST /plugins/action/disable][%d] disablePluginOK  %+v", 200, o.Payload)
}

func (o *DisablePluginOK) GetPayload() *models.APIResultVoid {
	return o.Payload
}

func (o *DisablePluginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultVoid)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisablePluginBadRequest creates a DisablePluginBadRequest with default headers values
func NewDisablePluginBadRequest() *DisablePluginBadRequest {
	return &DisablePluginBadRequest{}
}

/*DisablePluginBadRequest handles this case with default header values.

Bad Request
*/
type DisablePluginBadRequest struct {
	Payload *models.APIResult
}

func (o *DisablePluginBadRequest) Error() string {
	return fmt.Sprintf("[POST /plugins/action/disable][%d] disablePluginBadRequest  %+v", 400, o.Payload)
}

func (o *DisablePluginBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DisablePluginBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisablePluginUnauthorized creates a DisablePluginUnauthorized with default headers values
func NewDisablePluginUnauthorized() *DisablePluginUnauthorized {
	return &DisablePluginUnauthorized{}
}

/*DisablePluginUnauthorized handles this case with default header values.

Unauthorized
*/
type DisablePluginUnauthorized struct {
	Payload *models.APIResult
}

func (o *DisablePluginUnauthorized) Error() string {
	return fmt.Sprintf("[POST /plugins/action/disable][%d] disablePluginUnauthorized  %+v", 401, o.Payload)
}

func (o *DisablePluginUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DisablePluginUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisablePluginForbidden creates a DisablePluginForbidden with default headers values
func NewDisablePluginForbidden() *DisablePluginForbidden {
	return &DisablePluginForbidden{}
}

/*DisablePluginForbidden handles this case with default header values.

Forbidden
*/
type DisablePluginForbidden struct {
	Payload *models.APIResult
}

func (o *DisablePluginForbidden) Error() string {
	return fmt.Sprintf("[POST /plugins/action/disable][%d] disablePluginForbidden  %+v", 403, o.Payload)
}

func (o *DisablePluginForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DisablePluginForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisablePluginNotFound creates a DisablePluginNotFound with default headers values
func NewDisablePluginNotFound() *DisablePluginNotFound {
	return &DisablePluginNotFound{}
}

/*DisablePluginNotFound handles this case with default header values.

Not Found
*/
type DisablePluginNotFound struct {
	Payload *models.APIResult
}

func (o *DisablePluginNotFound) Error() string {
	return fmt.Sprintf("[POST /plugins/action/disable][%d] disablePluginNotFound  %+v", 404, o.Payload)
}

func (o *DisablePluginNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DisablePluginNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisablePluginConflict creates a DisablePluginConflict with default headers values
func NewDisablePluginConflict() *DisablePluginConflict {
	return &DisablePluginConflict{}
}

/*DisablePluginConflict handles this case with default header values.

Conflict
*/
type DisablePluginConflict struct {
	Payload *models.APIResult
}

func (o *DisablePluginConflict) Error() string {
	return fmt.Sprintf("[POST /plugins/action/disable][%d] disablePluginConflict  %+v", 409, o.Payload)
}

func (o *DisablePluginConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DisablePluginConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisablePluginInternalServerError creates a DisablePluginInternalServerError with default headers values
func NewDisablePluginInternalServerError() *DisablePluginInternalServerError {
	return &DisablePluginInternalServerError{}
}

/*DisablePluginInternalServerError handles this case with default header values.

Internal Server Error
*/
type DisablePluginInternalServerError struct {
	Payload *models.APIResult
}

func (o *DisablePluginInternalServerError) Error() string {
	return fmt.Sprintf("[POST /plugins/action/disable][%d] disablePluginInternalServerError  %+v", 500, o.Payload)
}

func (o *DisablePluginInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DisablePluginInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
