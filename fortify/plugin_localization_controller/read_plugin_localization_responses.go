// Code generated by go-swagger; DO NOT EDIT.

package plugin_localization_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ReadPluginLocalizationReader is a Reader for the ReadPluginLocalization structure.
type ReadPluginLocalizationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadPluginLocalizationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadPluginLocalizationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReadPluginLocalizationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReadPluginLocalizationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewReadPluginLocalizationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReadPluginLocalizationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewReadPluginLocalizationConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadPluginLocalizationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadPluginLocalizationOK creates a ReadPluginLocalizationOK with default headers values
func NewReadPluginLocalizationOK() *ReadPluginLocalizationOK {
	return &ReadPluginLocalizationOK{}
}

/*ReadPluginLocalizationOK handles this case with default header values.

OK
*/
type ReadPluginLocalizationOK struct {
	Payload *models.APIResultPluginLocalization
}

func (o *ReadPluginLocalizationOK) Error() string {
	return fmt.Sprintf("[GET /pluginlocalization][%d] readPluginLocalizationOK  %+v", 200, o.Payload)
}

func (o *ReadPluginLocalizationOK) GetPayload() *models.APIResultPluginLocalization {
	return o.Payload
}

func (o *ReadPluginLocalizationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultPluginLocalization)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadPluginLocalizationBadRequest creates a ReadPluginLocalizationBadRequest with default headers values
func NewReadPluginLocalizationBadRequest() *ReadPluginLocalizationBadRequest {
	return &ReadPluginLocalizationBadRequest{}
}

/*ReadPluginLocalizationBadRequest handles this case with default header values.

Bad Request
*/
type ReadPluginLocalizationBadRequest struct {
	Payload *models.APIResult
}

func (o *ReadPluginLocalizationBadRequest) Error() string {
	return fmt.Sprintf("[GET /pluginlocalization][%d] readPluginLocalizationBadRequest  %+v", 400, o.Payload)
}

func (o *ReadPluginLocalizationBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadPluginLocalizationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadPluginLocalizationUnauthorized creates a ReadPluginLocalizationUnauthorized with default headers values
func NewReadPluginLocalizationUnauthorized() *ReadPluginLocalizationUnauthorized {
	return &ReadPluginLocalizationUnauthorized{}
}

/*ReadPluginLocalizationUnauthorized handles this case with default header values.

Unauthorized
*/
type ReadPluginLocalizationUnauthorized struct {
	Payload *models.APIResult
}

func (o *ReadPluginLocalizationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /pluginlocalization][%d] readPluginLocalizationUnauthorized  %+v", 401, o.Payload)
}

func (o *ReadPluginLocalizationUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadPluginLocalizationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadPluginLocalizationForbidden creates a ReadPluginLocalizationForbidden with default headers values
func NewReadPluginLocalizationForbidden() *ReadPluginLocalizationForbidden {
	return &ReadPluginLocalizationForbidden{}
}

/*ReadPluginLocalizationForbidden handles this case with default header values.

Forbidden
*/
type ReadPluginLocalizationForbidden struct {
	Payload *models.APIResult
}

func (o *ReadPluginLocalizationForbidden) Error() string {
	return fmt.Sprintf("[GET /pluginlocalization][%d] readPluginLocalizationForbidden  %+v", 403, o.Payload)
}

func (o *ReadPluginLocalizationForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadPluginLocalizationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadPluginLocalizationNotFound creates a ReadPluginLocalizationNotFound with default headers values
func NewReadPluginLocalizationNotFound() *ReadPluginLocalizationNotFound {
	return &ReadPluginLocalizationNotFound{}
}

/*ReadPluginLocalizationNotFound handles this case with default header values.

Not Found
*/
type ReadPluginLocalizationNotFound struct {
	Payload *models.APIResult
}

func (o *ReadPluginLocalizationNotFound) Error() string {
	return fmt.Sprintf("[GET /pluginlocalization][%d] readPluginLocalizationNotFound  %+v", 404, o.Payload)
}

func (o *ReadPluginLocalizationNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadPluginLocalizationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadPluginLocalizationConflict creates a ReadPluginLocalizationConflict with default headers values
func NewReadPluginLocalizationConflict() *ReadPluginLocalizationConflict {
	return &ReadPluginLocalizationConflict{}
}

/*ReadPluginLocalizationConflict handles this case with default header values.

Conflict
*/
type ReadPluginLocalizationConflict struct {
	Payload *models.APIResult
}

func (o *ReadPluginLocalizationConflict) Error() string {
	return fmt.Sprintf("[GET /pluginlocalization][%d] readPluginLocalizationConflict  %+v", 409, o.Payload)
}

func (o *ReadPluginLocalizationConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadPluginLocalizationConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadPluginLocalizationInternalServerError creates a ReadPluginLocalizationInternalServerError with default headers values
func NewReadPluginLocalizationInternalServerError() *ReadPluginLocalizationInternalServerError {
	return &ReadPluginLocalizationInternalServerError{}
}

/*ReadPluginLocalizationInternalServerError handles this case with default header values.

Internal Server Error
*/
type ReadPluginLocalizationInternalServerError struct {
	Payload *models.APIResult
}

func (o *ReadPluginLocalizationInternalServerError) Error() string {
	return fmt.Sprintf("[GET /pluginlocalization][%d] readPluginLocalizationInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadPluginLocalizationInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadPluginLocalizationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
