// Code generated by go-swagger; DO NOT EDIT.

package project_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListProjectReader is a Reader for the ListProject structure.
type ListProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListProjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListProjectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListProjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListProjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListProjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListProjectConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListProjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListProjectOK creates a ListProjectOK with default headers values
func NewListProjectOK() *ListProjectOK {
	return &ListProjectOK{}
}

/*ListProjectOK handles this case with default header values.

OK
*/
type ListProjectOK struct {
	Payload *models.APIResultListProject
}

func (o *ListProjectOK) Error() string {
	return fmt.Sprintf("[GET /projects][%d] listProjectOK  %+v", 200, o.Payload)
}

func (o *ListProjectOK) GetPayload() *models.APIResultListProject {
	return o.Payload
}

func (o *ListProjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListProject)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectBadRequest creates a ListProjectBadRequest with default headers values
func NewListProjectBadRequest() *ListProjectBadRequest {
	return &ListProjectBadRequest{}
}

/*ListProjectBadRequest handles this case with default header values.

Bad Request
*/
type ListProjectBadRequest struct {
	Payload *models.APIResult
}

func (o *ListProjectBadRequest) Error() string {
	return fmt.Sprintf("[GET /projects][%d] listProjectBadRequest  %+v", 400, o.Payload)
}

func (o *ListProjectBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListProjectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectUnauthorized creates a ListProjectUnauthorized with default headers values
func NewListProjectUnauthorized() *ListProjectUnauthorized {
	return &ListProjectUnauthorized{}
}

/*ListProjectUnauthorized handles this case with default header values.

Unauthorized
*/
type ListProjectUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListProjectUnauthorized) Error() string {
	return fmt.Sprintf("[GET /projects][%d] listProjectUnauthorized  %+v", 401, o.Payload)
}

func (o *ListProjectUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListProjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectForbidden creates a ListProjectForbidden with default headers values
func NewListProjectForbidden() *ListProjectForbidden {
	return &ListProjectForbidden{}
}

/*ListProjectForbidden handles this case with default header values.

Forbidden
*/
type ListProjectForbidden struct {
	Payload *models.APIResult
}

func (o *ListProjectForbidden) Error() string {
	return fmt.Sprintf("[GET /projects][%d] listProjectForbidden  %+v", 403, o.Payload)
}

func (o *ListProjectForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListProjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectNotFound creates a ListProjectNotFound with default headers values
func NewListProjectNotFound() *ListProjectNotFound {
	return &ListProjectNotFound{}
}

/*ListProjectNotFound handles this case with default header values.

Not Found
*/
type ListProjectNotFound struct {
	Payload *models.APIResult
}

func (o *ListProjectNotFound) Error() string {
	return fmt.Sprintf("[GET /projects][%d] listProjectNotFound  %+v", 404, o.Payload)
}

func (o *ListProjectNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListProjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectConflict creates a ListProjectConflict with default headers values
func NewListProjectConflict() *ListProjectConflict {
	return &ListProjectConflict{}
}

/*ListProjectConflict handles this case with default header values.

Conflict
*/
type ListProjectConflict struct {
	Payload *models.APIResult
}

func (o *ListProjectConflict) Error() string {
	return fmt.Sprintf("[GET /projects][%d] listProjectConflict  %+v", 409, o.Payload)
}

func (o *ListProjectConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListProjectConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectInternalServerError creates a ListProjectInternalServerError with default headers values
func NewListProjectInternalServerError() *ListProjectInternalServerError {
	return &ListProjectInternalServerError{}
}

/*ListProjectInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListProjectInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListProjectInternalServerError) Error() string {
	return fmt.Sprintf("[GET /projects][%d] listProjectInternalServerError  %+v", 500, o.Payload)
}

func (o *ListProjectInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListProjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
