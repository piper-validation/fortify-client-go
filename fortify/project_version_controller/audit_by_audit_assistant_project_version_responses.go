// Code generated by go-swagger; DO NOT EDIT.

package project_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// AuditByAuditAssistantProjectVersionReader is a Reader for the AuditByAuditAssistantProjectVersion structure.
type AuditByAuditAssistantProjectVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuditByAuditAssistantProjectVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuditByAuditAssistantProjectVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAuditByAuditAssistantProjectVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAuditByAuditAssistantProjectVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAuditByAuditAssistantProjectVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAuditByAuditAssistantProjectVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewAuditByAuditAssistantProjectVersionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAuditByAuditAssistantProjectVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAuditByAuditAssistantProjectVersionOK creates a AuditByAuditAssistantProjectVersionOK with default headers values
func NewAuditByAuditAssistantProjectVersionOK() *AuditByAuditAssistantProjectVersionOK {
	return &AuditByAuditAssistantProjectVersionOK{}
}

/*AuditByAuditAssistantProjectVersionOK handles this case with default header values.

OK
*/
type AuditByAuditAssistantProjectVersionOK struct {
	Payload *models.APIResultVoid
}

func (o *AuditByAuditAssistantProjectVersionOK) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/auditByAuditAssistant][%d] auditByAuditAssistantProjectVersionOK  %+v", 200, o.Payload)
}

func (o *AuditByAuditAssistantProjectVersionOK) GetPayload() *models.APIResultVoid {
	return o.Payload
}

func (o *AuditByAuditAssistantProjectVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultVoid)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuditByAuditAssistantProjectVersionBadRequest creates a AuditByAuditAssistantProjectVersionBadRequest with default headers values
func NewAuditByAuditAssistantProjectVersionBadRequest() *AuditByAuditAssistantProjectVersionBadRequest {
	return &AuditByAuditAssistantProjectVersionBadRequest{}
}

/*AuditByAuditAssistantProjectVersionBadRequest handles this case with default header values.

Bad Request
*/
type AuditByAuditAssistantProjectVersionBadRequest struct {
	Payload *models.APIResult
}

func (o *AuditByAuditAssistantProjectVersionBadRequest) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/auditByAuditAssistant][%d] auditByAuditAssistantProjectVersionBadRequest  %+v", 400, o.Payload)
}

func (o *AuditByAuditAssistantProjectVersionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *AuditByAuditAssistantProjectVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuditByAuditAssistantProjectVersionUnauthorized creates a AuditByAuditAssistantProjectVersionUnauthorized with default headers values
func NewAuditByAuditAssistantProjectVersionUnauthorized() *AuditByAuditAssistantProjectVersionUnauthorized {
	return &AuditByAuditAssistantProjectVersionUnauthorized{}
}

/*AuditByAuditAssistantProjectVersionUnauthorized handles this case with default header values.

Unauthorized
*/
type AuditByAuditAssistantProjectVersionUnauthorized struct {
	Payload *models.APIResult
}

func (o *AuditByAuditAssistantProjectVersionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/auditByAuditAssistant][%d] auditByAuditAssistantProjectVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *AuditByAuditAssistantProjectVersionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *AuditByAuditAssistantProjectVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuditByAuditAssistantProjectVersionForbidden creates a AuditByAuditAssistantProjectVersionForbidden with default headers values
func NewAuditByAuditAssistantProjectVersionForbidden() *AuditByAuditAssistantProjectVersionForbidden {
	return &AuditByAuditAssistantProjectVersionForbidden{}
}

/*AuditByAuditAssistantProjectVersionForbidden handles this case with default header values.

Forbidden
*/
type AuditByAuditAssistantProjectVersionForbidden struct {
	Payload *models.APIResult
}

func (o *AuditByAuditAssistantProjectVersionForbidden) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/auditByAuditAssistant][%d] auditByAuditAssistantProjectVersionForbidden  %+v", 403, o.Payload)
}

func (o *AuditByAuditAssistantProjectVersionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *AuditByAuditAssistantProjectVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuditByAuditAssistantProjectVersionNotFound creates a AuditByAuditAssistantProjectVersionNotFound with default headers values
func NewAuditByAuditAssistantProjectVersionNotFound() *AuditByAuditAssistantProjectVersionNotFound {
	return &AuditByAuditAssistantProjectVersionNotFound{}
}

/*AuditByAuditAssistantProjectVersionNotFound handles this case with default header values.

Not Found
*/
type AuditByAuditAssistantProjectVersionNotFound struct {
	Payload *models.APIResult
}

func (o *AuditByAuditAssistantProjectVersionNotFound) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/auditByAuditAssistant][%d] auditByAuditAssistantProjectVersionNotFound  %+v", 404, o.Payload)
}

func (o *AuditByAuditAssistantProjectVersionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *AuditByAuditAssistantProjectVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuditByAuditAssistantProjectVersionConflict creates a AuditByAuditAssistantProjectVersionConflict with default headers values
func NewAuditByAuditAssistantProjectVersionConflict() *AuditByAuditAssistantProjectVersionConflict {
	return &AuditByAuditAssistantProjectVersionConflict{}
}

/*AuditByAuditAssistantProjectVersionConflict handles this case with default header values.

Conflict
*/
type AuditByAuditAssistantProjectVersionConflict struct {
	Payload *models.APIResult
}

func (o *AuditByAuditAssistantProjectVersionConflict) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/auditByAuditAssistant][%d] auditByAuditAssistantProjectVersionConflict  %+v", 409, o.Payload)
}

func (o *AuditByAuditAssistantProjectVersionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *AuditByAuditAssistantProjectVersionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuditByAuditAssistantProjectVersionInternalServerError creates a AuditByAuditAssistantProjectVersionInternalServerError with default headers values
func NewAuditByAuditAssistantProjectVersionInternalServerError() *AuditByAuditAssistantProjectVersionInternalServerError {
	return &AuditByAuditAssistantProjectVersionInternalServerError{}
}

/*AuditByAuditAssistantProjectVersionInternalServerError handles this case with default header values.

Internal Server Error
*/
type AuditByAuditAssistantProjectVersionInternalServerError struct {
	Payload *models.APIResult
}

func (o *AuditByAuditAssistantProjectVersionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/auditByAuditAssistant][%d] auditByAuditAssistantProjectVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *AuditByAuditAssistantProjectVersionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *AuditByAuditAssistantProjectVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
