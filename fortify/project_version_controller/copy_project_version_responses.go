// Code generated by go-swagger; DO NOT EDIT.

package project_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// CopyProjectVersionReader is a Reader for the CopyProjectVersion structure.
type CopyProjectVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CopyProjectVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCopyProjectVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCopyProjectVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCopyProjectVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCopyProjectVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCopyProjectVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCopyProjectVersionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCopyProjectVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCopyProjectVersionOK creates a CopyProjectVersionOK with default headers values
func NewCopyProjectVersionOK() *CopyProjectVersionOK {
	return &CopyProjectVersionOK{}
}

/*CopyProjectVersionOK handles this case with default header values.

OK
*/
type CopyProjectVersionOK struct {
	Payload *models.APIResultVoid
}

func (o *CopyProjectVersionOK) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/copyFromPartial][%d] copyProjectVersionOK  %+v", 200, o.Payload)
}

func (o *CopyProjectVersionOK) GetPayload() *models.APIResultVoid {
	return o.Payload
}

func (o *CopyProjectVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultVoid)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCopyProjectVersionBadRequest creates a CopyProjectVersionBadRequest with default headers values
func NewCopyProjectVersionBadRequest() *CopyProjectVersionBadRequest {
	return &CopyProjectVersionBadRequest{}
}

/*CopyProjectVersionBadRequest handles this case with default header values.

Bad Request
*/
type CopyProjectVersionBadRequest struct {
	Payload *models.APIResult
}

func (o *CopyProjectVersionBadRequest) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/copyFromPartial][%d] copyProjectVersionBadRequest  %+v", 400, o.Payload)
}

func (o *CopyProjectVersionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *CopyProjectVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCopyProjectVersionUnauthorized creates a CopyProjectVersionUnauthorized with default headers values
func NewCopyProjectVersionUnauthorized() *CopyProjectVersionUnauthorized {
	return &CopyProjectVersionUnauthorized{}
}

/*CopyProjectVersionUnauthorized handles this case with default header values.

Unauthorized
*/
type CopyProjectVersionUnauthorized struct {
	Payload *models.APIResult
}

func (o *CopyProjectVersionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/copyFromPartial][%d] copyProjectVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *CopyProjectVersionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *CopyProjectVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCopyProjectVersionForbidden creates a CopyProjectVersionForbidden with default headers values
func NewCopyProjectVersionForbidden() *CopyProjectVersionForbidden {
	return &CopyProjectVersionForbidden{}
}

/*CopyProjectVersionForbidden handles this case with default header values.

Forbidden
*/
type CopyProjectVersionForbidden struct {
	Payload *models.APIResult
}

func (o *CopyProjectVersionForbidden) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/copyFromPartial][%d] copyProjectVersionForbidden  %+v", 403, o.Payload)
}

func (o *CopyProjectVersionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *CopyProjectVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCopyProjectVersionNotFound creates a CopyProjectVersionNotFound with default headers values
func NewCopyProjectVersionNotFound() *CopyProjectVersionNotFound {
	return &CopyProjectVersionNotFound{}
}

/*CopyProjectVersionNotFound handles this case with default header values.

Not Found
*/
type CopyProjectVersionNotFound struct {
	Payload *models.APIResult
}

func (o *CopyProjectVersionNotFound) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/copyFromPartial][%d] copyProjectVersionNotFound  %+v", 404, o.Payload)
}

func (o *CopyProjectVersionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *CopyProjectVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCopyProjectVersionConflict creates a CopyProjectVersionConflict with default headers values
func NewCopyProjectVersionConflict() *CopyProjectVersionConflict {
	return &CopyProjectVersionConflict{}
}

/*CopyProjectVersionConflict handles this case with default header values.

Conflict
*/
type CopyProjectVersionConflict struct {
	Payload *models.APIResult
}

func (o *CopyProjectVersionConflict) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/copyFromPartial][%d] copyProjectVersionConflict  %+v", 409, o.Payload)
}

func (o *CopyProjectVersionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *CopyProjectVersionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCopyProjectVersionInternalServerError creates a CopyProjectVersionInternalServerError with default headers values
func NewCopyProjectVersionInternalServerError() *CopyProjectVersionInternalServerError {
	return &CopyProjectVersionInternalServerError{}
}

/*CopyProjectVersionInternalServerError handles this case with default header values.

Internal Server Error
*/
type CopyProjectVersionInternalServerError struct {
	Payload *models.APIResult
}

func (o *CopyProjectVersionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/copyFromPartial][%d] copyProjectVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *CopyProjectVersionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *CopyProjectVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
