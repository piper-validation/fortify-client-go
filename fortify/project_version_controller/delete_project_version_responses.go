// Code generated by go-swagger; DO NOT EDIT.

package project_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// DeleteProjectVersionReader is a Reader for the DeleteProjectVersion structure.
type DeleteProjectVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteProjectVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteProjectVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteProjectVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteProjectVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteProjectVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteProjectVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteProjectVersionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteProjectVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteProjectVersionOK creates a DeleteProjectVersionOK with default headers values
func NewDeleteProjectVersionOK() *DeleteProjectVersionOK {
	return &DeleteProjectVersionOK{}
}

/*DeleteProjectVersionOK handles this case with default header values.

OK
*/
type DeleteProjectVersionOK struct {
	Payload *models.APIResultVoid
}

func (o *DeleteProjectVersionOK) Error() string {
	return fmt.Sprintf("[DELETE /projectVersions/{id}][%d] deleteProjectVersionOK  %+v", 200, o.Payload)
}

func (o *DeleteProjectVersionOK) GetPayload() *models.APIResultVoid {
	return o.Payload
}

func (o *DeleteProjectVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultVoid)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProjectVersionBadRequest creates a DeleteProjectVersionBadRequest with default headers values
func NewDeleteProjectVersionBadRequest() *DeleteProjectVersionBadRequest {
	return &DeleteProjectVersionBadRequest{}
}

/*DeleteProjectVersionBadRequest handles this case with default header values.

Bad Request
*/
type DeleteProjectVersionBadRequest struct {
	Payload *models.APIResult
}

func (o *DeleteProjectVersionBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /projectVersions/{id}][%d] deleteProjectVersionBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteProjectVersionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteProjectVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProjectVersionUnauthorized creates a DeleteProjectVersionUnauthorized with default headers values
func NewDeleteProjectVersionUnauthorized() *DeleteProjectVersionUnauthorized {
	return &DeleteProjectVersionUnauthorized{}
}

/*DeleteProjectVersionUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteProjectVersionUnauthorized struct {
	Payload *models.APIResult
}

func (o *DeleteProjectVersionUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /projectVersions/{id}][%d] deleteProjectVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteProjectVersionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteProjectVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProjectVersionForbidden creates a DeleteProjectVersionForbidden with default headers values
func NewDeleteProjectVersionForbidden() *DeleteProjectVersionForbidden {
	return &DeleteProjectVersionForbidden{}
}

/*DeleteProjectVersionForbidden handles this case with default header values.

Forbidden
*/
type DeleteProjectVersionForbidden struct {
	Payload *models.APIResult
}

func (o *DeleteProjectVersionForbidden) Error() string {
	return fmt.Sprintf("[DELETE /projectVersions/{id}][%d] deleteProjectVersionForbidden  %+v", 403, o.Payload)
}

func (o *DeleteProjectVersionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteProjectVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProjectVersionNotFound creates a DeleteProjectVersionNotFound with default headers values
func NewDeleteProjectVersionNotFound() *DeleteProjectVersionNotFound {
	return &DeleteProjectVersionNotFound{}
}

/*DeleteProjectVersionNotFound handles this case with default header values.

Not Found
*/
type DeleteProjectVersionNotFound struct {
	Payload *models.APIResult
}

func (o *DeleteProjectVersionNotFound) Error() string {
	return fmt.Sprintf("[DELETE /projectVersions/{id}][%d] deleteProjectVersionNotFound  %+v", 404, o.Payload)
}

func (o *DeleteProjectVersionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteProjectVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProjectVersionConflict creates a DeleteProjectVersionConflict with default headers values
func NewDeleteProjectVersionConflict() *DeleteProjectVersionConflict {
	return &DeleteProjectVersionConflict{}
}

/*DeleteProjectVersionConflict handles this case with default header values.

Conflict
*/
type DeleteProjectVersionConflict struct {
	Payload *models.APIResult
}

func (o *DeleteProjectVersionConflict) Error() string {
	return fmt.Sprintf("[DELETE /projectVersions/{id}][%d] deleteProjectVersionConflict  %+v", 409, o.Payload)
}

func (o *DeleteProjectVersionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteProjectVersionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProjectVersionInternalServerError creates a DeleteProjectVersionInternalServerError with default headers values
func NewDeleteProjectVersionInternalServerError() *DeleteProjectVersionInternalServerError {
	return &DeleteProjectVersionInternalServerError{}
}

/*DeleteProjectVersionInternalServerError handles this case with default header values.

Internal Server Error
*/
type DeleteProjectVersionInternalServerError struct {
	Payload *models.APIResult
}

func (o *DeleteProjectVersionInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /projectVersions/{id}][%d] deleteProjectVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteProjectVersionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteProjectVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
