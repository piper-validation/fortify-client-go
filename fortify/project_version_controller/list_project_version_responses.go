// Code generated by go-swagger; DO NOT EDIT.

package project_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListProjectVersionReader is a Reader for the ListProjectVersion structure.
type ListProjectVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListProjectVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListProjectVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListProjectVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListProjectVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListProjectVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListProjectVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListProjectVersionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListProjectVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListProjectVersionOK creates a ListProjectVersionOK with default headers values
func NewListProjectVersionOK() *ListProjectVersionOK {
	return &ListProjectVersionOK{}
}

/*ListProjectVersionOK handles this case with default header values.

OK
*/
type ListProjectVersionOK struct {
	Payload *models.APIResultListProjectVersion
}

func (o *ListProjectVersionOK) Error() string {
	return fmt.Sprintf("[GET /projectVersions][%d] listProjectVersionOK  %+v", 200, o.Payload)
}

func (o *ListProjectVersionOK) GetPayload() *models.APIResultListProjectVersion {
	return o.Payload
}

func (o *ListProjectVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListProjectVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectVersionBadRequest creates a ListProjectVersionBadRequest with default headers values
func NewListProjectVersionBadRequest() *ListProjectVersionBadRequest {
	return &ListProjectVersionBadRequest{}
}

/*ListProjectVersionBadRequest handles this case with default header values.

Bad Request
*/
type ListProjectVersionBadRequest struct {
	Payload *models.APIResult
}

func (o *ListProjectVersionBadRequest) Error() string {
	return fmt.Sprintf("[GET /projectVersions][%d] listProjectVersionBadRequest  %+v", 400, o.Payload)
}

func (o *ListProjectVersionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListProjectVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectVersionUnauthorized creates a ListProjectVersionUnauthorized with default headers values
func NewListProjectVersionUnauthorized() *ListProjectVersionUnauthorized {
	return &ListProjectVersionUnauthorized{}
}

/*ListProjectVersionUnauthorized handles this case with default header values.

Unauthorized
*/
type ListProjectVersionUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListProjectVersionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /projectVersions][%d] listProjectVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *ListProjectVersionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListProjectVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectVersionForbidden creates a ListProjectVersionForbidden with default headers values
func NewListProjectVersionForbidden() *ListProjectVersionForbidden {
	return &ListProjectVersionForbidden{}
}

/*ListProjectVersionForbidden handles this case with default header values.

Forbidden
*/
type ListProjectVersionForbidden struct {
	Payload *models.APIResult
}

func (o *ListProjectVersionForbidden) Error() string {
	return fmt.Sprintf("[GET /projectVersions][%d] listProjectVersionForbidden  %+v", 403, o.Payload)
}

func (o *ListProjectVersionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListProjectVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectVersionNotFound creates a ListProjectVersionNotFound with default headers values
func NewListProjectVersionNotFound() *ListProjectVersionNotFound {
	return &ListProjectVersionNotFound{}
}

/*ListProjectVersionNotFound handles this case with default header values.

Not Found
*/
type ListProjectVersionNotFound struct {
	Payload *models.APIResult
}

func (o *ListProjectVersionNotFound) Error() string {
	return fmt.Sprintf("[GET /projectVersions][%d] listProjectVersionNotFound  %+v", 404, o.Payload)
}

func (o *ListProjectVersionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListProjectVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectVersionConflict creates a ListProjectVersionConflict with default headers values
func NewListProjectVersionConflict() *ListProjectVersionConflict {
	return &ListProjectVersionConflict{}
}

/*ListProjectVersionConflict handles this case with default header values.

Conflict
*/
type ListProjectVersionConflict struct {
	Payload *models.APIResult
}

func (o *ListProjectVersionConflict) Error() string {
	return fmt.Sprintf("[GET /projectVersions][%d] listProjectVersionConflict  %+v", 409, o.Payload)
}

func (o *ListProjectVersionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListProjectVersionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectVersionInternalServerError creates a ListProjectVersionInternalServerError with default headers values
func NewListProjectVersionInternalServerError() *ListProjectVersionInternalServerError {
	return &ListProjectVersionInternalServerError{}
}

/*ListProjectVersionInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListProjectVersionInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListProjectVersionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /projectVersions][%d] listProjectVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *ListProjectVersionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListProjectVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
