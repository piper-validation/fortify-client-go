// Code generated by go-swagger; DO NOT EDIT.

package project_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ReadProjectVersionReader is a Reader for the ReadProjectVersion structure.
type ReadProjectVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadProjectVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadProjectVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReadProjectVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReadProjectVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewReadProjectVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReadProjectVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewReadProjectVersionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadProjectVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadProjectVersionOK creates a ReadProjectVersionOK with default headers values
func NewReadProjectVersionOK() *ReadProjectVersionOK {
	return &ReadProjectVersionOK{}
}

/*ReadProjectVersionOK handles this case with default header values.

OK
*/
type ReadProjectVersionOK struct {
	Payload *models.APIResultProjectVersion
}

func (o *ReadProjectVersionOK) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{id}][%d] readProjectVersionOK  %+v", 200, o.Payload)
}

func (o *ReadProjectVersionOK) GetPayload() *models.APIResultProjectVersion {
	return o.Payload
}

func (o *ReadProjectVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultProjectVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadProjectVersionBadRequest creates a ReadProjectVersionBadRequest with default headers values
func NewReadProjectVersionBadRequest() *ReadProjectVersionBadRequest {
	return &ReadProjectVersionBadRequest{}
}

/*ReadProjectVersionBadRequest handles this case with default header values.

Bad Request
*/
type ReadProjectVersionBadRequest struct {
	Payload *models.APIResult
}

func (o *ReadProjectVersionBadRequest) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{id}][%d] readProjectVersionBadRequest  %+v", 400, o.Payload)
}

func (o *ReadProjectVersionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadProjectVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadProjectVersionUnauthorized creates a ReadProjectVersionUnauthorized with default headers values
func NewReadProjectVersionUnauthorized() *ReadProjectVersionUnauthorized {
	return &ReadProjectVersionUnauthorized{}
}

/*ReadProjectVersionUnauthorized handles this case with default header values.

Unauthorized
*/
type ReadProjectVersionUnauthorized struct {
	Payload *models.APIResult
}

func (o *ReadProjectVersionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{id}][%d] readProjectVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *ReadProjectVersionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadProjectVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadProjectVersionForbidden creates a ReadProjectVersionForbidden with default headers values
func NewReadProjectVersionForbidden() *ReadProjectVersionForbidden {
	return &ReadProjectVersionForbidden{}
}

/*ReadProjectVersionForbidden handles this case with default header values.

Forbidden
*/
type ReadProjectVersionForbidden struct {
	Payload *models.APIResult
}

func (o *ReadProjectVersionForbidden) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{id}][%d] readProjectVersionForbidden  %+v", 403, o.Payload)
}

func (o *ReadProjectVersionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadProjectVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadProjectVersionNotFound creates a ReadProjectVersionNotFound with default headers values
func NewReadProjectVersionNotFound() *ReadProjectVersionNotFound {
	return &ReadProjectVersionNotFound{}
}

/*ReadProjectVersionNotFound handles this case with default header values.

Not Found
*/
type ReadProjectVersionNotFound struct {
	Payload *models.APIResult
}

func (o *ReadProjectVersionNotFound) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{id}][%d] readProjectVersionNotFound  %+v", 404, o.Payload)
}

func (o *ReadProjectVersionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadProjectVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadProjectVersionConflict creates a ReadProjectVersionConflict with default headers values
func NewReadProjectVersionConflict() *ReadProjectVersionConflict {
	return &ReadProjectVersionConflict{}
}

/*ReadProjectVersionConflict handles this case with default header values.

Conflict
*/
type ReadProjectVersionConflict struct {
	Payload *models.APIResult
}

func (o *ReadProjectVersionConflict) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{id}][%d] readProjectVersionConflict  %+v", 409, o.Payload)
}

func (o *ReadProjectVersionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadProjectVersionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadProjectVersionInternalServerError creates a ReadProjectVersionInternalServerError with default headers values
func NewReadProjectVersionInternalServerError() *ReadProjectVersionInternalServerError {
	return &ReadProjectVersionInternalServerError{}
}

/*ReadProjectVersionInternalServerError handles this case with default header values.

Internal Server Error
*/
type ReadProjectVersionInternalServerError struct {
	Payload *models.APIResult
}

func (o *ReadProjectVersionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{id}][%d] readProjectVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadProjectVersionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadProjectVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
