// Code generated by go-swagger; DO NOT EDIT.

package project_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// RefreshProjectVersionReader is a Reader for the RefreshProjectVersion structure.
type RefreshProjectVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RefreshProjectVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRefreshProjectVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRefreshProjectVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRefreshProjectVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRefreshProjectVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRefreshProjectVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewRefreshProjectVersionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRefreshProjectVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRefreshProjectVersionOK creates a RefreshProjectVersionOK with default headers values
func NewRefreshProjectVersionOK() *RefreshProjectVersionOK {
	return &RefreshProjectVersionOK{}
}

/*RefreshProjectVersionOK handles this case with default header values.

OK
*/
type RefreshProjectVersionOK struct {
	Payload *models.APIResultProjectVersionRefreshResponse
}

func (o *RefreshProjectVersionOK) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/refresh][%d] refreshProjectVersionOK  %+v", 200, o.Payload)
}

func (o *RefreshProjectVersionOK) GetPayload() *models.APIResultProjectVersionRefreshResponse {
	return o.Payload
}

func (o *RefreshProjectVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultProjectVersionRefreshResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRefreshProjectVersionBadRequest creates a RefreshProjectVersionBadRequest with default headers values
func NewRefreshProjectVersionBadRequest() *RefreshProjectVersionBadRequest {
	return &RefreshProjectVersionBadRequest{}
}

/*RefreshProjectVersionBadRequest handles this case with default header values.

Bad Request
*/
type RefreshProjectVersionBadRequest struct {
	Payload *models.APIResult
}

func (o *RefreshProjectVersionBadRequest) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/refresh][%d] refreshProjectVersionBadRequest  %+v", 400, o.Payload)
}

func (o *RefreshProjectVersionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *RefreshProjectVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRefreshProjectVersionUnauthorized creates a RefreshProjectVersionUnauthorized with default headers values
func NewRefreshProjectVersionUnauthorized() *RefreshProjectVersionUnauthorized {
	return &RefreshProjectVersionUnauthorized{}
}

/*RefreshProjectVersionUnauthorized handles this case with default header values.

Unauthorized
*/
type RefreshProjectVersionUnauthorized struct {
	Payload *models.APIResult
}

func (o *RefreshProjectVersionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/refresh][%d] refreshProjectVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *RefreshProjectVersionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *RefreshProjectVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRefreshProjectVersionForbidden creates a RefreshProjectVersionForbidden with default headers values
func NewRefreshProjectVersionForbidden() *RefreshProjectVersionForbidden {
	return &RefreshProjectVersionForbidden{}
}

/*RefreshProjectVersionForbidden handles this case with default header values.

Forbidden
*/
type RefreshProjectVersionForbidden struct {
	Payload *models.APIResult
}

func (o *RefreshProjectVersionForbidden) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/refresh][%d] refreshProjectVersionForbidden  %+v", 403, o.Payload)
}

func (o *RefreshProjectVersionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *RefreshProjectVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRefreshProjectVersionNotFound creates a RefreshProjectVersionNotFound with default headers values
func NewRefreshProjectVersionNotFound() *RefreshProjectVersionNotFound {
	return &RefreshProjectVersionNotFound{}
}

/*RefreshProjectVersionNotFound handles this case with default header values.

Not Found
*/
type RefreshProjectVersionNotFound struct {
	Payload *models.APIResult
}

func (o *RefreshProjectVersionNotFound) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/refresh][%d] refreshProjectVersionNotFound  %+v", 404, o.Payload)
}

func (o *RefreshProjectVersionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *RefreshProjectVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRefreshProjectVersionConflict creates a RefreshProjectVersionConflict with default headers values
func NewRefreshProjectVersionConflict() *RefreshProjectVersionConflict {
	return &RefreshProjectVersionConflict{}
}

/*RefreshProjectVersionConflict handles this case with default header values.

Conflict
*/
type RefreshProjectVersionConflict struct {
	Payload *models.APIResult
}

func (o *RefreshProjectVersionConflict) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/refresh][%d] refreshProjectVersionConflict  %+v", 409, o.Payload)
}

func (o *RefreshProjectVersionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *RefreshProjectVersionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRefreshProjectVersionInternalServerError creates a RefreshProjectVersionInternalServerError with default headers values
func NewRefreshProjectVersionInternalServerError() *RefreshProjectVersionInternalServerError {
	return &RefreshProjectVersionInternalServerError{}
}

/*RefreshProjectVersionInternalServerError handles this case with default header values.

Internal Server Error
*/
type RefreshProjectVersionInternalServerError struct {
	Payload *models.APIResult
}

func (o *RefreshProjectVersionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/refresh][%d] refreshProjectVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *RefreshProjectVersionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *RefreshProjectVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
