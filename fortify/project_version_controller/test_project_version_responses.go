// Code generated by go-swagger; DO NOT EDIT.

package project_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// TestProjectVersionReader is a Reader for the TestProjectVersion structure.
type TestProjectVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TestProjectVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTestProjectVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewTestProjectVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewTestProjectVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewTestProjectVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewTestProjectVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewTestProjectVersionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewTestProjectVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewTestProjectVersionOK creates a TestProjectVersionOK with default headers values
func NewTestProjectVersionOK() *TestProjectVersionOK {
	return &TestProjectVersionOK{}
}

/*TestProjectVersionOK handles this case with default header values.

OK
*/
type TestProjectVersionOK struct {
	Payload *models.APIResultProjectVersionTestResponse
}

func (o *TestProjectVersionOK) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/test][%d] testProjectVersionOK  %+v", 200, o.Payload)
}

func (o *TestProjectVersionOK) GetPayload() *models.APIResultProjectVersionTestResponse {
	return o.Payload
}

func (o *TestProjectVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultProjectVersionTestResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestProjectVersionBadRequest creates a TestProjectVersionBadRequest with default headers values
func NewTestProjectVersionBadRequest() *TestProjectVersionBadRequest {
	return &TestProjectVersionBadRequest{}
}

/*TestProjectVersionBadRequest handles this case with default header values.

Bad Request
*/
type TestProjectVersionBadRequest struct {
	Payload *models.APIResult
}

func (o *TestProjectVersionBadRequest) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/test][%d] testProjectVersionBadRequest  %+v", 400, o.Payload)
}

func (o *TestProjectVersionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *TestProjectVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestProjectVersionUnauthorized creates a TestProjectVersionUnauthorized with default headers values
func NewTestProjectVersionUnauthorized() *TestProjectVersionUnauthorized {
	return &TestProjectVersionUnauthorized{}
}

/*TestProjectVersionUnauthorized handles this case with default header values.

Unauthorized
*/
type TestProjectVersionUnauthorized struct {
	Payload *models.APIResult
}

func (o *TestProjectVersionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/test][%d] testProjectVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *TestProjectVersionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *TestProjectVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestProjectVersionForbidden creates a TestProjectVersionForbidden with default headers values
func NewTestProjectVersionForbidden() *TestProjectVersionForbidden {
	return &TestProjectVersionForbidden{}
}

/*TestProjectVersionForbidden handles this case with default header values.

Forbidden
*/
type TestProjectVersionForbidden struct {
	Payload *models.APIResult
}

func (o *TestProjectVersionForbidden) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/test][%d] testProjectVersionForbidden  %+v", 403, o.Payload)
}

func (o *TestProjectVersionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *TestProjectVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestProjectVersionNotFound creates a TestProjectVersionNotFound with default headers values
func NewTestProjectVersionNotFound() *TestProjectVersionNotFound {
	return &TestProjectVersionNotFound{}
}

/*TestProjectVersionNotFound handles this case with default header values.

Not Found
*/
type TestProjectVersionNotFound struct {
	Payload *models.APIResult
}

func (o *TestProjectVersionNotFound) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/test][%d] testProjectVersionNotFound  %+v", 404, o.Payload)
}

func (o *TestProjectVersionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *TestProjectVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestProjectVersionConflict creates a TestProjectVersionConflict with default headers values
func NewTestProjectVersionConflict() *TestProjectVersionConflict {
	return &TestProjectVersionConflict{}
}

/*TestProjectVersionConflict handles this case with default header values.

Conflict
*/
type TestProjectVersionConflict struct {
	Payload *models.APIResult
}

func (o *TestProjectVersionConflict) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/test][%d] testProjectVersionConflict  %+v", 409, o.Payload)
}

func (o *TestProjectVersionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *TestProjectVersionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestProjectVersionInternalServerError creates a TestProjectVersionInternalServerError with default headers values
func NewTestProjectVersionInternalServerError() *TestProjectVersionInternalServerError {
	return &TestProjectVersionInternalServerError{}
}

/*TestProjectVersionInternalServerError handles this case with default header values.

Internal Server Error
*/
type TestProjectVersionInternalServerError struct {
	Payload *models.APIResult
}

func (o *TestProjectVersionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/test][%d] testProjectVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *TestProjectVersionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *TestProjectVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
