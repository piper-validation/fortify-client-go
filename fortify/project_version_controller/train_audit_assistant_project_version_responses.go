// Code generated by go-swagger; DO NOT EDIT.

package project_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// TrainAuditAssistantProjectVersionReader is a Reader for the TrainAuditAssistantProjectVersion structure.
type TrainAuditAssistantProjectVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TrainAuditAssistantProjectVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTrainAuditAssistantProjectVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewTrainAuditAssistantProjectVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewTrainAuditAssistantProjectVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewTrainAuditAssistantProjectVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewTrainAuditAssistantProjectVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewTrainAuditAssistantProjectVersionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewTrainAuditAssistantProjectVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewTrainAuditAssistantProjectVersionOK creates a TrainAuditAssistantProjectVersionOK with default headers values
func NewTrainAuditAssistantProjectVersionOK() *TrainAuditAssistantProjectVersionOK {
	return &TrainAuditAssistantProjectVersionOK{}
}

/*TrainAuditAssistantProjectVersionOK handles this case with default header values.

OK
*/
type TrainAuditAssistantProjectVersionOK struct {
	Payload *models.APIResultVoid
}

func (o *TrainAuditAssistantProjectVersionOK) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/trainAuditAssistant][%d] trainAuditAssistantProjectVersionOK  %+v", 200, o.Payload)
}

func (o *TrainAuditAssistantProjectVersionOK) GetPayload() *models.APIResultVoid {
	return o.Payload
}

func (o *TrainAuditAssistantProjectVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultVoid)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTrainAuditAssistantProjectVersionBadRequest creates a TrainAuditAssistantProjectVersionBadRequest with default headers values
func NewTrainAuditAssistantProjectVersionBadRequest() *TrainAuditAssistantProjectVersionBadRequest {
	return &TrainAuditAssistantProjectVersionBadRequest{}
}

/*TrainAuditAssistantProjectVersionBadRequest handles this case with default header values.

Bad Request
*/
type TrainAuditAssistantProjectVersionBadRequest struct {
	Payload *models.APIResult
}

func (o *TrainAuditAssistantProjectVersionBadRequest) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/trainAuditAssistant][%d] trainAuditAssistantProjectVersionBadRequest  %+v", 400, o.Payload)
}

func (o *TrainAuditAssistantProjectVersionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *TrainAuditAssistantProjectVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTrainAuditAssistantProjectVersionUnauthorized creates a TrainAuditAssistantProjectVersionUnauthorized with default headers values
func NewTrainAuditAssistantProjectVersionUnauthorized() *TrainAuditAssistantProjectVersionUnauthorized {
	return &TrainAuditAssistantProjectVersionUnauthorized{}
}

/*TrainAuditAssistantProjectVersionUnauthorized handles this case with default header values.

Unauthorized
*/
type TrainAuditAssistantProjectVersionUnauthorized struct {
	Payload *models.APIResult
}

func (o *TrainAuditAssistantProjectVersionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/trainAuditAssistant][%d] trainAuditAssistantProjectVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *TrainAuditAssistantProjectVersionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *TrainAuditAssistantProjectVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTrainAuditAssistantProjectVersionForbidden creates a TrainAuditAssistantProjectVersionForbidden with default headers values
func NewTrainAuditAssistantProjectVersionForbidden() *TrainAuditAssistantProjectVersionForbidden {
	return &TrainAuditAssistantProjectVersionForbidden{}
}

/*TrainAuditAssistantProjectVersionForbidden handles this case with default header values.

Forbidden
*/
type TrainAuditAssistantProjectVersionForbidden struct {
	Payload *models.APIResult
}

func (o *TrainAuditAssistantProjectVersionForbidden) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/trainAuditAssistant][%d] trainAuditAssistantProjectVersionForbidden  %+v", 403, o.Payload)
}

func (o *TrainAuditAssistantProjectVersionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *TrainAuditAssistantProjectVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTrainAuditAssistantProjectVersionNotFound creates a TrainAuditAssistantProjectVersionNotFound with default headers values
func NewTrainAuditAssistantProjectVersionNotFound() *TrainAuditAssistantProjectVersionNotFound {
	return &TrainAuditAssistantProjectVersionNotFound{}
}

/*TrainAuditAssistantProjectVersionNotFound handles this case with default header values.

Not Found
*/
type TrainAuditAssistantProjectVersionNotFound struct {
	Payload *models.APIResult
}

func (o *TrainAuditAssistantProjectVersionNotFound) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/trainAuditAssistant][%d] trainAuditAssistantProjectVersionNotFound  %+v", 404, o.Payload)
}

func (o *TrainAuditAssistantProjectVersionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *TrainAuditAssistantProjectVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTrainAuditAssistantProjectVersionConflict creates a TrainAuditAssistantProjectVersionConflict with default headers values
func NewTrainAuditAssistantProjectVersionConflict() *TrainAuditAssistantProjectVersionConflict {
	return &TrainAuditAssistantProjectVersionConflict{}
}

/*TrainAuditAssistantProjectVersionConflict handles this case with default header values.

Conflict
*/
type TrainAuditAssistantProjectVersionConflict struct {
	Payload *models.APIResult
}

func (o *TrainAuditAssistantProjectVersionConflict) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/trainAuditAssistant][%d] trainAuditAssistantProjectVersionConflict  %+v", 409, o.Payload)
}

func (o *TrainAuditAssistantProjectVersionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *TrainAuditAssistantProjectVersionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTrainAuditAssistantProjectVersionInternalServerError creates a TrainAuditAssistantProjectVersionInternalServerError with default headers values
func NewTrainAuditAssistantProjectVersionInternalServerError() *TrainAuditAssistantProjectVersionInternalServerError {
	return &TrainAuditAssistantProjectVersionInternalServerError{}
}

/*TrainAuditAssistantProjectVersionInternalServerError handles this case with default header values.

Internal Server Error
*/
type TrainAuditAssistantProjectVersionInternalServerError struct {
	Payload *models.APIResult
}

func (o *TrainAuditAssistantProjectVersionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /projectVersions/action/trainAuditAssistant][%d] trainAuditAssistantProjectVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *TrainAuditAssistantProjectVersionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *TrainAuditAssistantProjectVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
