// Code generated by go-swagger; DO NOT EDIT.

package project_version_of_alert_definition_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListProjectVersionOfAlertDefinitionReader is a Reader for the ListProjectVersionOfAlertDefinition structure.
type ListProjectVersionOfAlertDefinitionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListProjectVersionOfAlertDefinitionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListProjectVersionOfAlertDefinitionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListProjectVersionOfAlertDefinitionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListProjectVersionOfAlertDefinitionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListProjectVersionOfAlertDefinitionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListProjectVersionOfAlertDefinitionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListProjectVersionOfAlertDefinitionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListProjectVersionOfAlertDefinitionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListProjectVersionOfAlertDefinitionOK creates a ListProjectVersionOfAlertDefinitionOK with default headers values
func NewListProjectVersionOfAlertDefinitionOK() *ListProjectVersionOfAlertDefinitionOK {
	return &ListProjectVersionOfAlertDefinitionOK{}
}

/*ListProjectVersionOfAlertDefinitionOK handles this case with default header values.

OK
*/
type ListProjectVersionOfAlertDefinitionOK struct {
	Payload *models.APIResultListProjectVersion
}

func (o *ListProjectVersionOfAlertDefinitionOK) Error() string {
	return fmt.Sprintf("[GET /alertDefinitions/{parentId}/projectVersions][%d] listProjectVersionOfAlertDefinitionOK  %+v", 200, o.Payload)
}

func (o *ListProjectVersionOfAlertDefinitionOK) GetPayload() *models.APIResultListProjectVersion {
	return o.Payload
}

func (o *ListProjectVersionOfAlertDefinitionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListProjectVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectVersionOfAlertDefinitionBadRequest creates a ListProjectVersionOfAlertDefinitionBadRequest with default headers values
func NewListProjectVersionOfAlertDefinitionBadRequest() *ListProjectVersionOfAlertDefinitionBadRequest {
	return &ListProjectVersionOfAlertDefinitionBadRequest{}
}

/*ListProjectVersionOfAlertDefinitionBadRequest handles this case with default header values.

Bad Request
*/
type ListProjectVersionOfAlertDefinitionBadRequest struct {
	Payload *models.APIResult
}

func (o *ListProjectVersionOfAlertDefinitionBadRequest) Error() string {
	return fmt.Sprintf("[GET /alertDefinitions/{parentId}/projectVersions][%d] listProjectVersionOfAlertDefinitionBadRequest  %+v", 400, o.Payload)
}

func (o *ListProjectVersionOfAlertDefinitionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListProjectVersionOfAlertDefinitionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectVersionOfAlertDefinitionUnauthorized creates a ListProjectVersionOfAlertDefinitionUnauthorized with default headers values
func NewListProjectVersionOfAlertDefinitionUnauthorized() *ListProjectVersionOfAlertDefinitionUnauthorized {
	return &ListProjectVersionOfAlertDefinitionUnauthorized{}
}

/*ListProjectVersionOfAlertDefinitionUnauthorized handles this case with default header values.

Unauthorized
*/
type ListProjectVersionOfAlertDefinitionUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListProjectVersionOfAlertDefinitionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /alertDefinitions/{parentId}/projectVersions][%d] listProjectVersionOfAlertDefinitionUnauthorized  %+v", 401, o.Payload)
}

func (o *ListProjectVersionOfAlertDefinitionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListProjectVersionOfAlertDefinitionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectVersionOfAlertDefinitionForbidden creates a ListProjectVersionOfAlertDefinitionForbidden with default headers values
func NewListProjectVersionOfAlertDefinitionForbidden() *ListProjectVersionOfAlertDefinitionForbidden {
	return &ListProjectVersionOfAlertDefinitionForbidden{}
}

/*ListProjectVersionOfAlertDefinitionForbidden handles this case with default header values.

Forbidden
*/
type ListProjectVersionOfAlertDefinitionForbidden struct {
	Payload *models.APIResult
}

func (o *ListProjectVersionOfAlertDefinitionForbidden) Error() string {
	return fmt.Sprintf("[GET /alertDefinitions/{parentId}/projectVersions][%d] listProjectVersionOfAlertDefinitionForbidden  %+v", 403, o.Payload)
}

func (o *ListProjectVersionOfAlertDefinitionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListProjectVersionOfAlertDefinitionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectVersionOfAlertDefinitionNotFound creates a ListProjectVersionOfAlertDefinitionNotFound with default headers values
func NewListProjectVersionOfAlertDefinitionNotFound() *ListProjectVersionOfAlertDefinitionNotFound {
	return &ListProjectVersionOfAlertDefinitionNotFound{}
}

/*ListProjectVersionOfAlertDefinitionNotFound handles this case with default header values.

Not Found
*/
type ListProjectVersionOfAlertDefinitionNotFound struct {
	Payload *models.APIResult
}

func (o *ListProjectVersionOfAlertDefinitionNotFound) Error() string {
	return fmt.Sprintf("[GET /alertDefinitions/{parentId}/projectVersions][%d] listProjectVersionOfAlertDefinitionNotFound  %+v", 404, o.Payload)
}

func (o *ListProjectVersionOfAlertDefinitionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListProjectVersionOfAlertDefinitionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectVersionOfAlertDefinitionConflict creates a ListProjectVersionOfAlertDefinitionConflict with default headers values
func NewListProjectVersionOfAlertDefinitionConflict() *ListProjectVersionOfAlertDefinitionConflict {
	return &ListProjectVersionOfAlertDefinitionConflict{}
}

/*ListProjectVersionOfAlertDefinitionConflict handles this case with default header values.

Conflict
*/
type ListProjectVersionOfAlertDefinitionConflict struct {
	Payload *models.APIResult
}

func (o *ListProjectVersionOfAlertDefinitionConflict) Error() string {
	return fmt.Sprintf("[GET /alertDefinitions/{parentId}/projectVersions][%d] listProjectVersionOfAlertDefinitionConflict  %+v", 409, o.Payload)
}

func (o *ListProjectVersionOfAlertDefinitionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListProjectVersionOfAlertDefinitionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectVersionOfAlertDefinitionInternalServerError creates a ListProjectVersionOfAlertDefinitionInternalServerError with default headers values
func NewListProjectVersionOfAlertDefinitionInternalServerError() *ListProjectVersionOfAlertDefinitionInternalServerError {
	return &ListProjectVersionOfAlertDefinitionInternalServerError{}
}

/*ListProjectVersionOfAlertDefinitionInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListProjectVersionOfAlertDefinitionInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListProjectVersionOfAlertDefinitionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /alertDefinitions/{parentId}/projectVersions][%d] listProjectVersionOfAlertDefinitionInternalServerError  %+v", 500, o.Payload)
}

func (o *ListProjectVersionOfAlertDefinitionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListProjectVersionOfAlertDefinitionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
