// Code generated by go-swagger; DO NOT EDIT.

package project_version_of_auth_entity_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewMultiDeleteProjectVersionOfAuthEntityParams creates a new MultiDeleteProjectVersionOfAuthEntityParams object
// with the default values initialized.
func NewMultiDeleteProjectVersionOfAuthEntityParams() *MultiDeleteProjectVersionOfAuthEntityParams {
	var ()
	return &MultiDeleteProjectVersionOfAuthEntityParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewMultiDeleteProjectVersionOfAuthEntityParamsWithTimeout creates a new MultiDeleteProjectVersionOfAuthEntityParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewMultiDeleteProjectVersionOfAuthEntityParamsWithTimeout(timeout time.Duration) *MultiDeleteProjectVersionOfAuthEntityParams {
	var ()
	return &MultiDeleteProjectVersionOfAuthEntityParams{

		timeout: timeout,
	}
}

// NewMultiDeleteProjectVersionOfAuthEntityParamsWithContext creates a new MultiDeleteProjectVersionOfAuthEntityParams object
// with the default values initialized, and the ability to set a context for a request
func NewMultiDeleteProjectVersionOfAuthEntityParamsWithContext(ctx context.Context) *MultiDeleteProjectVersionOfAuthEntityParams {
	var ()
	return &MultiDeleteProjectVersionOfAuthEntityParams{

		Context: ctx,
	}
}

// NewMultiDeleteProjectVersionOfAuthEntityParamsWithHTTPClient creates a new MultiDeleteProjectVersionOfAuthEntityParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewMultiDeleteProjectVersionOfAuthEntityParamsWithHTTPClient(client *http.Client) *MultiDeleteProjectVersionOfAuthEntityParams {
	var ()
	return &MultiDeleteProjectVersionOfAuthEntityParams{
		HTTPClient: client,
	}
}

/*MultiDeleteProjectVersionOfAuthEntityParams contains all the parameters to send to the API endpoint
for the multi delete project version of auth entity operation typically these are written to a http.Request
*/
type MultiDeleteProjectVersionOfAuthEntityParams struct {

	/*Ids
	  A comma-separated list of resource identifiers

	*/
	Ids *string
	/*ParentID
	  parentId

	*/
	ParentID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the multi delete project version of auth entity params
func (o *MultiDeleteProjectVersionOfAuthEntityParams) WithTimeout(timeout time.Duration) *MultiDeleteProjectVersionOfAuthEntityParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the multi delete project version of auth entity params
func (o *MultiDeleteProjectVersionOfAuthEntityParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the multi delete project version of auth entity params
func (o *MultiDeleteProjectVersionOfAuthEntityParams) WithContext(ctx context.Context) *MultiDeleteProjectVersionOfAuthEntityParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the multi delete project version of auth entity params
func (o *MultiDeleteProjectVersionOfAuthEntityParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the multi delete project version of auth entity params
func (o *MultiDeleteProjectVersionOfAuthEntityParams) WithHTTPClient(client *http.Client) *MultiDeleteProjectVersionOfAuthEntityParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the multi delete project version of auth entity params
func (o *MultiDeleteProjectVersionOfAuthEntityParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIds adds the ids to the multi delete project version of auth entity params
func (o *MultiDeleteProjectVersionOfAuthEntityParams) WithIds(ids *string) *MultiDeleteProjectVersionOfAuthEntityParams {
	o.SetIds(ids)
	return o
}

// SetIds adds the ids to the multi delete project version of auth entity params
func (o *MultiDeleteProjectVersionOfAuthEntityParams) SetIds(ids *string) {
	o.Ids = ids
}

// WithParentID adds the parentID to the multi delete project version of auth entity params
func (o *MultiDeleteProjectVersionOfAuthEntityParams) WithParentID(parentID int64) *MultiDeleteProjectVersionOfAuthEntityParams {
	o.SetParentID(parentID)
	return o
}

// SetParentID adds the parentId to the multi delete project version of auth entity params
func (o *MultiDeleteProjectVersionOfAuthEntityParams) SetParentID(parentID int64) {
	o.ParentID = parentID
}

// WriteToRequest writes these params to a swagger request
func (o *MultiDeleteProjectVersionOfAuthEntityParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Ids != nil {

		// query param ids
		var qrIds string
		if o.Ids != nil {
			qrIds = *o.Ids
		}
		qIds := qrIds
		if qIds != "" {
			if err := r.SetQueryParam("ids", qIds); err != nil {
				return err
			}
		}

	}

	// path param parentId
	if err := r.SetPathParam("parentId", swag.FormatInt64(o.ParentID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
