// Code generated by go-swagger; DO NOT EDIT.

package project_version_of_cloud_pool_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// AssignProjectVersionOfCloudPoolReader is a Reader for the AssignProjectVersionOfCloudPool structure.
type AssignProjectVersionOfCloudPoolReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AssignProjectVersionOfCloudPoolReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAssignProjectVersionOfCloudPoolOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAssignProjectVersionOfCloudPoolBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAssignProjectVersionOfCloudPoolUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAssignProjectVersionOfCloudPoolForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAssignProjectVersionOfCloudPoolNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewAssignProjectVersionOfCloudPoolConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAssignProjectVersionOfCloudPoolInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAssignProjectVersionOfCloudPoolOK creates a AssignProjectVersionOfCloudPoolOK with default headers values
func NewAssignProjectVersionOfCloudPoolOK() *AssignProjectVersionOfCloudPoolOK {
	return &AssignProjectVersionOfCloudPoolOK{}
}

/*AssignProjectVersionOfCloudPoolOK handles this case with default header values.

OK
*/
type AssignProjectVersionOfCloudPoolOK struct {
	Payload *models.APIResultCloudPoolProjectVersionActionResponse
}

func (o *AssignProjectVersionOfCloudPoolOK) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/versions/action/assign][%d] assignProjectVersionOfCloudPoolOK  %+v", 200, o.Payload)
}

func (o *AssignProjectVersionOfCloudPoolOK) GetPayload() *models.APIResultCloudPoolProjectVersionActionResponse {
	return o.Payload
}

func (o *AssignProjectVersionOfCloudPoolOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultCloudPoolProjectVersionActionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAssignProjectVersionOfCloudPoolBadRequest creates a AssignProjectVersionOfCloudPoolBadRequest with default headers values
func NewAssignProjectVersionOfCloudPoolBadRequest() *AssignProjectVersionOfCloudPoolBadRequest {
	return &AssignProjectVersionOfCloudPoolBadRequest{}
}

/*AssignProjectVersionOfCloudPoolBadRequest handles this case with default header values.

Bad Request
*/
type AssignProjectVersionOfCloudPoolBadRequest struct {
	Payload *models.APIResult
}

func (o *AssignProjectVersionOfCloudPoolBadRequest) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/versions/action/assign][%d] assignProjectVersionOfCloudPoolBadRequest  %+v", 400, o.Payload)
}

func (o *AssignProjectVersionOfCloudPoolBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *AssignProjectVersionOfCloudPoolBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAssignProjectVersionOfCloudPoolUnauthorized creates a AssignProjectVersionOfCloudPoolUnauthorized with default headers values
func NewAssignProjectVersionOfCloudPoolUnauthorized() *AssignProjectVersionOfCloudPoolUnauthorized {
	return &AssignProjectVersionOfCloudPoolUnauthorized{}
}

/*AssignProjectVersionOfCloudPoolUnauthorized handles this case with default header values.

Unauthorized
*/
type AssignProjectVersionOfCloudPoolUnauthorized struct {
	Payload *models.APIResult
}

func (o *AssignProjectVersionOfCloudPoolUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/versions/action/assign][%d] assignProjectVersionOfCloudPoolUnauthorized  %+v", 401, o.Payload)
}

func (o *AssignProjectVersionOfCloudPoolUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *AssignProjectVersionOfCloudPoolUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAssignProjectVersionOfCloudPoolForbidden creates a AssignProjectVersionOfCloudPoolForbidden with default headers values
func NewAssignProjectVersionOfCloudPoolForbidden() *AssignProjectVersionOfCloudPoolForbidden {
	return &AssignProjectVersionOfCloudPoolForbidden{}
}

/*AssignProjectVersionOfCloudPoolForbidden handles this case with default header values.

Forbidden
*/
type AssignProjectVersionOfCloudPoolForbidden struct {
	Payload *models.APIResult
}

func (o *AssignProjectVersionOfCloudPoolForbidden) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/versions/action/assign][%d] assignProjectVersionOfCloudPoolForbidden  %+v", 403, o.Payload)
}

func (o *AssignProjectVersionOfCloudPoolForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *AssignProjectVersionOfCloudPoolForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAssignProjectVersionOfCloudPoolNotFound creates a AssignProjectVersionOfCloudPoolNotFound with default headers values
func NewAssignProjectVersionOfCloudPoolNotFound() *AssignProjectVersionOfCloudPoolNotFound {
	return &AssignProjectVersionOfCloudPoolNotFound{}
}

/*AssignProjectVersionOfCloudPoolNotFound handles this case with default header values.

Not Found
*/
type AssignProjectVersionOfCloudPoolNotFound struct {
	Payload *models.APIResult
}

func (o *AssignProjectVersionOfCloudPoolNotFound) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/versions/action/assign][%d] assignProjectVersionOfCloudPoolNotFound  %+v", 404, o.Payload)
}

func (o *AssignProjectVersionOfCloudPoolNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *AssignProjectVersionOfCloudPoolNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAssignProjectVersionOfCloudPoolConflict creates a AssignProjectVersionOfCloudPoolConflict with default headers values
func NewAssignProjectVersionOfCloudPoolConflict() *AssignProjectVersionOfCloudPoolConflict {
	return &AssignProjectVersionOfCloudPoolConflict{}
}

/*AssignProjectVersionOfCloudPoolConflict handles this case with default header values.

Conflict
*/
type AssignProjectVersionOfCloudPoolConflict struct {
	Payload *models.APIResult
}

func (o *AssignProjectVersionOfCloudPoolConflict) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/versions/action/assign][%d] assignProjectVersionOfCloudPoolConflict  %+v", 409, o.Payload)
}

func (o *AssignProjectVersionOfCloudPoolConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *AssignProjectVersionOfCloudPoolConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAssignProjectVersionOfCloudPoolInternalServerError creates a AssignProjectVersionOfCloudPoolInternalServerError with default headers values
func NewAssignProjectVersionOfCloudPoolInternalServerError() *AssignProjectVersionOfCloudPoolInternalServerError {
	return &AssignProjectVersionOfCloudPoolInternalServerError{}
}

/*AssignProjectVersionOfCloudPoolInternalServerError handles this case with default header values.

Internal Server Error
*/
type AssignProjectVersionOfCloudPoolInternalServerError struct {
	Payload *models.APIResult
}

func (o *AssignProjectVersionOfCloudPoolInternalServerError) Error() string {
	return fmt.Sprintf("[POST /cloudpools/{parentId}/versions/action/assign][%d] assignProjectVersionOfCloudPoolInternalServerError  %+v", 500, o.Payload)
}

func (o *AssignProjectVersionOfCloudPoolInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *AssignProjectVersionOfCloudPoolInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
