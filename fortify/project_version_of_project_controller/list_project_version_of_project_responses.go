// Code generated by go-swagger; DO NOT EDIT.

package project_version_of_project_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListProjectVersionOfProjectReader is a Reader for the ListProjectVersionOfProject structure.
type ListProjectVersionOfProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListProjectVersionOfProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListProjectVersionOfProjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListProjectVersionOfProjectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListProjectVersionOfProjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListProjectVersionOfProjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListProjectVersionOfProjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListProjectVersionOfProjectConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListProjectVersionOfProjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListProjectVersionOfProjectOK creates a ListProjectVersionOfProjectOK with default headers values
func NewListProjectVersionOfProjectOK() *ListProjectVersionOfProjectOK {
	return &ListProjectVersionOfProjectOK{}
}

/*ListProjectVersionOfProjectOK handles this case with default header values.

OK
*/
type ListProjectVersionOfProjectOK struct {
	Payload *models.APIResultListProjectVersion
}

func (o *ListProjectVersionOfProjectOK) Error() string {
	return fmt.Sprintf("[GET /projects/{parentId}/versions][%d] listProjectVersionOfProjectOK  %+v", 200, o.Payload)
}

func (o *ListProjectVersionOfProjectOK) GetPayload() *models.APIResultListProjectVersion {
	return o.Payload
}

func (o *ListProjectVersionOfProjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListProjectVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectVersionOfProjectBadRequest creates a ListProjectVersionOfProjectBadRequest with default headers values
func NewListProjectVersionOfProjectBadRequest() *ListProjectVersionOfProjectBadRequest {
	return &ListProjectVersionOfProjectBadRequest{}
}

/*ListProjectVersionOfProjectBadRequest handles this case with default header values.

Bad Request
*/
type ListProjectVersionOfProjectBadRequest struct {
	Payload *models.APIResult
}

func (o *ListProjectVersionOfProjectBadRequest) Error() string {
	return fmt.Sprintf("[GET /projects/{parentId}/versions][%d] listProjectVersionOfProjectBadRequest  %+v", 400, o.Payload)
}

func (o *ListProjectVersionOfProjectBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListProjectVersionOfProjectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectVersionOfProjectUnauthorized creates a ListProjectVersionOfProjectUnauthorized with default headers values
func NewListProjectVersionOfProjectUnauthorized() *ListProjectVersionOfProjectUnauthorized {
	return &ListProjectVersionOfProjectUnauthorized{}
}

/*ListProjectVersionOfProjectUnauthorized handles this case with default header values.

Unauthorized
*/
type ListProjectVersionOfProjectUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListProjectVersionOfProjectUnauthorized) Error() string {
	return fmt.Sprintf("[GET /projects/{parentId}/versions][%d] listProjectVersionOfProjectUnauthorized  %+v", 401, o.Payload)
}

func (o *ListProjectVersionOfProjectUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListProjectVersionOfProjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectVersionOfProjectForbidden creates a ListProjectVersionOfProjectForbidden with default headers values
func NewListProjectVersionOfProjectForbidden() *ListProjectVersionOfProjectForbidden {
	return &ListProjectVersionOfProjectForbidden{}
}

/*ListProjectVersionOfProjectForbidden handles this case with default header values.

Forbidden
*/
type ListProjectVersionOfProjectForbidden struct {
	Payload *models.APIResult
}

func (o *ListProjectVersionOfProjectForbidden) Error() string {
	return fmt.Sprintf("[GET /projects/{parentId}/versions][%d] listProjectVersionOfProjectForbidden  %+v", 403, o.Payload)
}

func (o *ListProjectVersionOfProjectForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListProjectVersionOfProjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectVersionOfProjectNotFound creates a ListProjectVersionOfProjectNotFound with default headers values
func NewListProjectVersionOfProjectNotFound() *ListProjectVersionOfProjectNotFound {
	return &ListProjectVersionOfProjectNotFound{}
}

/*ListProjectVersionOfProjectNotFound handles this case with default header values.

Not Found
*/
type ListProjectVersionOfProjectNotFound struct {
	Payload *models.APIResult
}

func (o *ListProjectVersionOfProjectNotFound) Error() string {
	return fmt.Sprintf("[GET /projects/{parentId}/versions][%d] listProjectVersionOfProjectNotFound  %+v", 404, o.Payload)
}

func (o *ListProjectVersionOfProjectNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListProjectVersionOfProjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectVersionOfProjectConflict creates a ListProjectVersionOfProjectConflict with default headers values
func NewListProjectVersionOfProjectConflict() *ListProjectVersionOfProjectConflict {
	return &ListProjectVersionOfProjectConflict{}
}

/*ListProjectVersionOfProjectConflict handles this case with default header values.

Conflict
*/
type ListProjectVersionOfProjectConflict struct {
	Payload *models.APIResult
}

func (o *ListProjectVersionOfProjectConflict) Error() string {
	return fmt.Sprintf("[GET /projects/{parentId}/versions][%d] listProjectVersionOfProjectConflict  %+v", 409, o.Payload)
}

func (o *ListProjectVersionOfProjectConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListProjectVersionOfProjectConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectVersionOfProjectInternalServerError creates a ListProjectVersionOfProjectInternalServerError with default headers values
func NewListProjectVersionOfProjectInternalServerError() *ListProjectVersionOfProjectInternalServerError {
	return &ListProjectVersionOfProjectInternalServerError{}
}

/*ListProjectVersionOfProjectInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListProjectVersionOfProjectInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListProjectVersionOfProjectInternalServerError) Error() string {
	return fmt.Sprintf("[GET /projects/{parentId}/versions][%d] listProjectVersionOfProjectInternalServerError  %+v", 500, o.Payload)
}

func (o *ListProjectVersionOfProjectInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListProjectVersionOfProjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
