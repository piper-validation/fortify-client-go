// Code generated by go-swagger; DO NOT EDIT.

package report_definition_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// DeleteReportDefinitionReader is a Reader for the DeleteReportDefinition structure.
type DeleteReportDefinitionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteReportDefinitionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteReportDefinitionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteReportDefinitionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteReportDefinitionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteReportDefinitionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteReportDefinitionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteReportDefinitionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteReportDefinitionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteReportDefinitionOK creates a DeleteReportDefinitionOK with default headers values
func NewDeleteReportDefinitionOK() *DeleteReportDefinitionOK {
	return &DeleteReportDefinitionOK{}
}

/*DeleteReportDefinitionOK handles this case with default header values.

OK
*/
type DeleteReportDefinitionOK struct {
	Payload *models.APIResultVoid
}

func (o *DeleteReportDefinitionOK) Error() string {
	return fmt.Sprintf("[DELETE /reportDefinitions/{id}][%d] deleteReportDefinitionOK  %+v", 200, o.Payload)
}

func (o *DeleteReportDefinitionOK) GetPayload() *models.APIResultVoid {
	return o.Payload
}

func (o *DeleteReportDefinitionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultVoid)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteReportDefinitionBadRequest creates a DeleteReportDefinitionBadRequest with default headers values
func NewDeleteReportDefinitionBadRequest() *DeleteReportDefinitionBadRequest {
	return &DeleteReportDefinitionBadRequest{}
}

/*DeleteReportDefinitionBadRequest handles this case with default header values.

Bad Request
*/
type DeleteReportDefinitionBadRequest struct {
	Payload *models.APIResult
}

func (o *DeleteReportDefinitionBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /reportDefinitions/{id}][%d] deleteReportDefinitionBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteReportDefinitionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteReportDefinitionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteReportDefinitionUnauthorized creates a DeleteReportDefinitionUnauthorized with default headers values
func NewDeleteReportDefinitionUnauthorized() *DeleteReportDefinitionUnauthorized {
	return &DeleteReportDefinitionUnauthorized{}
}

/*DeleteReportDefinitionUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteReportDefinitionUnauthorized struct {
	Payload *models.APIResult
}

func (o *DeleteReportDefinitionUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /reportDefinitions/{id}][%d] deleteReportDefinitionUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteReportDefinitionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteReportDefinitionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteReportDefinitionForbidden creates a DeleteReportDefinitionForbidden with default headers values
func NewDeleteReportDefinitionForbidden() *DeleteReportDefinitionForbidden {
	return &DeleteReportDefinitionForbidden{}
}

/*DeleteReportDefinitionForbidden handles this case with default header values.

Forbidden
*/
type DeleteReportDefinitionForbidden struct {
	Payload *models.APIResult
}

func (o *DeleteReportDefinitionForbidden) Error() string {
	return fmt.Sprintf("[DELETE /reportDefinitions/{id}][%d] deleteReportDefinitionForbidden  %+v", 403, o.Payload)
}

func (o *DeleteReportDefinitionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteReportDefinitionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteReportDefinitionNotFound creates a DeleteReportDefinitionNotFound with default headers values
func NewDeleteReportDefinitionNotFound() *DeleteReportDefinitionNotFound {
	return &DeleteReportDefinitionNotFound{}
}

/*DeleteReportDefinitionNotFound handles this case with default header values.

Not Found
*/
type DeleteReportDefinitionNotFound struct {
	Payload *models.APIResult
}

func (o *DeleteReportDefinitionNotFound) Error() string {
	return fmt.Sprintf("[DELETE /reportDefinitions/{id}][%d] deleteReportDefinitionNotFound  %+v", 404, o.Payload)
}

func (o *DeleteReportDefinitionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteReportDefinitionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteReportDefinitionConflict creates a DeleteReportDefinitionConflict with default headers values
func NewDeleteReportDefinitionConflict() *DeleteReportDefinitionConflict {
	return &DeleteReportDefinitionConflict{}
}

/*DeleteReportDefinitionConflict handles this case with default header values.

Conflict
*/
type DeleteReportDefinitionConflict struct {
	Payload *models.APIResult
}

func (o *DeleteReportDefinitionConflict) Error() string {
	return fmt.Sprintf("[DELETE /reportDefinitions/{id}][%d] deleteReportDefinitionConflict  %+v", 409, o.Payload)
}

func (o *DeleteReportDefinitionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteReportDefinitionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteReportDefinitionInternalServerError creates a DeleteReportDefinitionInternalServerError with default headers values
func NewDeleteReportDefinitionInternalServerError() *DeleteReportDefinitionInternalServerError {
	return &DeleteReportDefinitionInternalServerError{}
}

/*DeleteReportDefinitionInternalServerError handles this case with default header values.

Internal Server Error
*/
type DeleteReportDefinitionInternalServerError struct {
	Payload *models.APIResult
}

func (o *DeleteReportDefinitionInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /reportDefinitions/{id}][%d] deleteReportDefinitionInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteReportDefinitionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteReportDefinitionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
