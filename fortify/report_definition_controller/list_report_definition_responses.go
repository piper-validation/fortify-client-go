// Code generated by go-swagger; DO NOT EDIT.

package report_definition_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListReportDefinitionReader is a Reader for the ListReportDefinition structure.
type ListReportDefinitionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListReportDefinitionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListReportDefinitionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListReportDefinitionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListReportDefinitionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListReportDefinitionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListReportDefinitionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListReportDefinitionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListReportDefinitionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListReportDefinitionOK creates a ListReportDefinitionOK with default headers values
func NewListReportDefinitionOK() *ListReportDefinitionOK {
	return &ListReportDefinitionOK{}
}

/*ListReportDefinitionOK handles this case with default header values.

OK
*/
type ListReportDefinitionOK struct {
	Payload *models.APIResultListReportDefinition
}

func (o *ListReportDefinitionOK) Error() string {
	return fmt.Sprintf("[GET /reportDefinitions][%d] listReportDefinitionOK  %+v", 200, o.Payload)
}

func (o *ListReportDefinitionOK) GetPayload() *models.APIResultListReportDefinition {
	return o.Payload
}

func (o *ListReportDefinitionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListReportDefinition)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListReportDefinitionBadRequest creates a ListReportDefinitionBadRequest with default headers values
func NewListReportDefinitionBadRequest() *ListReportDefinitionBadRequest {
	return &ListReportDefinitionBadRequest{}
}

/*ListReportDefinitionBadRequest handles this case with default header values.

Bad Request
*/
type ListReportDefinitionBadRequest struct {
	Payload *models.APIResult
}

func (o *ListReportDefinitionBadRequest) Error() string {
	return fmt.Sprintf("[GET /reportDefinitions][%d] listReportDefinitionBadRequest  %+v", 400, o.Payload)
}

func (o *ListReportDefinitionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListReportDefinitionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListReportDefinitionUnauthorized creates a ListReportDefinitionUnauthorized with default headers values
func NewListReportDefinitionUnauthorized() *ListReportDefinitionUnauthorized {
	return &ListReportDefinitionUnauthorized{}
}

/*ListReportDefinitionUnauthorized handles this case with default header values.

Unauthorized
*/
type ListReportDefinitionUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListReportDefinitionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /reportDefinitions][%d] listReportDefinitionUnauthorized  %+v", 401, o.Payload)
}

func (o *ListReportDefinitionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListReportDefinitionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListReportDefinitionForbidden creates a ListReportDefinitionForbidden with default headers values
func NewListReportDefinitionForbidden() *ListReportDefinitionForbidden {
	return &ListReportDefinitionForbidden{}
}

/*ListReportDefinitionForbidden handles this case with default header values.

Forbidden
*/
type ListReportDefinitionForbidden struct {
	Payload *models.APIResult
}

func (o *ListReportDefinitionForbidden) Error() string {
	return fmt.Sprintf("[GET /reportDefinitions][%d] listReportDefinitionForbidden  %+v", 403, o.Payload)
}

func (o *ListReportDefinitionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListReportDefinitionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListReportDefinitionNotFound creates a ListReportDefinitionNotFound with default headers values
func NewListReportDefinitionNotFound() *ListReportDefinitionNotFound {
	return &ListReportDefinitionNotFound{}
}

/*ListReportDefinitionNotFound handles this case with default header values.

Not Found
*/
type ListReportDefinitionNotFound struct {
	Payload *models.APIResult
}

func (o *ListReportDefinitionNotFound) Error() string {
	return fmt.Sprintf("[GET /reportDefinitions][%d] listReportDefinitionNotFound  %+v", 404, o.Payload)
}

func (o *ListReportDefinitionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListReportDefinitionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListReportDefinitionConflict creates a ListReportDefinitionConflict with default headers values
func NewListReportDefinitionConflict() *ListReportDefinitionConflict {
	return &ListReportDefinitionConflict{}
}

/*ListReportDefinitionConflict handles this case with default header values.

Conflict
*/
type ListReportDefinitionConflict struct {
	Payload *models.APIResult
}

func (o *ListReportDefinitionConflict) Error() string {
	return fmt.Sprintf("[GET /reportDefinitions][%d] listReportDefinitionConflict  %+v", 409, o.Payload)
}

func (o *ListReportDefinitionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListReportDefinitionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListReportDefinitionInternalServerError creates a ListReportDefinitionInternalServerError with default headers values
func NewListReportDefinitionInternalServerError() *ListReportDefinitionInternalServerError {
	return &ListReportDefinitionInternalServerError{}
}

/*ListReportDefinitionInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListReportDefinitionInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListReportDefinitionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /reportDefinitions][%d] listReportDefinitionInternalServerError  %+v", 500, o.Payload)
}

func (o *ListReportDefinitionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListReportDefinitionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
