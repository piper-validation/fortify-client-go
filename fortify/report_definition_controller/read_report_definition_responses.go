// Code generated by go-swagger; DO NOT EDIT.

package report_definition_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ReadReportDefinitionReader is a Reader for the ReadReportDefinition structure.
type ReadReportDefinitionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadReportDefinitionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadReportDefinitionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReadReportDefinitionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReadReportDefinitionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewReadReportDefinitionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReadReportDefinitionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewReadReportDefinitionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadReportDefinitionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadReportDefinitionOK creates a ReadReportDefinitionOK with default headers values
func NewReadReportDefinitionOK() *ReadReportDefinitionOK {
	return &ReadReportDefinitionOK{}
}

/*ReadReportDefinitionOK handles this case with default header values.

OK
*/
type ReadReportDefinitionOK struct {
	Payload *models.APIResultReportDefinition
}

func (o *ReadReportDefinitionOK) Error() string {
	return fmt.Sprintf("[GET /reportDefinitions/{id}][%d] readReportDefinitionOK  %+v", 200, o.Payload)
}

func (o *ReadReportDefinitionOK) GetPayload() *models.APIResultReportDefinition {
	return o.Payload
}

func (o *ReadReportDefinitionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultReportDefinition)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadReportDefinitionBadRequest creates a ReadReportDefinitionBadRequest with default headers values
func NewReadReportDefinitionBadRequest() *ReadReportDefinitionBadRequest {
	return &ReadReportDefinitionBadRequest{}
}

/*ReadReportDefinitionBadRequest handles this case with default header values.

Bad Request
*/
type ReadReportDefinitionBadRequest struct {
	Payload *models.APIResult
}

func (o *ReadReportDefinitionBadRequest) Error() string {
	return fmt.Sprintf("[GET /reportDefinitions/{id}][%d] readReportDefinitionBadRequest  %+v", 400, o.Payload)
}

func (o *ReadReportDefinitionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadReportDefinitionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadReportDefinitionUnauthorized creates a ReadReportDefinitionUnauthorized with default headers values
func NewReadReportDefinitionUnauthorized() *ReadReportDefinitionUnauthorized {
	return &ReadReportDefinitionUnauthorized{}
}

/*ReadReportDefinitionUnauthorized handles this case with default header values.

Unauthorized
*/
type ReadReportDefinitionUnauthorized struct {
	Payload *models.APIResult
}

func (o *ReadReportDefinitionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /reportDefinitions/{id}][%d] readReportDefinitionUnauthorized  %+v", 401, o.Payload)
}

func (o *ReadReportDefinitionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadReportDefinitionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadReportDefinitionForbidden creates a ReadReportDefinitionForbidden with default headers values
func NewReadReportDefinitionForbidden() *ReadReportDefinitionForbidden {
	return &ReadReportDefinitionForbidden{}
}

/*ReadReportDefinitionForbidden handles this case with default header values.

Forbidden
*/
type ReadReportDefinitionForbidden struct {
	Payload *models.APIResult
}

func (o *ReadReportDefinitionForbidden) Error() string {
	return fmt.Sprintf("[GET /reportDefinitions/{id}][%d] readReportDefinitionForbidden  %+v", 403, o.Payload)
}

func (o *ReadReportDefinitionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadReportDefinitionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadReportDefinitionNotFound creates a ReadReportDefinitionNotFound with default headers values
func NewReadReportDefinitionNotFound() *ReadReportDefinitionNotFound {
	return &ReadReportDefinitionNotFound{}
}

/*ReadReportDefinitionNotFound handles this case with default header values.

Not Found
*/
type ReadReportDefinitionNotFound struct {
	Payload *models.APIResult
}

func (o *ReadReportDefinitionNotFound) Error() string {
	return fmt.Sprintf("[GET /reportDefinitions/{id}][%d] readReportDefinitionNotFound  %+v", 404, o.Payload)
}

func (o *ReadReportDefinitionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadReportDefinitionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadReportDefinitionConflict creates a ReadReportDefinitionConflict with default headers values
func NewReadReportDefinitionConflict() *ReadReportDefinitionConflict {
	return &ReadReportDefinitionConflict{}
}

/*ReadReportDefinitionConflict handles this case with default header values.

Conflict
*/
type ReadReportDefinitionConflict struct {
	Payload *models.APIResult
}

func (o *ReadReportDefinitionConflict) Error() string {
	return fmt.Sprintf("[GET /reportDefinitions/{id}][%d] readReportDefinitionConflict  %+v", 409, o.Payload)
}

func (o *ReadReportDefinitionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadReportDefinitionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadReportDefinitionInternalServerError creates a ReadReportDefinitionInternalServerError with default headers values
func NewReadReportDefinitionInternalServerError() *ReadReportDefinitionInternalServerError {
	return &ReadReportDefinitionInternalServerError{}
}

/*ReadReportDefinitionInternalServerError handles this case with default header values.

Internal Server Error
*/
type ReadReportDefinitionInternalServerError struct {
	Payload *models.APIResult
}

func (o *ReadReportDefinitionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /reportDefinitions/{id}][%d] readReportDefinitionInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadReportDefinitionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadReportDefinitionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
