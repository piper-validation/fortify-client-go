// Code generated by go-swagger; DO NOT EDIT.

package report_definition_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// UpdateReportDefinitionReader is a Reader for the UpdateReportDefinition structure.
type UpdateReportDefinitionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateReportDefinitionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateReportDefinitionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateReportDefinitionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateReportDefinitionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateReportDefinitionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateReportDefinitionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateReportDefinitionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateReportDefinitionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateReportDefinitionOK creates a UpdateReportDefinitionOK with default headers values
func NewUpdateReportDefinitionOK() *UpdateReportDefinitionOK {
	return &UpdateReportDefinitionOK{}
}

/*UpdateReportDefinitionOK handles this case with default header values.

OK
*/
type UpdateReportDefinitionOK struct {
	Payload *models.APIResultReportDefinition
}

func (o *UpdateReportDefinitionOK) Error() string {
	return fmt.Sprintf("[PUT /reportDefinitions/{id}][%d] updateReportDefinitionOK  %+v", 200, o.Payload)
}

func (o *UpdateReportDefinitionOK) GetPayload() *models.APIResultReportDefinition {
	return o.Payload
}

func (o *UpdateReportDefinitionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultReportDefinition)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateReportDefinitionBadRequest creates a UpdateReportDefinitionBadRequest with default headers values
func NewUpdateReportDefinitionBadRequest() *UpdateReportDefinitionBadRequest {
	return &UpdateReportDefinitionBadRequest{}
}

/*UpdateReportDefinitionBadRequest handles this case with default header values.

Bad Request
*/
type UpdateReportDefinitionBadRequest struct {
	Payload *models.APIResult
}

func (o *UpdateReportDefinitionBadRequest) Error() string {
	return fmt.Sprintf("[PUT /reportDefinitions/{id}][%d] updateReportDefinitionBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateReportDefinitionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateReportDefinitionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateReportDefinitionUnauthorized creates a UpdateReportDefinitionUnauthorized with default headers values
func NewUpdateReportDefinitionUnauthorized() *UpdateReportDefinitionUnauthorized {
	return &UpdateReportDefinitionUnauthorized{}
}

/*UpdateReportDefinitionUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateReportDefinitionUnauthorized struct {
	Payload *models.APIResult
}

func (o *UpdateReportDefinitionUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /reportDefinitions/{id}][%d] updateReportDefinitionUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateReportDefinitionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateReportDefinitionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateReportDefinitionForbidden creates a UpdateReportDefinitionForbidden with default headers values
func NewUpdateReportDefinitionForbidden() *UpdateReportDefinitionForbidden {
	return &UpdateReportDefinitionForbidden{}
}

/*UpdateReportDefinitionForbidden handles this case with default header values.

Forbidden
*/
type UpdateReportDefinitionForbidden struct {
	Payload *models.APIResult
}

func (o *UpdateReportDefinitionForbidden) Error() string {
	return fmt.Sprintf("[PUT /reportDefinitions/{id}][%d] updateReportDefinitionForbidden  %+v", 403, o.Payload)
}

func (o *UpdateReportDefinitionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateReportDefinitionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateReportDefinitionNotFound creates a UpdateReportDefinitionNotFound with default headers values
func NewUpdateReportDefinitionNotFound() *UpdateReportDefinitionNotFound {
	return &UpdateReportDefinitionNotFound{}
}

/*UpdateReportDefinitionNotFound handles this case with default header values.

Not Found
*/
type UpdateReportDefinitionNotFound struct {
	Payload *models.APIResult
}

func (o *UpdateReportDefinitionNotFound) Error() string {
	return fmt.Sprintf("[PUT /reportDefinitions/{id}][%d] updateReportDefinitionNotFound  %+v", 404, o.Payload)
}

func (o *UpdateReportDefinitionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateReportDefinitionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateReportDefinitionConflict creates a UpdateReportDefinitionConflict with default headers values
func NewUpdateReportDefinitionConflict() *UpdateReportDefinitionConflict {
	return &UpdateReportDefinitionConflict{}
}

/*UpdateReportDefinitionConflict handles this case with default header values.

Conflict
*/
type UpdateReportDefinitionConflict struct {
	Payload *models.APIResult
}

func (o *UpdateReportDefinitionConflict) Error() string {
	return fmt.Sprintf("[PUT /reportDefinitions/{id}][%d] updateReportDefinitionConflict  %+v", 409, o.Payload)
}

func (o *UpdateReportDefinitionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateReportDefinitionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateReportDefinitionInternalServerError creates a UpdateReportDefinitionInternalServerError with default headers values
func NewUpdateReportDefinitionInternalServerError() *UpdateReportDefinitionInternalServerError {
	return &UpdateReportDefinitionInternalServerError{}
}

/*UpdateReportDefinitionInternalServerError handles this case with default header values.

Internal Server Error
*/
type UpdateReportDefinitionInternalServerError struct {
	Payload *models.APIResult
}

func (o *UpdateReportDefinitionInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /reportDefinitions/{id}][%d] updateReportDefinitionInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateReportDefinitionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateReportDefinitionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
