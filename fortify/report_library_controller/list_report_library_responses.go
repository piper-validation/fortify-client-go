// Code generated by go-swagger; DO NOT EDIT.

package report_library_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListReportLibraryReader is a Reader for the ListReportLibrary structure.
type ListReportLibraryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListReportLibraryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListReportLibraryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListReportLibraryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListReportLibraryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListReportLibraryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListReportLibraryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListReportLibraryConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListReportLibraryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListReportLibraryOK creates a ListReportLibraryOK with default headers values
func NewListReportLibraryOK() *ListReportLibraryOK {
	return &ListReportLibraryOK{}
}

/*ListReportLibraryOK handles this case with default header values.

OK
*/
type ListReportLibraryOK struct {
	Payload *models.APIResultListReportLibrary
}

func (o *ListReportLibraryOK) Error() string {
	return fmt.Sprintf("[GET /reportLibraries][%d] listReportLibraryOK  %+v", 200, o.Payload)
}

func (o *ListReportLibraryOK) GetPayload() *models.APIResultListReportLibrary {
	return o.Payload
}

func (o *ListReportLibraryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListReportLibrary)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListReportLibraryBadRequest creates a ListReportLibraryBadRequest with default headers values
func NewListReportLibraryBadRequest() *ListReportLibraryBadRequest {
	return &ListReportLibraryBadRequest{}
}

/*ListReportLibraryBadRequest handles this case with default header values.

Bad Request
*/
type ListReportLibraryBadRequest struct {
	Payload *models.APIResult
}

func (o *ListReportLibraryBadRequest) Error() string {
	return fmt.Sprintf("[GET /reportLibraries][%d] listReportLibraryBadRequest  %+v", 400, o.Payload)
}

func (o *ListReportLibraryBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListReportLibraryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListReportLibraryUnauthorized creates a ListReportLibraryUnauthorized with default headers values
func NewListReportLibraryUnauthorized() *ListReportLibraryUnauthorized {
	return &ListReportLibraryUnauthorized{}
}

/*ListReportLibraryUnauthorized handles this case with default header values.

Unauthorized
*/
type ListReportLibraryUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListReportLibraryUnauthorized) Error() string {
	return fmt.Sprintf("[GET /reportLibraries][%d] listReportLibraryUnauthorized  %+v", 401, o.Payload)
}

func (o *ListReportLibraryUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListReportLibraryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListReportLibraryForbidden creates a ListReportLibraryForbidden with default headers values
func NewListReportLibraryForbidden() *ListReportLibraryForbidden {
	return &ListReportLibraryForbidden{}
}

/*ListReportLibraryForbidden handles this case with default header values.

Forbidden
*/
type ListReportLibraryForbidden struct {
	Payload *models.APIResult
}

func (o *ListReportLibraryForbidden) Error() string {
	return fmt.Sprintf("[GET /reportLibraries][%d] listReportLibraryForbidden  %+v", 403, o.Payload)
}

func (o *ListReportLibraryForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListReportLibraryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListReportLibraryNotFound creates a ListReportLibraryNotFound with default headers values
func NewListReportLibraryNotFound() *ListReportLibraryNotFound {
	return &ListReportLibraryNotFound{}
}

/*ListReportLibraryNotFound handles this case with default header values.

Not Found
*/
type ListReportLibraryNotFound struct {
	Payload *models.APIResult
}

func (o *ListReportLibraryNotFound) Error() string {
	return fmt.Sprintf("[GET /reportLibraries][%d] listReportLibraryNotFound  %+v", 404, o.Payload)
}

func (o *ListReportLibraryNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListReportLibraryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListReportLibraryConflict creates a ListReportLibraryConflict with default headers values
func NewListReportLibraryConflict() *ListReportLibraryConflict {
	return &ListReportLibraryConflict{}
}

/*ListReportLibraryConflict handles this case with default header values.

Conflict
*/
type ListReportLibraryConflict struct {
	Payload *models.APIResult
}

func (o *ListReportLibraryConflict) Error() string {
	return fmt.Sprintf("[GET /reportLibraries][%d] listReportLibraryConflict  %+v", 409, o.Payload)
}

func (o *ListReportLibraryConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListReportLibraryConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListReportLibraryInternalServerError creates a ListReportLibraryInternalServerError with default headers values
func NewListReportLibraryInternalServerError() *ListReportLibraryInternalServerError {
	return &ListReportLibraryInternalServerError{}
}

/*ListReportLibraryInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListReportLibraryInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListReportLibraryInternalServerError) Error() string {
	return fmt.Sprintf("[GET /reportLibraries][%d] listReportLibraryInternalServerError  %+v", 500, o.Payload)
}

func (o *ListReportLibraryInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListReportLibraryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
