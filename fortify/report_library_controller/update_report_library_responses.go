// Code generated by go-swagger; DO NOT EDIT.

package report_library_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// UpdateReportLibraryReader is a Reader for the UpdateReportLibrary structure.
type UpdateReportLibraryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateReportLibraryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateReportLibraryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateReportLibraryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateReportLibraryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateReportLibraryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateReportLibraryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateReportLibraryConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateReportLibraryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateReportLibraryOK creates a UpdateReportLibraryOK with default headers values
func NewUpdateReportLibraryOK() *UpdateReportLibraryOK {
	return &UpdateReportLibraryOK{}
}

/*UpdateReportLibraryOK handles this case with default header values.

OK
*/
type UpdateReportLibraryOK struct {
	Payload *models.APIResultReportLibrary
}

func (o *UpdateReportLibraryOK) Error() string {
	return fmt.Sprintf("[PUT /reportLibraries/{id}][%d] updateReportLibraryOK  %+v", 200, o.Payload)
}

func (o *UpdateReportLibraryOK) GetPayload() *models.APIResultReportLibrary {
	return o.Payload
}

func (o *UpdateReportLibraryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultReportLibrary)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateReportLibraryBadRequest creates a UpdateReportLibraryBadRequest with default headers values
func NewUpdateReportLibraryBadRequest() *UpdateReportLibraryBadRequest {
	return &UpdateReportLibraryBadRequest{}
}

/*UpdateReportLibraryBadRequest handles this case with default header values.

Bad Request
*/
type UpdateReportLibraryBadRequest struct {
	Payload *models.APIResult
}

func (o *UpdateReportLibraryBadRequest) Error() string {
	return fmt.Sprintf("[PUT /reportLibraries/{id}][%d] updateReportLibraryBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateReportLibraryBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateReportLibraryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateReportLibraryUnauthorized creates a UpdateReportLibraryUnauthorized with default headers values
func NewUpdateReportLibraryUnauthorized() *UpdateReportLibraryUnauthorized {
	return &UpdateReportLibraryUnauthorized{}
}

/*UpdateReportLibraryUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateReportLibraryUnauthorized struct {
	Payload *models.APIResult
}

func (o *UpdateReportLibraryUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /reportLibraries/{id}][%d] updateReportLibraryUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateReportLibraryUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateReportLibraryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateReportLibraryForbidden creates a UpdateReportLibraryForbidden with default headers values
func NewUpdateReportLibraryForbidden() *UpdateReportLibraryForbidden {
	return &UpdateReportLibraryForbidden{}
}

/*UpdateReportLibraryForbidden handles this case with default header values.

Forbidden
*/
type UpdateReportLibraryForbidden struct {
	Payload *models.APIResult
}

func (o *UpdateReportLibraryForbidden) Error() string {
	return fmt.Sprintf("[PUT /reportLibraries/{id}][%d] updateReportLibraryForbidden  %+v", 403, o.Payload)
}

func (o *UpdateReportLibraryForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateReportLibraryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateReportLibraryNotFound creates a UpdateReportLibraryNotFound with default headers values
func NewUpdateReportLibraryNotFound() *UpdateReportLibraryNotFound {
	return &UpdateReportLibraryNotFound{}
}

/*UpdateReportLibraryNotFound handles this case with default header values.

Not Found
*/
type UpdateReportLibraryNotFound struct {
	Payload *models.APIResult
}

func (o *UpdateReportLibraryNotFound) Error() string {
	return fmt.Sprintf("[PUT /reportLibraries/{id}][%d] updateReportLibraryNotFound  %+v", 404, o.Payload)
}

func (o *UpdateReportLibraryNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateReportLibraryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateReportLibraryConflict creates a UpdateReportLibraryConflict with default headers values
func NewUpdateReportLibraryConflict() *UpdateReportLibraryConflict {
	return &UpdateReportLibraryConflict{}
}

/*UpdateReportLibraryConflict handles this case with default header values.

Conflict
*/
type UpdateReportLibraryConflict struct {
	Payload *models.APIResult
}

func (o *UpdateReportLibraryConflict) Error() string {
	return fmt.Sprintf("[PUT /reportLibraries/{id}][%d] updateReportLibraryConflict  %+v", 409, o.Payload)
}

func (o *UpdateReportLibraryConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateReportLibraryConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateReportLibraryInternalServerError creates a UpdateReportLibraryInternalServerError with default headers values
func NewUpdateReportLibraryInternalServerError() *UpdateReportLibraryInternalServerError {
	return &UpdateReportLibraryInternalServerError{}
}

/*UpdateReportLibraryInternalServerError handles this case with default header values.

Internal Server Error
*/
type UpdateReportLibraryInternalServerError struct {
	Payload *models.APIResult
}

func (o *UpdateReportLibraryInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /reportLibraries/{id}][%d] updateReportLibraryInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateReportLibraryInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateReportLibraryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
