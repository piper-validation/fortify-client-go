// Code generated by go-swagger; DO NOT EDIT.

package report_library_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// UploadReportLibraryReader is a Reader for the UploadReportLibrary structure.
type UploadReportLibraryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UploadReportLibraryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUploadReportLibraryCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUploadReportLibraryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUploadReportLibraryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUploadReportLibraryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUploadReportLibraryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUploadReportLibraryConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUploadReportLibraryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUploadReportLibraryCreated creates a UploadReportLibraryCreated with default headers values
func NewUploadReportLibraryCreated() *UploadReportLibraryCreated {
	return &UploadReportLibraryCreated{}
}

/*UploadReportLibraryCreated handles this case with default header values.

Created
*/
type UploadReportLibraryCreated struct {
	Payload *models.APIResultReportLibrary
}

func (o *UploadReportLibraryCreated) Error() string {
	return fmt.Sprintf("[POST /reportLibraries][%d] uploadReportLibraryCreated  %+v", 201, o.Payload)
}

func (o *UploadReportLibraryCreated) GetPayload() *models.APIResultReportLibrary {
	return o.Payload
}

func (o *UploadReportLibraryCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultReportLibrary)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadReportLibraryBadRequest creates a UploadReportLibraryBadRequest with default headers values
func NewUploadReportLibraryBadRequest() *UploadReportLibraryBadRequest {
	return &UploadReportLibraryBadRequest{}
}

/*UploadReportLibraryBadRequest handles this case with default header values.

Bad Request
*/
type UploadReportLibraryBadRequest struct {
	Payload *models.APIResult
}

func (o *UploadReportLibraryBadRequest) Error() string {
	return fmt.Sprintf("[POST /reportLibraries][%d] uploadReportLibraryBadRequest  %+v", 400, o.Payload)
}

func (o *UploadReportLibraryBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UploadReportLibraryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadReportLibraryUnauthorized creates a UploadReportLibraryUnauthorized with default headers values
func NewUploadReportLibraryUnauthorized() *UploadReportLibraryUnauthorized {
	return &UploadReportLibraryUnauthorized{}
}

/*UploadReportLibraryUnauthorized handles this case with default header values.

Unauthorized
*/
type UploadReportLibraryUnauthorized struct {
	Payload *models.APIResult
}

func (o *UploadReportLibraryUnauthorized) Error() string {
	return fmt.Sprintf("[POST /reportLibraries][%d] uploadReportLibraryUnauthorized  %+v", 401, o.Payload)
}

func (o *UploadReportLibraryUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UploadReportLibraryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadReportLibraryForbidden creates a UploadReportLibraryForbidden with default headers values
func NewUploadReportLibraryForbidden() *UploadReportLibraryForbidden {
	return &UploadReportLibraryForbidden{}
}

/*UploadReportLibraryForbidden handles this case with default header values.

Forbidden
*/
type UploadReportLibraryForbidden struct {
	Payload *models.APIResult
}

func (o *UploadReportLibraryForbidden) Error() string {
	return fmt.Sprintf("[POST /reportLibraries][%d] uploadReportLibraryForbidden  %+v", 403, o.Payload)
}

func (o *UploadReportLibraryForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UploadReportLibraryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadReportLibraryNotFound creates a UploadReportLibraryNotFound with default headers values
func NewUploadReportLibraryNotFound() *UploadReportLibraryNotFound {
	return &UploadReportLibraryNotFound{}
}

/*UploadReportLibraryNotFound handles this case with default header values.

Not Found
*/
type UploadReportLibraryNotFound struct {
	Payload *models.APIResult
}

func (o *UploadReportLibraryNotFound) Error() string {
	return fmt.Sprintf("[POST /reportLibraries][%d] uploadReportLibraryNotFound  %+v", 404, o.Payload)
}

func (o *UploadReportLibraryNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UploadReportLibraryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadReportLibraryConflict creates a UploadReportLibraryConflict with default headers values
func NewUploadReportLibraryConflict() *UploadReportLibraryConflict {
	return &UploadReportLibraryConflict{}
}

/*UploadReportLibraryConflict handles this case with default header values.

Conflict
*/
type UploadReportLibraryConflict struct {
	Payload *models.APIResult
}

func (o *UploadReportLibraryConflict) Error() string {
	return fmt.Sprintf("[POST /reportLibraries][%d] uploadReportLibraryConflict  %+v", 409, o.Payload)
}

func (o *UploadReportLibraryConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UploadReportLibraryConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadReportLibraryInternalServerError creates a UploadReportLibraryInternalServerError with default headers values
func NewUploadReportLibraryInternalServerError() *UploadReportLibraryInternalServerError {
	return &UploadReportLibraryInternalServerError{}
}

/*UploadReportLibraryInternalServerError handles this case with default header values.

Internal Server Error
*/
type UploadReportLibraryInternalServerError struct {
	Payload *models.APIResult
}

func (o *UploadReportLibraryInternalServerError) Error() string {
	return fmt.Sprintf("[POST /reportLibraries][%d] uploadReportLibraryInternalServerError  %+v", 500, o.Payload)
}

func (o *UploadReportLibraryInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UploadReportLibraryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
