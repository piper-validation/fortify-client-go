// Code generated by go-swagger; DO NOT EDIT.

package role_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListRoleReader is a Reader for the ListRole structure.
type ListRoleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListRoleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListRoleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListRoleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListRoleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListRoleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListRoleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListRoleConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListRoleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListRoleOK creates a ListRoleOK with default headers values
func NewListRoleOK() *ListRoleOK {
	return &ListRoleOK{}
}

/*ListRoleOK handles this case with default header values.

OK
*/
type ListRoleOK struct {
	Payload *models.APIResultListRole
}

func (o *ListRoleOK) Error() string {
	return fmt.Sprintf("[GET /roles][%d] listRoleOK  %+v", 200, o.Payload)
}

func (o *ListRoleOK) GetPayload() *models.APIResultListRole {
	return o.Payload
}

func (o *ListRoleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListRole)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRoleBadRequest creates a ListRoleBadRequest with default headers values
func NewListRoleBadRequest() *ListRoleBadRequest {
	return &ListRoleBadRequest{}
}

/*ListRoleBadRequest handles this case with default header values.

Bad Request
*/
type ListRoleBadRequest struct {
	Payload *models.APIResult
}

func (o *ListRoleBadRequest) Error() string {
	return fmt.Sprintf("[GET /roles][%d] listRoleBadRequest  %+v", 400, o.Payload)
}

func (o *ListRoleBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListRoleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRoleUnauthorized creates a ListRoleUnauthorized with default headers values
func NewListRoleUnauthorized() *ListRoleUnauthorized {
	return &ListRoleUnauthorized{}
}

/*ListRoleUnauthorized handles this case with default header values.

Unauthorized
*/
type ListRoleUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListRoleUnauthorized) Error() string {
	return fmt.Sprintf("[GET /roles][%d] listRoleUnauthorized  %+v", 401, o.Payload)
}

func (o *ListRoleUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListRoleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRoleForbidden creates a ListRoleForbidden with default headers values
func NewListRoleForbidden() *ListRoleForbidden {
	return &ListRoleForbidden{}
}

/*ListRoleForbidden handles this case with default header values.

Forbidden
*/
type ListRoleForbidden struct {
	Payload *models.APIResult
}

func (o *ListRoleForbidden) Error() string {
	return fmt.Sprintf("[GET /roles][%d] listRoleForbidden  %+v", 403, o.Payload)
}

func (o *ListRoleForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListRoleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRoleNotFound creates a ListRoleNotFound with default headers values
func NewListRoleNotFound() *ListRoleNotFound {
	return &ListRoleNotFound{}
}

/*ListRoleNotFound handles this case with default header values.

Not Found
*/
type ListRoleNotFound struct {
	Payload *models.APIResult
}

func (o *ListRoleNotFound) Error() string {
	return fmt.Sprintf("[GET /roles][%d] listRoleNotFound  %+v", 404, o.Payload)
}

func (o *ListRoleNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListRoleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRoleConflict creates a ListRoleConflict with default headers values
func NewListRoleConflict() *ListRoleConflict {
	return &ListRoleConflict{}
}

/*ListRoleConflict handles this case with default header values.

Conflict
*/
type ListRoleConflict struct {
	Payload *models.APIResult
}

func (o *ListRoleConflict) Error() string {
	return fmt.Sprintf("[GET /roles][%d] listRoleConflict  %+v", 409, o.Payload)
}

func (o *ListRoleConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListRoleConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRoleInternalServerError creates a ListRoleInternalServerError with default headers values
func NewListRoleInternalServerError() *ListRoleInternalServerError {
	return &ListRoleInternalServerError{}
}

/*ListRoleInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListRoleInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListRoleInternalServerError) Error() string {
	return fmt.Sprintf("[GET /roles][%d] listRoleInternalServerError  %+v", 500, o.Payload)
}

func (o *ListRoleInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListRoleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
