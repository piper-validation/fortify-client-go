// Code generated by go-swagger; DO NOT EDIT.

package role_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// MultiDeleteRoleReader is a Reader for the MultiDeleteRole structure.
type MultiDeleteRoleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MultiDeleteRoleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewMultiDeleteRoleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMultiDeleteRoleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewMultiDeleteRoleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewMultiDeleteRoleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewMultiDeleteRoleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewMultiDeleteRoleConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewMultiDeleteRoleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewMultiDeleteRoleOK creates a MultiDeleteRoleOK with default headers values
func NewMultiDeleteRoleOK() *MultiDeleteRoleOK {
	return &MultiDeleteRoleOK{}
}

/*MultiDeleteRoleOK handles this case with default header values.

OK
*/
type MultiDeleteRoleOK struct {
	Payload *models.APIResultVoid
}

func (o *MultiDeleteRoleOK) Error() string {
	return fmt.Sprintf("[DELETE /roles][%d] multiDeleteRoleOK  %+v", 200, o.Payload)
}

func (o *MultiDeleteRoleOK) GetPayload() *models.APIResultVoid {
	return o.Payload
}

func (o *MultiDeleteRoleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultVoid)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiDeleteRoleBadRequest creates a MultiDeleteRoleBadRequest with default headers values
func NewMultiDeleteRoleBadRequest() *MultiDeleteRoleBadRequest {
	return &MultiDeleteRoleBadRequest{}
}

/*MultiDeleteRoleBadRequest handles this case with default header values.

Bad Request
*/
type MultiDeleteRoleBadRequest struct {
	Payload *models.APIResult
}

func (o *MultiDeleteRoleBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /roles][%d] multiDeleteRoleBadRequest  %+v", 400, o.Payload)
}

func (o *MultiDeleteRoleBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *MultiDeleteRoleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiDeleteRoleUnauthorized creates a MultiDeleteRoleUnauthorized with default headers values
func NewMultiDeleteRoleUnauthorized() *MultiDeleteRoleUnauthorized {
	return &MultiDeleteRoleUnauthorized{}
}

/*MultiDeleteRoleUnauthorized handles this case with default header values.

Unauthorized
*/
type MultiDeleteRoleUnauthorized struct {
	Payload *models.APIResult
}

func (o *MultiDeleteRoleUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /roles][%d] multiDeleteRoleUnauthorized  %+v", 401, o.Payload)
}

func (o *MultiDeleteRoleUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *MultiDeleteRoleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiDeleteRoleForbidden creates a MultiDeleteRoleForbidden with default headers values
func NewMultiDeleteRoleForbidden() *MultiDeleteRoleForbidden {
	return &MultiDeleteRoleForbidden{}
}

/*MultiDeleteRoleForbidden handles this case with default header values.

Forbidden
*/
type MultiDeleteRoleForbidden struct {
	Payload *models.APIResult
}

func (o *MultiDeleteRoleForbidden) Error() string {
	return fmt.Sprintf("[DELETE /roles][%d] multiDeleteRoleForbidden  %+v", 403, o.Payload)
}

func (o *MultiDeleteRoleForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *MultiDeleteRoleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiDeleteRoleNotFound creates a MultiDeleteRoleNotFound with default headers values
func NewMultiDeleteRoleNotFound() *MultiDeleteRoleNotFound {
	return &MultiDeleteRoleNotFound{}
}

/*MultiDeleteRoleNotFound handles this case with default header values.

Not Found
*/
type MultiDeleteRoleNotFound struct {
	Payload *models.APIResult
}

func (o *MultiDeleteRoleNotFound) Error() string {
	return fmt.Sprintf("[DELETE /roles][%d] multiDeleteRoleNotFound  %+v", 404, o.Payload)
}

func (o *MultiDeleteRoleNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *MultiDeleteRoleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiDeleteRoleConflict creates a MultiDeleteRoleConflict with default headers values
func NewMultiDeleteRoleConflict() *MultiDeleteRoleConflict {
	return &MultiDeleteRoleConflict{}
}

/*MultiDeleteRoleConflict handles this case with default header values.

Conflict
*/
type MultiDeleteRoleConflict struct {
	Payload *models.APIResult
}

func (o *MultiDeleteRoleConflict) Error() string {
	return fmt.Sprintf("[DELETE /roles][%d] multiDeleteRoleConflict  %+v", 409, o.Payload)
}

func (o *MultiDeleteRoleConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *MultiDeleteRoleConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMultiDeleteRoleInternalServerError creates a MultiDeleteRoleInternalServerError with default headers values
func NewMultiDeleteRoleInternalServerError() *MultiDeleteRoleInternalServerError {
	return &MultiDeleteRoleInternalServerError{}
}

/*MultiDeleteRoleInternalServerError handles this case with default header values.

Internal Server Error
*/
type MultiDeleteRoleInternalServerError struct {
	Payload *models.APIResult
}

func (o *MultiDeleteRoleInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /roles][%d] multiDeleteRoleInternalServerError  %+v", 500, o.Payload)
}

func (o *MultiDeleteRoleInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *MultiDeleteRoleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
