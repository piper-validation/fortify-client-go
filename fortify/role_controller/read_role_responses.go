// Code generated by go-swagger; DO NOT EDIT.

package role_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ReadRoleReader is a Reader for the ReadRole structure.
type ReadRoleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadRoleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadRoleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReadRoleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReadRoleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewReadRoleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReadRoleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewReadRoleConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadRoleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadRoleOK creates a ReadRoleOK with default headers values
func NewReadRoleOK() *ReadRoleOK {
	return &ReadRoleOK{}
}

/*ReadRoleOK handles this case with default header values.

OK
*/
type ReadRoleOK struct {
	Payload *models.APIResultRole
}

func (o *ReadRoleOK) Error() string {
	return fmt.Sprintf("[GET /roles/{id}][%d] readRoleOK  %+v", 200, o.Payload)
}

func (o *ReadRoleOK) GetPayload() *models.APIResultRole {
	return o.Payload
}

func (o *ReadRoleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultRole)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadRoleBadRequest creates a ReadRoleBadRequest with default headers values
func NewReadRoleBadRequest() *ReadRoleBadRequest {
	return &ReadRoleBadRequest{}
}

/*ReadRoleBadRequest handles this case with default header values.

Bad Request
*/
type ReadRoleBadRequest struct {
	Payload *models.APIResult
}

func (o *ReadRoleBadRequest) Error() string {
	return fmt.Sprintf("[GET /roles/{id}][%d] readRoleBadRequest  %+v", 400, o.Payload)
}

func (o *ReadRoleBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadRoleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadRoleUnauthorized creates a ReadRoleUnauthorized with default headers values
func NewReadRoleUnauthorized() *ReadRoleUnauthorized {
	return &ReadRoleUnauthorized{}
}

/*ReadRoleUnauthorized handles this case with default header values.

Unauthorized
*/
type ReadRoleUnauthorized struct {
	Payload *models.APIResult
}

func (o *ReadRoleUnauthorized) Error() string {
	return fmt.Sprintf("[GET /roles/{id}][%d] readRoleUnauthorized  %+v", 401, o.Payload)
}

func (o *ReadRoleUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadRoleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadRoleForbidden creates a ReadRoleForbidden with default headers values
func NewReadRoleForbidden() *ReadRoleForbidden {
	return &ReadRoleForbidden{}
}

/*ReadRoleForbidden handles this case with default header values.

Forbidden
*/
type ReadRoleForbidden struct {
	Payload *models.APIResult
}

func (o *ReadRoleForbidden) Error() string {
	return fmt.Sprintf("[GET /roles/{id}][%d] readRoleForbidden  %+v", 403, o.Payload)
}

func (o *ReadRoleForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadRoleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadRoleNotFound creates a ReadRoleNotFound with default headers values
func NewReadRoleNotFound() *ReadRoleNotFound {
	return &ReadRoleNotFound{}
}

/*ReadRoleNotFound handles this case with default header values.

Not Found
*/
type ReadRoleNotFound struct {
	Payload *models.APIResult
}

func (o *ReadRoleNotFound) Error() string {
	return fmt.Sprintf("[GET /roles/{id}][%d] readRoleNotFound  %+v", 404, o.Payload)
}

func (o *ReadRoleNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadRoleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadRoleConflict creates a ReadRoleConflict with default headers values
func NewReadRoleConflict() *ReadRoleConflict {
	return &ReadRoleConflict{}
}

/*ReadRoleConflict handles this case with default header values.

Conflict
*/
type ReadRoleConflict struct {
	Payload *models.APIResult
}

func (o *ReadRoleConflict) Error() string {
	return fmt.Sprintf("[GET /roles/{id}][%d] readRoleConflict  %+v", 409, o.Payload)
}

func (o *ReadRoleConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadRoleConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadRoleInternalServerError creates a ReadRoleInternalServerError with default headers values
func NewReadRoleInternalServerError() *ReadRoleInternalServerError {
	return &ReadRoleInternalServerError{}
}

/*ReadRoleInternalServerError handles this case with default header values.

Internal Server Error
*/
type ReadRoleInternalServerError struct {
	Payload *models.APIResult
}

func (o *ReadRoleInternalServerError) Error() string {
	return fmt.Sprintf("[GET /roles/{id}][%d] readRoleInternalServerError  %+v", 500, o.Payload)
}

func (o *ReadRoleInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ReadRoleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
