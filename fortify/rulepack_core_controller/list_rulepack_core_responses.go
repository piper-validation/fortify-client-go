// Code generated by go-swagger; DO NOT EDIT.

package rulepack_core_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListRulepackCoreReader is a Reader for the ListRulepackCore structure.
type ListRulepackCoreReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListRulepackCoreReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListRulepackCoreOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListRulepackCoreBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListRulepackCoreUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListRulepackCoreForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListRulepackCoreNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListRulepackCoreConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListRulepackCoreInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListRulepackCoreOK creates a ListRulepackCoreOK with default headers values
func NewListRulepackCoreOK() *ListRulepackCoreOK {
	return &ListRulepackCoreOK{}
}

/*ListRulepackCoreOK handles this case with default header values.

OK
*/
type ListRulepackCoreOK struct {
	Payload *models.APIResultListRulepackCore
}

func (o *ListRulepackCoreOK) Error() string {
	return fmt.Sprintf("[GET /coreRulepacks][%d] listRulepackCoreOK  %+v", 200, o.Payload)
}

func (o *ListRulepackCoreOK) GetPayload() *models.APIResultListRulepackCore {
	return o.Payload
}

func (o *ListRulepackCoreOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListRulepackCore)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRulepackCoreBadRequest creates a ListRulepackCoreBadRequest with default headers values
func NewListRulepackCoreBadRequest() *ListRulepackCoreBadRequest {
	return &ListRulepackCoreBadRequest{}
}

/*ListRulepackCoreBadRequest handles this case with default header values.

Bad Request
*/
type ListRulepackCoreBadRequest struct {
	Payload *models.APIResult
}

func (o *ListRulepackCoreBadRequest) Error() string {
	return fmt.Sprintf("[GET /coreRulepacks][%d] listRulepackCoreBadRequest  %+v", 400, o.Payload)
}

func (o *ListRulepackCoreBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListRulepackCoreBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRulepackCoreUnauthorized creates a ListRulepackCoreUnauthorized with default headers values
func NewListRulepackCoreUnauthorized() *ListRulepackCoreUnauthorized {
	return &ListRulepackCoreUnauthorized{}
}

/*ListRulepackCoreUnauthorized handles this case with default header values.

Unauthorized
*/
type ListRulepackCoreUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListRulepackCoreUnauthorized) Error() string {
	return fmt.Sprintf("[GET /coreRulepacks][%d] listRulepackCoreUnauthorized  %+v", 401, o.Payload)
}

func (o *ListRulepackCoreUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListRulepackCoreUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRulepackCoreForbidden creates a ListRulepackCoreForbidden with default headers values
func NewListRulepackCoreForbidden() *ListRulepackCoreForbidden {
	return &ListRulepackCoreForbidden{}
}

/*ListRulepackCoreForbidden handles this case with default header values.

Forbidden
*/
type ListRulepackCoreForbidden struct {
	Payload *models.APIResult
}

func (o *ListRulepackCoreForbidden) Error() string {
	return fmt.Sprintf("[GET /coreRulepacks][%d] listRulepackCoreForbidden  %+v", 403, o.Payload)
}

func (o *ListRulepackCoreForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListRulepackCoreForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRulepackCoreNotFound creates a ListRulepackCoreNotFound with default headers values
func NewListRulepackCoreNotFound() *ListRulepackCoreNotFound {
	return &ListRulepackCoreNotFound{}
}

/*ListRulepackCoreNotFound handles this case with default header values.

Not Found
*/
type ListRulepackCoreNotFound struct {
	Payload *models.APIResult
}

func (o *ListRulepackCoreNotFound) Error() string {
	return fmt.Sprintf("[GET /coreRulepacks][%d] listRulepackCoreNotFound  %+v", 404, o.Payload)
}

func (o *ListRulepackCoreNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListRulepackCoreNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRulepackCoreConflict creates a ListRulepackCoreConflict with default headers values
func NewListRulepackCoreConflict() *ListRulepackCoreConflict {
	return &ListRulepackCoreConflict{}
}

/*ListRulepackCoreConflict handles this case with default header values.

Conflict
*/
type ListRulepackCoreConflict struct {
	Payload *models.APIResult
}

func (o *ListRulepackCoreConflict) Error() string {
	return fmt.Sprintf("[GET /coreRulepacks][%d] listRulepackCoreConflict  %+v", 409, o.Payload)
}

func (o *ListRulepackCoreConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListRulepackCoreConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRulepackCoreInternalServerError creates a ListRulepackCoreInternalServerError with default headers values
func NewListRulepackCoreInternalServerError() *ListRulepackCoreInternalServerError {
	return &ListRulepackCoreInternalServerError{}
}

/*ListRulepackCoreInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListRulepackCoreInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListRulepackCoreInternalServerError) Error() string {
	return fmt.Sprintf("[GET /coreRulepacks][%d] listRulepackCoreInternalServerError  %+v", 500, o.Payload)
}

func (o *ListRulepackCoreInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListRulepackCoreInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
