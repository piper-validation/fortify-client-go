// Code generated by go-swagger; DO NOT EDIT.

package rulepack_core_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// UploadRulepackCoreReader is a Reader for the UploadRulepackCore structure.
type UploadRulepackCoreReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UploadRulepackCoreReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUploadRulepackCoreOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUploadRulepackCoreBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUploadRulepackCoreUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUploadRulepackCoreForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUploadRulepackCoreNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUploadRulepackCoreConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUploadRulepackCoreInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUploadRulepackCoreOK creates a UploadRulepackCoreOK with default headers values
func NewUploadRulepackCoreOK() *UploadRulepackCoreOK {
	return &UploadRulepackCoreOK{}
}

/*UploadRulepackCoreOK handles this case with default header values.

OK
*/
type UploadRulepackCoreOK struct {
	Payload *models.APIResultListRulepackStatus
}

func (o *UploadRulepackCoreOK) Error() string {
	return fmt.Sprintf("[POST /coreRulepacks][%d] uploadRulepackCoreOK  %+v", 200, o.Payload)
}

func (o *UploadRulepackCoreOK) GetPayload() *models.APIResultListRulepackStatus {
	return o.Payload
}

func (o *UploadRulepackCoreOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListRulepackStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadRulepackCoreBadRequest creates a UploadRulepackCoreBadRequest with default headers values
func NewUploadRulepackCoreBadRequest() *UploadRulepackCoreBadRequest {
	return &UploadRulepackCoreBadRequest{}
}

/*UploadRulepackCoreBadRequest handles this case with default header values.

Bad Request
*/
type UploadRulepackCoreBadRequest struct {
	Payload *models.APIResult
}

func (o *UploadRulepackCoreBadRequest) Error() string {
	return fmt.Sprintf("[POST /coreRulepacks][%d] uploadRulepackCoreBadRequest  %+v", 400, o.Payload)
}

func (o *UploadRulepackCoreBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UploadRulepackCoreBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadRulepackCoreUnauthorized creates a UploadRulepackCoreUnauthorized with default headers values
func NewUploadRulepackCoreUnauthorized() *UploadRulepackCoreUnauthorized {
	return &UploadRulepackCoreUnauthorized{}
}

/*UploadRulepackCoreUnauthorized handles this case with default header values.

Unauthorized
*/
type UploadRulepackCoreUnauthorized struct {
	Payload *models.APIResult
}

func (o *UploadRulepackCoreUnauthorized) Error() string {
	return fmt.Sprintf("[POST /coreRulepacks][%d] uploadRulepackCoreUnauthorized  %+v", 401, o.Payload)
}

func (o *UploadRulepackCoreUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UploadRulepackCoreUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadRulepackCoreForbidden creates a UploadRulepackCoreForbidden with default headers values
func NewUploadRulepackCoreForbidden() *UploadRulepackCoreForbidden {
	return &UploadRulepackCoreForbidden{}
}

/*UploadRulepackCoreForbidden handles this case with default header values.

Forbidden
*/
type UploadRulepackCoreForbidden struct {
	Payload *models.APIResult
}

func (o *UploadRulepackCoreForbidden) Error() string {
	return fmt.Sprintf("[POST /coreRulepacks][%d] uploadRulepackCoreForbidden  %+v", 403, o.Payload)
}

func (o *UploadRulepackCoreForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UploadRulepackCoreForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadRulepackCoreNotFound creates a UploadRulepackCoreNotFound with default headers values
func NewUploadRulepackCoreNotFound() *UploadRulepackCoreNotFound {
	return &UploadRulepackCoreNotFound{}
}

/*UploadRulepackCoreNotFound handles this case with default header values.

Not Found
*/
type UploadRulepackCoreNotFound struct {
	Payload *models.APIResult
}

func (o *UploadRulepackCoreNotFound) Error() string {
	return fmt.Sprintf("[POST /coreRulepacks][%d] uploadRulepackCoreNotFound  %+v", 404, o.Payload)
}

func (o *UploadRulepackCoreNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UploadRulepackCoreNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadRulepackCoreConflict creates a UploadRulepackCoreConflict with default headers values
func NewUploadRulepackCoreConflict() *UploadRulepackCoreConflict {
	return &UploadRulepackCoreConflict{}
}

/*UploadRulepackCoreConflict handles this case with default header values.

Conflict
*/
type UploadRulepackCoreConflict struct {
	Payload *models.APIResult
}

func (o *UploadRulepackCoreConflict) Error() string {
	return fmt.Sprintf("[POST /coreRulepacks][%d] uploadRulepackCoreConflict  %+v", 409, o.Payload)
}

func (o *UploadRulepackCoreConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UploadRulepackCoreConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadRulepackCoreInternalServerError creates a UploadRulepackCoreInternalServerError with default headers values
func NewUploadRulepackCoreInternalServerError() *UploadRulepackCoreInternalServerError {
	return &UploadRulepackCoreInternalServerError{}
}

/*UploadRulepackCoreInternalServerError handles this case with default header values.

Internal Server Error
*/
type UploadRulepackCoreInternalServerError struct {
	Payload *models.APIResult
}

func (o *UploadRulepackCoreInternalServerError) Error() string {
	return fmt.Sprintf("[POST /coreRulepacks][%d] uploadRulepackCoreInternalServerError  %+v", 500, o.Payload)
}

func (o *UploadRulepackCoreInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UploadRulepackCoreInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
