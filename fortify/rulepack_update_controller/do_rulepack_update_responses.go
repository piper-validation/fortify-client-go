// Code generated by go-swagger; DO NOT EDIT.

package rulepack_update_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// DoRulepackUpdateReader is a Reader for the DoRulepackUpdate structure.
type DoRulepackUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DoRulepackUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDoRulepackUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDoRulepackUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDoRulepackUpdateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDoRulepackUpdateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDoRulepackUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDoRulepackUpdateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDoRulepackUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDoRulepackUpdateOK creates a DoRulepackUpdateOK with default headers values
func NewDoRulepackUpdateOK() *DoRulepackUpdateOK {
	return &DoRulepackUpdateOK{}
}

/*DoRulepackUpdateOK handles this case with default header values.

OK
*/
type DoRulepackUpdateOK struct {
	Payload *models.APIResultListRulepacksBatchProcessStatus
}

func (o *DoRulepackUpdateOK) Error() string {
	return fmt.Sprintf("[GET /updateRulepacks][%d] doRulepackUpdateOK  %+v", 200, o.Payload)
}

func (o *DoRulepackUpdateOK) GetPayload() *models.APIResultListRulepacksBatchProcessStatus {
	return o.Payload
}

func (o *DoRulepackUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListRulepacksBatchProcessStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDoRulepackUpdateBadRequest creates a DoRulepackUpdateBadRequest with default headers values
func NewDoRulepackUpdateBadRequest() *DoRulepackUpdateBadRequest {
	return &DoRulepackUpdateBadRequest{}
}

/*DoRulepackUpdateBadRequest handles this case with default header values.

Bad Request
*/
type DoRulepackUpdateBadRequest struct {
	Payload *models.APIResult
}

func (o *DoRulepackUpdateBadRequest) Error() string {
	return fmt.Sprintf("[GET /updateRulepacks][%d] doRulepackUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *DoRulepackUpdateBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DoRulepackUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDoRulepackUpdateUnauthorized creates a DoRulepackUpdateUnauthorized with default headers values
func NewDoRulepackUpdateUnauthorized() *DoRulepackUpdateUnauthorized {
	return &DoRulepackUpdateUnauthorized{}
}

/*DoRulepackUpdateUnauthorized handles this case with default header values.

Unauthorized
*/
type DoRulepackUpdateUnauthorized struct {
	Payload *models.APIResult
}

func (o *DoRulepackUpdateUnauthorized) Error() string {
	return fmt.Sprintf("[GET /updateRulepacks][%d] doRulepackUpdateUnauthorized  %+v", 401, o.Payload)
}

func (o *DoRulepackUpdateUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DoRulepackUpdateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDoRulepackUpdateForbidden creates a DoRulepackUpdateForbidden with default headers values
func NewDoRulepackUpdateForbidden() *DoRulepackUpdateForbidden {
	return &DoRulepackUpdateForbidden{}
}

/*DoRulepackUpdateForbidden handles this case with default header values.

Forbidden
*/
type DoRulepackUpdateForbidden struct {
	Payload *models.APIResult
}

func (o *DoRulepackUpdateForbidden) Error() string {
	return fmt.Sprintf("[GET /updateRulepacks][%d] doRulepackUpdateForbidden  %+v", 403, o.Payload)
}

func (o *DoRulepackUpdateForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DoRulepackUpdateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDoRulepackUpdateNotFound creates a DoRulepackUpdateNotFound with default headers values
func NewDoRulepackUpdateNotFound() *DoRulepackUpdateNotFound {
	return &DoRulepackUpdateNotFound{}
}

/*DoRulepackUpdateNotFound handles this case with default header values.

Not Found
*/
type DoRulepackUpdateNotFound struct {
	Payload *models.APIResult
}

func (o *DoRulepackUpdateNotFound) Error() string {
	return fmt.Sprintf("[GET /updateRulepacks][%d] doRulepackUpdateNotFound  %+v", 404, o.Payload)
}

func (o *DoRulepackUpdateNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DoRulepackUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDoRulepackUpdateConflict creates a DoRulepackUpdateConflict with default headers values
func NewDoRulepackUpdateConflict() *DoRulepackUpdateConflict {
	return &DoRulepackUpdateConflict{}
}

/*DoRulepackUpdateConflict handles this case with default header values.

Conflict
*/
type DoRulepackUpdateConflict struct {
	Payload *models.APIResult
}

func (o *DoRulepackUpdateConflict) Error() string {
	return fmt.Sprintf("[GET /updateRulepacks][%d] doRulepackUpdateConflict  %+v", 409, o.Payload)
}

func (o *DoRulepackUpdateConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DoRulepackUpdateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDoRulepackUpdateInternalServerError creates a DoRulepackUpdateInternalServerError with default headers values
func NewDoRulepackUpdateInternalServerError() *DoRulepackUpdateInternalServerError {
	return &DoRulepackUpdateInternalServerError{}
}

/*DoRulepackUpdateInternalServerError handles this case with default header values.

Internal Server Error
*/
type DoRulepackUpdateInternalServerError struct {
	Payload *models.APIResult
}

func (o *DoRulepackUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[GET /updateRulepacks][%d] doRulepackUpdateInternalServerError  %+v", 500, o.Payload)
}

func (o *DoRulepackUpdateInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DoRulepackUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
