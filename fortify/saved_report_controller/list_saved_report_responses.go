// Code generated by go-swagger; DO NOT EDIT.

package saved_report_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListSavedReportReader is a Reader for the ListSavedReport structure.
type ListSavedReportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListSavedReportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListSavedReportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListSavedReportBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListSavedReportUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListSavedReportForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListSavedReportNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListSavedReportConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListSavedReportInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListSavedReportOK creates a ListSavedReportOK with default headers values
func NewListSavedReportOK() *ListSavedReportOK {
	return &ListSavedReportOK{}
}

/*ListSavedReportOK handles this case with default header values.

OK
*/
type ListSavedReportOK struct {
	Payload *models.APIResultListSavedReport
}

func (o *ListSavedReportOK) Error() string {
	return fmt.Sprintf("[GET /reports][%d] listSavedReportOK  %+v", 200, o.Payload)
}

func (o *ListSavedReportOK) GetPayload() *models.APIResultListSavedReport {
	return o.Payload
}

func (o *ListSavedReportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListSavedReport)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSavedReportBadRequest creates a ListSavedReportBadRequest with default headers values
func NewListSavedReportBadRequest() *ListSavedReportBadRequest {
	return &ListSavedReportBadRequest{}
}

/*ListSavedReportBadRequest handles this case with default header values.

Bad Request
*/
type ListSavedReportBadRequest struct {
	Payload *models.APIResult
}

func (o *ListSavedReportBadRequest) Error() string {
	return fmt.Sprintf("[GET /reports][%d] listSavedReportBadRequest  %+v", 400, o.Payload)
}

func (o *ListSavedReportBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListSavedReportBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSavedReportUnauthorized creates a ListSavedReportUnauthorized with default headers values
func NewListSavedReportUnauthorized() *ListSavedReportUnauthorized {
	return &ListSavedReportUnauthorized{}
}

/*ListSavedReportUnauthorized handles this case with default header values.

Unauthorized
*/
type ListSavedReportUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListSavedReportUnauthorized) Error() string {
	return fmt.Sprintf("[GET /reports][%d] listSavedReportUnauthorized  %+v", 401, o.Payload)
}

func (o *ListSavedReportUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListSavedReportUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSavedReportForbidden creates a ListSavedReportForbidden with default headers values
func NewListSavedReportForbidden() *ListSavedReportForbidden {
	return &ListSavedReportForbidden{}
}

/*ListSavedReportForbidden handles this case with default header values.

Forbidden
*/
type ListSavedReportForbidden struct {
	Payload *models.APIResult
}

func (o *ListSavedReportForbidden) Error() string {
	return fmt.Sprintf("[GET /reports][%d] listSavedReportForbidden  %+v", 403, o.Payload)
}

func (o *ListSavedReportForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListSavedReportForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSavedReportNotFound creates a ListSavedReportNotFound with default headers values
func NewListSavedReportNotFound() *ListSavedReportNotFound {
	return &ListSavedReportNotFound{}
}

/*ListSavedReportNotFound handles this case with default header values.

Not Found
*/
type ListSavedReportNotFound struct {
	Payload *models.APIResult
}

func (o *ListSavedReportNotFound) Error() string {
	return fmt.Sprintf("[GET /reports][%d] listSavedReportNotFound  %+v", 404, o.Payload)
}

func (o *ListSavedReportNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListSavedReportNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSavedReportConflict creates a ListSavedReportConflict with default headers values
func NewListSavedReportConflict() *ListSavedReportConflict {
	return &ListSavedReportConflict{}
}

/*ListSavedReportConflict handles this case with default header values.

Conflict
*/
type ListSavedReportConflict struct {
	Payload *models.APIResult
}

func (o *ListSavedReportConflict) Error() string {
	return fmt.Sprintf("[GET /reports][%d] listSavedReportConflict  %+v", 409, o.Payload)
}

func (o *ListSavedReportConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListSavedReportConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSavedReportInternalServerError creates a ListSavedReportInternalServerError with default headers values
func NewListSavedReportInternalServerError() *ListSavedReportInternalServerError {
	return &ListSavedReportInternalServerError{}
}

/*ListSavedReportInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListSavedReportInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListSavedReportInternalServerError) Error() string {
	return fmt.Sprintf("[GET /reports][%d] listSavedReportInternalServerError  %+v", 500, o.Payload)
}

func (o *ListSavedReportInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListSavedReportInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
