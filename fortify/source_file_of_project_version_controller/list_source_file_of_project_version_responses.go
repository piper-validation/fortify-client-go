// Code generated by go-swagger; DO NOT EDIT.

package source_file_of_project_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListSourceFileOfProjectVersionReader is a Reader for the ListSourceFileOfProjectVersion structure.
type ListSourceFileOfProjectVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListSourceFileOfProjectVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListSourceFileOfProjectVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListSourceFileOfProjectVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListSourceFileOfProjectVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListSourceFileOfProjectVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListSourceFileOfProjectVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListSourceFileOfProjectVersionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListSourceFileOfProjectVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListSourceFileOfProjectVersionOK creates a ListSourceFileOfProjectVersionOK with default headers values
func NewListSourceFileOfProjectVersionOK() *ListSourceFileOfProjectVersionOK {
	return &ListSourceFileOfProjectVersionOK{}
}

/*ListSourceFileOfProjectVersionOK handles this case with default header values.

OK
*/
type ListSourceFileOfProjectVersionOK struct {
	Payload *models.APIResultListSourceFileDto
}

func (o *ListSourceFileOfProjectVersionOK) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/sourceFiles][%d] listSourceFileOfProjectVersionOK  %+v", 200, o.Payload)
}

func (o *ListSourceFileOfProjectVersionOK) GetPayload() *models.APIResultListSourceFileDto {
	return o.Payload
}

func (o *ListSourceFileOfProjectVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListSourceFileDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSourceFileOfProjectVersionBadRequest creates a ListSourceFileOfProjectVersionBadRequest with default headers values
func NewListSourceFileOfProjectVersionBadRequest() *ListSourceFileOfProjectVersionBadRequest {
	return &ListSourceFileOfProjectVersionBadRequest{}
}

/*ListSourceFileOfProjectVersionBadRequest handles this case with default header values.

Bad Request
*/
type ListSourceFileOfProjectVersionBadRequest struct {
	Payload *models.APIResult
}

func (o *ListSourceFileOfProjectVersionBadRequest) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/sourceFiles][%d] listSourceFileOfProjectVersionBadRequest  %+v", 400, o.Payload)
}

func (o *ListSourceFileOfProjectVersionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListSourceFileOfProjectVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSourceFileOfProjectVersionUnauthorized creates a ListSourceFileOfProjectVersionUnauthorized with default headers values
func NewListSourceFileOfProjectVersionUnauthorized() *ListSourceFileOfProjectVersionUnauthorized {
	return &ListSourceFileOfProjectVersionUnauthorized{}
}

/*ListSourceFileOfProjectVersionUnauthorized handles this case with default header values.

Unauthorized
*/
type ListSourceFileOfProjectVersionUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListSourceFileOfProjectVersionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/sourceFiles][%d] listSourceFileOfProjectVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *ListSourceFileOfProjectVersionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListSourceFileOfProjectVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSourceFileOfProjectVersionForbidden creates a ListSourceFileOfProjectVersionForbidden with default headers values
func NewListSourceFileOfProjectVersionForbidden() *ListSourceFileOfProjectVersionForbidden {
	return &ListSourceFileOfProjectVersionForbidden{}
}

/*ListSourceFileOfProjectVersionForbidden handles this case with default header values.

Forbidden
*/
type ListSourceFileOfProjectVersionForbidden struct {
	Payload *models.APIResult
}

func (o *ListSourceFileOfProjectVersionForbidden) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/sourceFiles][%d] listSourceFileOfProjectVersionForbidden  %+v", 403, o.Payload)
}

func (o *ListSourceFileOfProjectVersionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListSourceFileOfProjectVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSourceFileOfProjectVersionNotFound creates a ListSourceFileOfProjectVersionNotFound with default headers values
func NewListSourceFileOfProjectVersionNotFound() *ListSourceFileOfProjectVersionNotFound {
	return &ListSourceFileOfProjectVersionNotFound{}
}

/*ListSourceFileOfProjectVersionNotFound handles this case with default header values.

Not Found
*/
type ListSourceFileOfProjectVersionNotFound struct {
	Payload *models.APIResult
}

func (o *ListSourceFileOfProjectVersionNotFound) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/sourceFiles][%d] listSourceFileOfProjectVersionNotFound  %+v", 404, o.Payload)
}

func (o *ListSourceFileOfProjectVersionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListSourceFileOfProjectVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSourceFileOfProjectVersionConflict creates a ListSourceFileOfProjectVersionConflict with default headers values
func NewListSourceFileOfProjectVersionConflict() *ListSourceFileOfProjectVersionConflict {
	return &ListSourceFileOfProjectVersionConflict{}
}

/*ListSourceFileOfProjectVersionConflict handles this case with default header values.

Conflict
*/
type ListSourceFileOfProjectVersionConflict struct {
	Payload *models.APIResult
}

func (o *ListSourceFileOfProjectVersionConflict) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/sourceFiles][%d] listSourceFileOfProjectVersionConflict  %+v", 409, o.Payload)
}

func (o *ListSourceFileOfProjectVersionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListSourceFileOfProjectVersionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSourceFileOfProjectVersionInternalServerError creates a ListSourceFileOfProjectVersionInternalServerError with default headers values
func NewListSourceFileOfProjectVersionInternalServerError() *ListSourceFileOfProjectVersionInternalServerError {
	return &ListSourceFileOfProjectVersionInternalServerError{}
}

/*ListSourceFileOfProjectVersionInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListSourceFileOfProjectVersionInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListSourceFileOfProjectVersionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/sourceFiles][%d] listSourceFileOfProjectVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *ListSourceFileOfProjectVersionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListSourceFileOfProjectVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
