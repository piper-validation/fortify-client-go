// Code generated by go-swagger; DO NOT EDIT.

package token_definition_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListTokenDefinitionReader is a Reader for the ListTokenDefinition structure.
type ListTokenDefinitionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListTokenDefinitionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListTokenDefinitionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListTokenDefinitionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListTokenDefinitionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListTokenDefinitionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListTokenDefinitionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListTokenDefinitionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListTokenDefinitionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListTokenDefinitionOK creates a ListTokenDefinitionOK with default headers values
func NewListTokenDefinitionOK() *ListTokenDefinitionOK {
	return &ListTokenDefinitionOK{}
}

/*ListTokenDefinitionOK handles this case with default header values.

OK
*/
type ListTokenDefinitionOK struct {
	Payload *models.APIResultListTokenDefinition
}

func (o *ListTokenDefinitionOK) Error() string {
	return fmt.Sprintf("[GET /tokenDefinitions][%d] listTokenDefinitionOK  %+v", 200, o.Payload)
}

func (o *ListTokenDefinitionOK) GetPayload() *models.APIResultListTokenDefinition {
	return o.Payload
}

func (o *ListTokenDefinitionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListTokenDefinition)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTokenDefinitionBadRequest creates a ListTokenDefinitionBadRequest with default headers values
func NewListTokenDefinitionBadRequest() *ListTokenDefinitionBadRequest {
	return &ListTokenDefinitionBadRequest{}
}

/*ListTokenDefinitionBadRequest handles this case with default header values.

Bad Request
*/
type ListTokenDefinitionBadRequest struct {
	Payload *models.APIResult
}

func (o *ListTokenDefinitionBadRequest) Error() string {
	return fmt.Sprintf("[GET /tokenDefinitions][%d] listTokenDefinitionBadRequest  %+v", 400, o.Payload)
}

func (o *ListTokenDefinitionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListTokenDefinitionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTokenDefinitionUnauthorized creates a ListTokenDefinitionUnauthorized with default headers values
func NewListTokenDefinitionUnauthorized() *ListTokenDefinitionUnauthorized {
	return &ListTokenDefinitionUnauthorized{}
}

/*ListTokenDefinitionUnauthorized handles this case with default header values.

Unauthorized
*/
type ListTokenDefinitionUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListTokenDefinitionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /tokenDefinitions][%d] listTokenDefinitionUnauthorized  %+v", 401, o.Payload)
}

func (o *ListTokenDefinitionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListTokenDefinitionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTokenDefinitionForbidden creates a ListTokenDefinitionForbidden with default headers values
func NewListTokenDefinitionForbidden() *ListTokenDefinitionForbidden {
	return &ListTokenDefinitionForbidden{}
}

/*ListTokenDefinitionForbidden handles this case with default header values.

Forbidden
*/
type ListTokenDefinitionForbidden struct {
	Payload *models.APIResult
}

func (o *ListTokenDefinitionForbidden) Error() string {
	return fmt.Sprintf("[GET /tokenDefinitions][%d] listTokenDefinitionForbidden  %+v", 403, o.Payload)
}

func (o *ListTokenDefinitionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListTokenDefinitionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTokenDefinitionNotFound creates a ListTokenDefinitionNotFound with default headers values
func NewListTokenDefinitionNotFound() *ListTokenDefinitionNotFound {
	return &ListTokenDefinitionNotFound{}
}

/*ListTokenDefinitionNotFound handles this case with default header values.

Not Found
*/
type ListTokenDefinitionNotFound struct {
	Payload *models.APIResult
}

func (o *ListTokenDefinitionNotFound) Error() string {
	return fmt.Sprintf("[GET /tokenDefinitions][%d] listTokenDefinitionNotFound  %+v", 404, o.Payload)
}

func (o *ListTokenDefinitionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListTokenDefinitionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTokenDefinitionConflict creates a ListTokenDefinitionConflict with default headers values
func NewListTokenDefinitionConflict() *ListTokenDefinitionConflict {
	return &ListTokenDefinitionConflict{}
}

/*ListTokenDefinitionConflict handles this case with default header values.

Conflict
*/
type ListTokenDefinitionConflict struct {
	Payload *models.APIResult
}

func (o *ListTokenDefinitionConflict) Error() string {
	return fmt.Sprintf("[GET /tokenDefinitions][%d] listTokenDefinitionConflict  %+v", 409, o.Payload)
}

func (o *ListTokenDefinitionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListTokenDefinitionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTokenDefinitionInternalServerError creates a ListTokenDefinitionInternalServerError with default headers values
func NewListTokenDefinitionInternalServerError() *ListTokenDefinitionInternalServerError {
	return &ListTokenDefinitionInternalServerError{}
}

/*ListTokenDefinitionInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListTokenDefinitionInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListTokenDefinitionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /tokenDefinitions][%d] listTokenDefinitionInternalServerError  %+v", 500, o.Payload)
}

func (o *ListTokenDefinitionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListTokenDefinitionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
