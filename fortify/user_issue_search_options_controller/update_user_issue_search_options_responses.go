// Code generated by go-swagger; DO NOT EDIT.

package user_issue_search_options_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// UpdateUserIssueSearchOptionsReader is a Reader for the UpdateUserIssueSearchOptions structure.
type UpdateUserIssueSearchOptionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateUserIssueSearchOptionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateUserIssueSearchOptionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateUserIssueSearchOptionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateUserIssueSearchOptionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateUserIssueSearchOptionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateUserIssueSearchOptionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateUserIssueSearchOptionsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateUserIssueSearchOptionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateUserIssueSearchOptionsOK creates a UpdateUserIssueSearchOptionsOK with default headers values
func NewUpdateUserIssueSearchOptionsOK() *UpdateUserIssueSearchOptionsOK {
	return &UpdateUserIssueSearchOptionsOK{}
}

/*UpdateUserIssueSearchOptionsOK handles this case with default header values.

OK
*/
type UpdateUserIssueSearchOptionsOK struct {
	Payload *models.APIResultUserIssueSearchOptions
}

func (o *UpdateUserIssueSearchOptionsOK) Error() string {
	return fmt.Sprintf("[PUT /userIssueSearchOptions][%d] updateUserIssueSearchOptionsOK  %+v", 200, o.Payload)
}

func (o *UpdateUserIssueSearchOptionsOK) GetPayload() *models.APIResultUserIssueSearchOptions {
	return o.Payload
}

func (o *UpdateUserIssueSearchOptionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultUserIssueSearchOptions)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserIssueSearchOptionsBadRequest creates a UpdateUserIssueSearchOptionsBadRequest with default headers values
func NewUpdateUserIssueSearchOptionsBadRequest() *UpdateUserIssueSearchOptionsBadRequest {
	return &UpdateUserIssueSearchOptionsBadRequest{}
}

/*UpdateUserIssueSearchOptionsBadRequest handles this case with default header values.

Bad Request
*/
type UpdateUserIssueSearchOptionsBadRequest struct {
	Payload *models.APIResult
}

func (o *UpdateUserIssueSearchOptionsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /userIssueSearchOptions][%d] updateUserIssueSearchOptionsBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateUserIssueSearchOptionsBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateUserIssueSearchOptionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserIssueSearchOptionsUnauthorized creates a UpdateUserIssueSearchOptionsUnauthorized with default headers values
func NewUpdateUserIssueSearchOptionsUnauthorized() *UpdateUserIssueSearchOptionsUnauthorized {
	return &UpdateUserIssueSearchOptionsUnauthorized{}
}

/*UpdateUserIssueSearchOptionsUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateUserIssueSearchOptionsUnauthorized struct {
	Payload *models.APIResult
}

func (o *UpdateUserIssueSearchOptionsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /userIssueSearchOptions][%d] updateUserIssueSearchOptionsUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateUserIssueSearchOptionsUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateUserIssueSearchOptionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserIssueSearchOptionsForbidden creates a UpdateUserIssueSearchOptionsForbidden with default headers values
func NewUpdateUserIssueSearchOptionsForbidden() *UpdateUserIssueSearchOptionsForbidden {
	return &UpdateUserIssueSearchOptionsForbidden{}
}

/*UpdateUserIssueSearchOptionsForbidden handles this case with default header values.

Forbidden
*/
type UpdateUserIssueSearchOptionsForbidden struct {
	Payload *models.APIResult
}

func (o *UpdateUserIssueSearchOptionsForbidden) Error() string {
	return fmt.Sprintf("[PUT /userIssueSearchOptions][%d] updateUserIssueSearchOptionsForbidden  %+v", 403, o.Payload)
}

func (o *UpdateUserIssueSearchOptionsForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateUserIssueSearchOptionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserIssueSearchOptionsNotFound creates a UpdateUserIssueSearchOptionsNotFound with default headers values
func NewUpdateUserIssueSearchOptionsNotFound() *UpdateUserIssueSearchOptionsNotFound {
	return &UpdateUserIssueSearchOptionsNotFound{}
}

/*UpdateUserIssueSearchOptionsNotFound handles this case with default header values.

Not Found
*/
type UpdateUserIssueSearchOptionsNotFound struct {
	Payload *models.APIResult
}

func (o *UpdateUserIssueSearchOptionsNotFound) Error() string {
	return fmt.Sprintf("[PUT /userIssueSearchOptions][%d] updateUserIssueSearchOptionsNotFound  %+v", 404, o.Payload)
}

func (o *UpdateUserIssueSearchOptionsNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateUserIssueSearchOptionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserIssueSearchOptionsConflict creates a UpdateUserIssueSearchOptionsConflict with default headers values
func NewUpdateUserIssueSearchOptionsConflict() *UpdateUserIssueSearchOptionsConflict {
	return &UpdateUserIssueSearchOptionsConflict{}
}

/*UpdateUserIssueSearchOptionsConflict handles this case with default header values.

Conflict
*/
type UpdateUserIssueSearchOptionsConflict struct {
	Payload *models.APIResult
}

func (o *UpdateUserIssueSearchOptionsConflict) Error() string {
	return fmt.Sprintf("[PUT /userIssueSearchOptions][%d] updateUserIssueSearchOptionsConflict  %+v", 409, o.Payload)
}

func (o *UpdateUserIssueSearchOptionsConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateUserIssueSearchOptionsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserIssueSearchOptionsInternalServerError creates a UpdateUserIssueSearchOptionsInternalServerError with default headers values
func NewUpdateUserIssueSearchOptionsInternalServerError() *UpdateUserIssueSearchOptionsInternalServerError {
	return &UpdateUserIssueSearchOptionsInternalServerError{}
}

/*UpdateUserIssueSearchOptionsInternalServerError handles this case with default header values.

Internal Server Error
*/
type UpdateUserIssueSearchOptionsInternalServerError struct {
	Payload *models.APIResult
}

func (o *UpdateUserIssueSearchOptionsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /userIssueSearchOptions][%d] updateUserIssueSearchOptionsInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateUserIssueSearchOptionsInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateUserIssueSearchOptionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
