// Code generated by go-swagger; DO NOT EDIT.

package user_issue_search_options_of_project_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// GetUserIssueSearchOptionsOfProjectVersionReader is a Reader for the GetUserIssueSearchOptionsOfProjectVersion structure.
type GetUserIssueSearchOptionsOfProjectVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserIssueSearchOptionsOfProjectVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserIssueSearchOptionsOfProjectVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserIssueSearchOptionsOfProjectVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUserIssueSearchOptionsOfProjectVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserIssueSearchOptionsOfProjectVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserIssueSearchOptionsOfProjectVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetUserIssueSearchOptionsOfProjectVersionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserIssueSearchOptionsOfProjectVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUserIssueSearchOptionsOfProjectVersionOK creates a GetUserIssueSearchOptionsOfProjectVersionOK with default headers values
func NewGetUserIssueSearchOptionsOfProjectVersionOK() *GetUserIssueSearchOptionsOfProjectVersionOK {
	return &GetUserIssueSearchOptionsOfProjectVersionOK{}
}

/*GetUserIssueSearchOptionsOfProjectVersionOK handles this case with default header values.

OK
*/
type GetUserIssueSearchOptionsOfProjectVersionOK struct {
	Payload *models.APIResultUserIssueSearchOptions
}

func (o *GetUserIssueSearchOptionsOfProjectVersionOK) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/userIssueSearchOptions][%d] getUserIssueSearchOptionsOfProjectVersionOK  %+v", 200, o.Payload)
}

func (o *GetUserIssueSearchOptionsOfProjectVersionOK) GetPayload() *models.APIResultUserIssueSearchOptions {
	return o.Payload
}

func (o *GetUserIssueSearchOptionsOfProjectVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultUserIssueSearchOptions)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserIssueSearchOptionsOfProjectVersionBadRequest creates a GetUserIssueSearchOptionsOfProjectVersionBadRequest with default headers values
func NewGetUserIssueSearchOptionsOfProjectVersionBadRequest() *GetUserIssueSearchOptionsOfProjectVersionBadRequest {
	return &GetUserIssueSearchOptionsOfProjectVersionBadRequest{}
}

/*GetUserIssueSearchOptionsOfProjectVersionBadRequest handles this case with default header values.

Bad Request
*/
type GetUserIssueSearchOptionsOfProjectVersionBadRequest struct {
	Payload *models.APIResult
}

func (o *GetUserIssueSearchOptionsOfProjectVersionBadRequest) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/userIssueSearchOptions][%d] getUserIssueSearchOptionsOfProjectVersionBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserIssueSearchOptionsOfProjectVersionBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *GetUserIssueSearchOptionsOfProjectVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserIssueSearchOptionsOfProjectVersionUnauthorized creates a GetUserIssueSearchOptionsOfProjectVersionUnauthorized with default headers values
func NewGetUserIssueSearchOptionsOfProjectVersionUnauthorized() *GetUserIssueSearchOptionsOfProjectVersionUnauthorized {
	return &GetUserIssueSearchOptionsOfProjectVersionUnauthorized{}
}

/*GetUserIssueSearchOptionsOfProjectVersionUnauthorized handles this case with default header values.

Unauthorized
*/
type GetUserIssueSearchOptionsOfProjectVersionUnauthorized struct {
	Payload *models.APIResult
}

func (o *GetUserIssueSearchOptionsOfProjectVersionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/userIssueSearchOptions][%d] getUserIssueSearchOptionsOfProjectVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUserIssueSearchOptionsOfProjectVersionUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *GetUserIssueSearchOptionsOfProjectVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserIssueSearchOptionsOfProjectVersionForbidden creates a GetUserIssueSearchOptionsOfProjectVersionForbidden with default headers values
func NewGetUserIssueSearchOptionsOfProjectVersionForbidden() *GetUserIssueSearchOptionsOfProjectVersionForbidden {
	return &GetUserIssueSearchOptionsOfProjectVersionForbidden{}
}

/*GetUserIssueSearchOptionsOfProjectVersionForbidden handles this case with default header values.

Forbidden
*/
type GetUserIssueSearchOptionsOfProjectVersionForbidden struct {
	Payload *models.APIResult
}

func (o *GetUserIssueSearchOptionsOfProjectVersionForbidden) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/userIssueSearchOptions][%d] getUserIssueSearchOptionsOfProjectVersionForbidden  %+v", 403, o.Payload)
}

func (o *GetUserIssueSearchOptionsOfProjectVersionForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *GetUserIssueSearchOptionsOfProjectVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserIssueSearchOptionsOfProjectVersionNotFound creates a GetUserIssueSearchOptionsOfProjectVersionNotFound with default headers values
func NewGetUserIssueSearchOptionsOfProjectVersionNotFound() *GetUserIssueSearchOptionsOfProjectVersionNotFound {
	return &GetUserIssueSearchOptionsOfProjectVersionNotFound{}
}

/*GetUserIssueSearchOptionsOfProjectVersionNotFound handles this case with default header values.

Not Found
*/
type GetUserIssueSearchOptionsOfProjectVersionNotFound struct {
	Payload *models.APIResult
}

func (o *GetUserIssueSearchOptionsOfProjectVersionNotFound) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/userIssueSearchOptions][%d] getUserIssueSearchOptionsOfProjectVersionNotFound  %+v", 404, o.Payload)
}

func (o *GetUserIssueSearchOptionsOfProjectVersionNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *GetUserIssueSearchOptionsOfProjectVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserIssueSearchOptionsOfProjectVersionConflict creates a GetUserIssueSearchOptionsOfProjectVersionConflict with default headers values
func NewGetUserIssueSearchOptionsOfProjectVersionConflict() *GetUserIssueSearchOptionsOfProjectVersionConflict {
	return &GetUserIssueSearchOptionsOfProjectVersionConflict{}
}

/*GetUserIssueSearchOptionsOfProjectVersionConflict handles this case with default header values.

Conflict
*/
type GetUserIssueSearchOptionsOfProjectVersionConflict struct {
	Payload *models.APIResult
}

func (o *GetUserIssueSearchOptionsOfProjectVersionConflict) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/userIssueSearchOptions][%d] getUserIssueSearchOptionsOfProjectVersionConflict  %+v", 409, o.Payload)
}

func (o *GetUserIssueSearchOptionsOfProjectVersionConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *GetUserIssueSearchOptionsOfProjectVersionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserIssueSearchOptionsOfProjectVersionInternalServerError creates a GetUserIssueSearchOptionsOfProjectVersionInternalServerError with default headers values
func NewGetUserIssueSearchOptionsOfProjectVersionInternalServerError() *GetUserIssueSearchOptionsOfProjectVersionInternalServerError {
	return &GetUserIssueSearchOptionsOfProjectVersionInternalServerError{}
}

/*GetUserIssueSearchOptionsOfProjectVersionInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetUserIssueSearchOptionsOfProjectVersionInternalServerError struct {
	Payload *models.APIResult
}

func (o *GetUserIssueSearchOptionsOfProjectVersionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /projectVersions/{parentId}/userIssueSearchOptions][%d] getUserIssueSearchOptionsOfProjectVersionInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserIssueSearchOptionsOfProjectVersionInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *GetUserIssueSearchOptionsOfProjectVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
