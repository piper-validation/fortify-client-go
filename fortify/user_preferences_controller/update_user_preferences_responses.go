// Code generated by go-swagger; DO NOT EDIT.

package user_preferences_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// UpdateUserPreferencesReader is a Reader for the UpdateUserPreferences structure.
type UpdateUserPreferencesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateUserPreferencesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateUserPreferencesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateUserPreferencesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateUserPreferencesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateUserPreferencesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateUserPreferencesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateUserPreferencesConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateUserPreferencesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateUserPreferencesOK creates a UpdateUserPreferencesOK with default headers values
func NewUpdateUserPreferencesOK() *UpdateUserPreferencesOK {
	return &UpdateUserPreferencesOK{}
}

/*UpdateUserPreferencesOK handles this case with default header values.

OK
*/
type UpdateUserPreferencesOK struct {
	Payload *models.APIResultUserPreferences
}

func (o *UpdateUserPreferencesOK) Error() string {
	return fmt.Sprintf("[PUT /userSession/prefs][%d] updateUserPreferencesOK  %+v", 200, o.Payload)
}

func (o *UpdateUserPreferencesOK) GetPayload() *models.APIResultUserPreferences {
	return o.Payload
}

func (o *UpdateUserPreferencesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultUserPreferences)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserPreferencesBadRequest creates a UpdateUserPreferencesBadRequest with default headers values
func NewUpdateUserPreferencesBadRequest() *UpdateUserPreferencesBadRequest {
	return &UpdateUserPreferencesBadRequest{}
}

/*UpdateUserPreferencesBadRequest handles this case with default header values.

Bad Request
*/
type UpdateUserPreferencesBadRequest struct {
	Payload *models.APIResult
}

func (o *UpdateUserPreferencesBadRequest) Error() string {
	return fmt.Sprintf("[PUT /userSession/prefs][%d] updateUserPreferencesBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateUserPreferencesBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateUserPreferencesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserPreferencesUnauthorized creates a UpdateUserPreferencesUnauthorized with default headers values
func NewUpdateUserPreferencesUnauthorized() *UpdateUserPreferencesUnauthorized {
	return &UpdateUserPreferencesUnauthorized{}
}

/*UpdateUserPreferencesUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateUserPreferencesUnauthorized struct {
	Payload *models.APIResult
}

func (o *UpdateUserPreferencesUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /userSession/prefs][%d] updateUserPreferencesUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateUserPreferencesUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateUserPreferencesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserPreferencesForbidden creates a UpdateUserPreferencesForbidden with default headers values
func NewUpdateUserPreferencesForbidden() *UpdateUserPreferencesForbidden {
	return &UpdateUserPreferencesForbidden{}
}

/*UpdateUserPreferencesForbidden handles this case with default header values.

Forbidden
*/
type UpdateUserPreferencesForbidden struct {
	Payload *models.APIResult
}

func (o *UpdateUserPreferencesForbidden) Error() string {
	return fmt.Sprintf("[PUT /userSession/prefs][%d] updateUserPreferencesForbidden  %+v", 403, o.Payload)
}

func (o *UpdateUserPreferencesForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateUserPreferencesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserPreferencesNotFound creates a UpdateUserPreferencesNotFound with default headers values
func NewUpdateUserPreferencesNotFound() *UpdateUserPreferencesNotFound {
	return &UpdateUserPreferencesNotFound{}
}

/*UpdateUserPreferencesNotFound handles this case with default header values.

Not Found
*/
type UpdateUserPreferencesNotFound struct {
	Payload *models.APIResult
}

func (o *UpdateUserPreferencesNotFound) Error() string {
	return fmt.Sprintf("[PUT /userSession/prefs][%d] updateUserPreferencesNotFound  %+v", 404, o.Payload)
}

func (o *UpdateUserPreferencesNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateUserPreferencesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserPreferencesConflict creates a UpdateUserPreferencesConflict with default headers values
func NewUpdateUserPreferencesConflict() *UpdateUserPreferencesConflict {
	return &UpdateUserPreferencesConflict{}
}

/*UpdateUserPreferencesConflict handles this case with default header values.

Conflict
*/
type UpdateUserPreferencesConflict struct {
	Payload *models.APIResult
}

func (o *UpdateUserPreferencesConflict) Error() string {
	return fmt.Sprintf("[PUT /userSession/prefs][%d] updateUserPreferencesConflict  %+v", 409, o.Payload)
}

func (o *UpdateUserPreferencesConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateUserPreferencesConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserPreferencesInternalServerError creates a UpdateUserPreferencesInternalServerError with default headers values
func NewUpdateUserPreferencesInternalServerError() *UpdateUserPreferencesInternalServerError {
	return &UpdateUserPreferencesInternalServerError{}
}

/*UpdateUserPreferencesInternalServerError handles this case with default header values.

Internal Server Error
*/
type UpdateUserPreferencesInternalServerError struct {
	Payload *models.APIResult
}

func (o *UpdateUserPreferencesInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /userSession/prefs][%d] updateUserPreferencesInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateUserPreferencesInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *UpdateUserPreferencesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
