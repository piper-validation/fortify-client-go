// Code generated by go-swagger; DO NOT EDIT.

package user_session_state_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListUserSessionStateReader is a Reader for the ListUserSessionState structure.
type ListUserSessionStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListUserSessionStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListUserSessionStateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListUserSessionStateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListUserSessionStateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListUserSessionStateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListUserSessionStateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListUserSessionStateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListUserSessionStateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListUserSessionStateOK creates a ListUserSessionStateOK with default headers values
func NewListUserSessionStateOK() *ListUserSessionStateOK {
	return &ListUserSessionStateOK{}
}

/*ListUserSessionStateOK handles this case with default header values.

OK
*/
type ListUserSessionStateOK struct {
	Payload *models.APIResultListUserSessionState
}

func (o *ListUserSessionStateOK) Error() string {
	return fmt.Sprintf("[GET /userSession/state][%d] listUserSessionStateOK  %+v", 200, o.Payload)
}

func (o *ListUserSessionStateOK) GetPayload() *models.APIResultListUserSessionState {
	return o.Payload
}

func (o *ListUserSessionStateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListUserSessionState)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserSessionStateBadRequest creates a ListUserSessionStateBadRequest with default headers values
func NewListUserSessionStateBadRequest() *ListUserSessionStateBadRequest {
	return &ListUserSessionStateBadRequest{}
}

/*ListUserSessionStateBadRequest handles this case with default header values.

Bad Request
*/
type ListUserSessionStateBadRequest struct {
	Payload *models.APIResult
}

func (o *ListUserSessionStateBadRequest) Error() string {
	return fmt.Sprintf("[GET /userSession/state][%d] listUserSessionStateBadRequest  %+v", 400, o.Payload)
}

func (o *ListUserSessionStateBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListUserSessionStateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserSessionStateUnauthorized creates a ListUserSessionStateUnauthorized with default headers values
func NewListUserSessionStateUnauthorized() *ListUserSessionStateUnauthorized {
	return &ListUserSessionStateUnauthorized{}
}

/*ListUserSessionStateUnauthorized handles this case with default header values.

Unauthorized
*/
type ListUserSessionStateUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListUserSessionStateUnauthorized) Error() string {
	return fmt.Sprintf("[GET /userSession/state][%d] listUserSessionStateUnauthorized  %+v", 401, o.Payload)
}

func (o *ListUserSessionStateUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListUserSessionStateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserSessionStateForbidden creates a ListUserSessionStateForbidden with default headers values
func NewListUserSessionStateForbidden() *ListUserSessionStateForbidden {
	return &ListUserSessionStateForbidden{}
}

/*ListUserSessionStateForbidden handles this case with default header values.

Forbidden
*/
type ListUserSessionStateForbidden struct {
	Payload *models.APIResult
}

func (o *ListUserSessionStateForbidden) Error() string {
	return fmt.Sprintf("[GET /userSession/state][%d] listUserSessionStateForbidden  %+v", 403, o.Payload)
}

func (o *ListUserSessionStateForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListUserSessionStateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserSessionStateNotFound creates a ListUserSessionStateNotFound with default headers values
func NewListUserSessionStateNotFound() *ListUserSessionStateNotFound {
	return &ListUserSessionStateNotFound{}
}

/*ListUserSessionStateNotFound handles this case with default header values.

Not Found
*/
type ListUserSessionStateNotFound struct {
	Payload *models.APIResult
}

func (o *ListUserSessionStateNotFound) Error() string {
	return fmt.Sprintf("[GET /userSession/state][%d] listUserSessionStateNotFound  %+v", 404, o.Payload)
}

func (o *ListUserSessionStateNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListUserSessionStateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserSessionStateConflict creates a ListUserSessionStateConflict with default headers values
func NewListUserSessionStateConflict() *ListUserSessionStateConflict {
	return &ListUserSessionStateConflict{}
}

/*ListUserSessionStateConflict handles this case with default header values.

Conflict
*/
type ListUserSessionStateConflict struct {
	Payload *models.APIResult
}

func (o *ListUserSessionStateConflict) Error() string {
	return fmt.Sprintf("[GET /userSession/state][%d] listUserSessionStateConflict  %+v", 409, o.Payload)
}

func (o *ListUserSessionStateConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListUserSessionStateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserSessionStateInternalServerError creates a ListUserSessionStateInternalServerError with default headers values
func NewListUserSessionStateInternalServerError() *ListUserSessionStateInternalServerError {
	return &ListUserSessionStateInternalServerError{}
}

/*ListUserSessionStateInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListUserSessionStateInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListUserSessionStateInternalServerError) Error() string {
	return fmt.Sprintf("[GET /userSession/state][%d] listUserSessionStateInternalServerError  %+v", 500, o.Payload)
}

func (o *ListUserSessionStateInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListUserSessionStateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
