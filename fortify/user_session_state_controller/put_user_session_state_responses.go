// Code generated by go-swagger; DO NOT EDIT.

package user_session_state_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// PutUserSessionStateReader is a Reader for the PutUserSessionState structure.
type PutUserSessionStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutUserSessionStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutUserSessionStateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutUserSessionStateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPutUserSessionStateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutUserSessionStateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutUserSessionStateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutUserSessionStateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutUserSessionStateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutUserSessionStateOK creates a PutUserSessionStateOK with default headers values
func NewPutUserSessionStateOK() *PutUserSessionStateOK {
	return &PutUserSessionStateOK{}
}

/*PutUserSessionStateOK handles this case with default header values.

OK
*/
type PutUserSessionStateOK struct {
	Payload *models.APIResultListUserSessionState
}

func (o *PutUserSessionStateOK) Error() string {
	return fmt.Sprintf("[PUT /userSession/state][%d] putUserSessionStateOK  %+v", 200, o.Payload)
}

func (o *PutUserSessionStateOK) GetPayload() *models.APIResultListUserSessionState {
	return o.Payload
}

func (o *PutUserSessionStateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListUserSessionState)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserSessionStateBadRequest creates a PutUserSessionStateBadRequest with default headers values
func NewPutUserSessionStateBadRequest() *PutUserSessionStateBadRequest {
	return &PutUserSessionStateBadRequest{}
}

/*PutUserSessionStateBadRequest handles this case with default header values.

Bad Request
*/
type PutUserSessionStateBadRequest struct {
	Payload *models.APIResult
}

func (o *PutUserSessionStateBadRequest) Error() string {
	return fmt.Sprintf("[PUT /userSession/state][%d] putUserSessionStateBadRequest  %+v", 400, o.Payload)
}

func (o *PutUserSessionStateBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *PutUserSessionStateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserSessionStateUnauthorized creates a PutUserSessionStateUnauthorized with default headers values
func NewPutUserSessionStateUnauthorized() *PutUserSessionStateUnauthorized {
	return &PutUserSessionStateUnauthorized{}
}

/*PutUserSessionStateUnauthorized handles this case with default header values.

Unauthorized
*/
type PutUserSessionStateUnauthorized struct {
	Payload *models.APIResult
}

func (o *PutUserSessionStateUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /userSession/state][%d] putUserSessionStateUnauthorized  %+v", 401, o.Payload)
}

func (o *PutUserSessionStateUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *PutUserSessionStateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserSessionStateForbidden creates a PutUserSessionStateForbidden with default headers values
func NewPutUserSessionStateForbidden() *PutUserSessionStateForbidden {
	return &PutUserSessionStateForbidden{}
}

/*PutUserSessionStateForbidden handles this case with default header values.

Forbidden
*/
type PutUserSessionStateForbidden struct {
	Payload *models.APIResult
}

func (o *PutUserSessionStateForbidden) Error() string {
	return fmt.Sprintf("[PUT /userSession/state][%d] putUserSessionStateForbidden  %+v", 403, o.Payload)
}

func (o *PutUserSessionStateForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *PutUserSessionStateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserSessionStateNotFound creates a PutUserSessionStateNotFound with default headers values
func NewPutUserSessionStateNotFound() *PutUserSessionStateNotFound {
	return &PutUserSessionStateNotFound{}
}

/*PutUserSessionStateNotFound handles this case with default header values.

Not Found
*/
type PutUserSessionStateNotFound struct {
	Payload *models.APIResult
}

func (o *PutUserSessionStateNotFound) Error() string {
	return fmt.Sprintf("[PUT /userSession/state][%d] putUserSessionStateNotFound  %+v", 404, o.Payload)
}

func (o *PutUserSessionStateNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *PutUserSessionStateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserSessionStateConflict creates a PutUserSessionStateConflict with default headers values
func NewPutUserSessionStateConflict() *PutUserSessionStateConflict {
	return &PutUserSessionStateConflict{}
}

/*PutUserSessionStateConflict handles this case with default header values.

Conflict
*/
type PutUserSessionStateConflict struct {
	Payload *models.APIResult
}

func (o *PutUserSessionStateConflict) Error() string {
	return fmt.Sprintf("[PUT /userSession/state][%d] putUserSessionStateConflict  %+v", 409, o.Payload)
}

func (o *PutUserSessionStateConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *PutUserSessionStateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserSessionStateInternalServerError creates a PutUserSessionStateInternalServerError with default headers values
func NewPutUserSessionStateInternalServerError() *PutUserSessionStateInternalServerError {
	return &PutUserSessionStateInternalServerError{}
}

/*PutUserSessionStateInternalServerError handles this case with default header values.

Internal Server Error
*/
type PutUserSessionStateInternalServerError struct {
	Payload *models.APIResult
}

func (o *PutUserSessionStateInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /userSession/state][%d] putUserSessionStateInternalServerError  %+v", 500, o.Payload)
}

func (o *PutUserSessionStateInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *PutUserSessionStateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
