// Code generated by go-swagger; DO NOT EDIT.

package validate_equation_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// NewDoValidateEquationParams creates a new DoValidateEquationParams object
// with the default values initialized.
func NewDoValidateEquationParams() *DoValidateEquationParams {
	var ()
	return &DoValidateEquationParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDoValidateEquationParamsWithTimeout creates a new DoValidateEquationParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDoValidateEquationParamsWithTimeout(timeout time.Duration) *DoValidateEquationParams {
	var ()
	return &DoValidateEquationParams{

		timeout: timeout,
	}
}

// NewDoValidateEquationParamsWithContext creates a new DoValidateEquationParams object
// with the default values initialized, and the ability to set a context for a request
func NewDoValidateEquationParamsWithContext(ctx context.Context) *DoValidateEquationParams {
	var ()
	return &DoValidateEquationParams{

		Context: ctx,
	}
}

// NewDoValidateEquationParamsWithHTTPClient creates a new DoValidateEquationParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDoValidateEquationParamsWithHTTPClient(client *http.Client) *DoValidateEquationParams {
	var ()
	return &DoValidateEquationParams{
		HTTPClient: client,
	}
}

/*DoValidateEquationParams contains all the parameters to send to the API endpoint
for the do validate equation operation typically these are written to a http.Request
*/
type DoValidateEquationParams struct {

	/*Request
	  request

	*/
	Request *models.ValidationRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the do validate equation params
func (o *DoValidateEquationParams) WithTimeout(timeout time.Duration) *DoValidateEquationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the do validate equation params
func (o *DoValidateEquationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the do validate equation params
func (o *DoValidateEquationParams) WithContext(ctx context.Context) *DoValidateEquationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the do validate equation params
func (o *DoValidateEquationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the do validate equation params
func (o *DoValidateEquationParams) WithHTTPClient(client *http.Client) *DoValidateEquationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the do validate equation params
func (o *DoValidateEquationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRequest adds the request to the do validate equation params
func (o *DoValidateEquationParams) WithRequest(request *models.ValidationRequest) *DoValidateEquationParams {
	o.SetRequest(request)
	return o
}

// SetRequest adds the request to the do validate equation params
func (o *DoValidateEquationParams) SetRequest(request *models.ValidationRequest) {
	o.Request = request
}

// WriteToRequest writes these params to a swagger request
func (o *DoValidateEquationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Request != nil {
		if err := r.SetBodyParam(o.Request); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
