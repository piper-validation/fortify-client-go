// Code generated by go-swagger; DO NOT EDIT.

package variable_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// DeleteVariableReader is a Reader for the DeleteVariable structure.
type DeleteVariableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteVariableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteVariableOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteVariableBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteVariableUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteVariableForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteVariableNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteVariableConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteVariableInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteVariableOK creates a DeleteVariableOK with default headers values
func NewDeleteVariableOK() *DeleteVariableOK {
	return &DeleteVariableOK{}
}

/*DeleteVariableOK handles this case with default header values.

OK
*/
type DeleteVariableOK struct {
	Payload *models.APIResultVoid
}

func (o *DeleteVariableOK) Error() string {
	return fmt.Sprintf("[DELETE /variables/{id}][%d] deleteVariableOK  %+v", 200, o.Payload)
}

func (o *DeleteVariableOK) GetPayload() *models.APIResultVoid {
	return o.Payload
}

func (o *DeleteVariableOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultVoid)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVariableBadRequest creates a DeleteVariableBadRequest with default headers values
func NewDeleteVariableBadRequest() *DeleteVariableBadRequest {
	return &DeleteVariableBadRequest{}
}

/*DeleteVariableBadRequest handles this case with default header values.

Bad Request
*/
type DeleteVariableBadRequest struct {
	Payload *models.APIResult
}

func (o *DeleteVariableBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /variables/{id}][%d] deleteVariableBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteVariableBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteVariableBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVariableUnauthorized creates a DeleteVariableUnauthorized with default headers values
func NewDeleteVariableUnauthorized() *DeleteVariableUnauthorized {
	return &DeleteVariableUnauthorized{}
}

/*DeleteVariableUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteVariableUnauthorized struct {
	Payload *models.APIResult
}

func (o *DeleteVariableUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /variables/{id}][%d] deleteVariableUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteVariableUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteVariableUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVariableForbidden creates a DeleteVariableForbidden with default headers values
func NewDeleteVariableForbidden() *DeleteVariableForbidden {
	return &DeleteVariableForbidden{}
}

/*DeleteVariableForbidden handles this case with default header values.

Forbidden
*/
type DeleteVariableForbidden struct {
	Payload *models.APIResult
}

func (o *DeleteVariableForbidden) Error() string {
	return fmt.Sprintf("[DELETE /variables/{id}][%d] deleteVariableForbidden  %+v", 403, o.Payload)
}

func (o *DeleteVariableForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteVariableForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVariableNotFound creates a DeleteVariableNotFound with default headers values
func NewDeleteVariableNotFound() *DeleteVariableNotFound {
	return &DeleteVariableNotFound{}
}

/*DeleteVariableNotFound handles this case with default header values.

Not Found
*/
type DeleteVariableNotFound struct {
	Payload *models.APIResult
}

func (o *DeleteVariableNotFound) Error() string {
	return fmt.Sprintf("[DELETE /variables/{id}][%d] deleteVariableNotFound  %+v", 404, o.Payload)
}

func (o *DeleteVariableNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteVariableNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVariableConflict creates a DeleteVariableConflict with default headers values
func NewDeleteVariableConflict() *DeleteVariableConflict {
	return &DeleteVariableConflict{}
}

/*DeleteVariableConflict handles this case with default header values.

Conflict
*/
type DeleteVariableConflict struct {
	Payload *models.APIResult
}

func (o *DeleteVariableConflict) Error() string {
	return fmt.Sprintf("[DELETE /variables/{id}][%d] deleteVariableConflict  %+v", 409, o.Payload)
}

func (o *DeleteVariableConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteVariableConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVariableInternalServerError creates a DeleteVariableInternalServerError with default headers values
func NewDeleteVariableInternalServerError() *DeleteVariableInternalServerError {
	return &DeleteVariableInternalServerError{}
}

/*DeleteVariableInternalServerError handles this case with default header values.

Internal Server Error
*/
type DeleteVariableInternalServerError struct {
	Payload *models.APIResult
}

func (o *DeleteVariableInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /variables/{id}][%d] deleteVariableInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteVariableInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *DeleteVariableInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
