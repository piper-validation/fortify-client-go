// Code generated by go-swagger; DO NOT EDIT.

package variable_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/piper-validation/fortify-client-go/models"
)

// ListVariableReader is a Reader for the ListVariable structure.
type ListVariableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListVariableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListVariableOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListVariableBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListVariableUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListVariableForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListVariableNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListVariableConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListVariableInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListVariableOK creates a ListVariableOK with default headers values
func NewListVariableOK() *ListVariableOK {
	return &ListVariableOK{}
}

/*ListVariableOK handles this case with default header values.

OK
*/
type ListVariableOK struct {
	Payload *models.APIResultListVariable
}

func (o *ListVariableOK) Error() string {
	return fmt.Sprintf("[GET /variables][%d] listVariableOK  %+v", 200, o.Payload)
}

func (o *ListVariableOK) GetPayload() *models.APIResultListVariable {
	return o.Payload
}

func (o *ListVariableOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResultListVariable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVariableBadRequest creates a ListVariableBadRequest with default headers values
func NewListVariableBadRequest() *ListVariableBadRequest {
	return &ListVariableBadRequest{}
}

/*ListVariableBadRequest handles this case with default header values.

Bad Request
*/
type ListVariableBadRequest struct {
	Payload *models.APIResult
}

func (o *ListVariableBadRequest) Error() string {
	return fmt.Sprintf("[GET /variables][%d] listVariableBadRequest  %+v", 400, o.Payload)
}

func (o *ListVariableBadRequest) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListVariableBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVariableUnauthorized creates a ListVariableUnauthorized with default headers values
func NewListVariableUnauthorized() *ListVariableUnauthorized {
	return &ListVariableUnauthorized{}
}

/*ListVariableUnauthorized handles this case with default header values.

Unauthorized
*/
type ListVariableUnauthorized struct {
	Payload *models.APIResult
}

func (o *ListVariableUnauthorized) Error() string {
	return fmt.Sprintf("[GET /variables][%d] listVariableUnauthorized  %+v", 401, o.Payload)
}

func (o *ListVariableUnauthorized) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListVariableUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVariableForbidden creates a ListVariableForbidden with default headers values
func NewListVariableForbidden() *ListVariableForbidden {
	return &ListVariableForbidden{}
}

/*ListVariableForbidden handles this case with default header values.

Forbidden
*/
type ListVariableForbidden struct {
	Payload *models.APIResult
}

func (o *ListVariableForbidden) Error() string {
	return fmt.Sprintf("[GET /variables][%d] listVariableForbidden  %+v", 403, o.Payload)
}

func (o *ListVariableForbidden) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListVariableForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVariableNotFound creates a ListVariableNotFound with default headers values
func NewListVariableNotFound() *ListVariableNotFound {
	return &ListVariableNotFound{}
}

/*ListVariableNotFound handles this case with default header values.

Not Found
*/
type ListVariableNotFound struct {
	Payload *models.APIResult
}

func (o *ListVariableNotFound) Error() string {
	return fmt.Sprintf("[GET /variables][%d] listVariableNotFound  %+v", 404, o.Payload)
}

func (o *ListVariableNotFound) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListVariableNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVariableConflict creates a ListVariableConflict with default headers values
func NewListVariableConflict() *ListVariableConflict {
	return &ListVariableConflict{}
}

/*ListVariableConflict handles this case with default header values.

Conflict
*/
type ListVariableConflict struct {
	Payload *models.APIResult
}

func (o *ListVariableConflict) Error() string {
	return fmt.Sprintf("[GET /variables][%d] listVariableConflict  %+v", 409, o.Payload)
}

func (o *ListVariableConflict) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListVariableConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVariableInternalServerError creates a ListVariableInternalServerError with default headers values
func NewListVariableInternalServerError() *ListVariableInternalServerError {
	return &ListVariableInternalServerError{}
}

/*ListVariableInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListVariableInternalServerError struct {
	Payload *models.APIResult
}

func (o *ListVariableInternalServerError) Error() string {
	return fmt.Sprintf("[GET /variables][%d] listVariableInternalServerError  %+v", 500, o.Payload)
}

func (o *ListVariableInternalServerError) GetPayload() *models.APIResult {
	return o.Payload
}

func (o *ListVariableInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
