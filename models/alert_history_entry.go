// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AlertHistoryEntry Alert history entry contains information about firede alert, like trigger date, user name for which alert was triggered, information abotu alert definition.
// swagger:model Alert History Entry
type AlertHistoryEntry struct {

	// active
	Active bool `json:"active,omitempty"`

	// alert custom message
	AlertCustomMessage string `json:"alertCustomMessage,omitempty"`

	// alert definition name
	AlertDefinitionName string `json:"alertDefinitionName,omitempty"`

	// alert message
	AlertMessage string `json:"alertMessage,omitempty"`

	// alert history id
	// Read Only: true
	ID int64 `json:"id,omitempty"`

	// monitored entity type
	MonitoredEntityType string `json:"monitoredEntityType,omitempty"`

	// project and version label
	ProjectAndVersionLabel string `json:"projectAndVersionLabel,omitempty"`

	// project version Id
	ProjectVersionID int64 `json:"projectVersionId,omitempty"`

	// triggered date
	// Format: date-time
	TriggeredDate strfmt.DateTime `json:"triggeredDate,omitempty"`

	// user name
	UserName string `json:"userName,omitempty"`
}

// Validate validates this alert history entry
func (m *AlertHistoryEntry) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTriggeredDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AlertHistoryEntry) validateTriggeredDate(formats strfmt.Registry) error {

	if swag.IsZero(m.TriggeredDate) { // not required
		return nil
	}

	if err := validate.FormatOf("triggeredDate", "body", "date-time", m.TriggeredDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AlertHistoryEntry) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AlertHistoryEntry) UnmarshalBinary(b []byte) error {
	var res AlertHistoryEntry
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
