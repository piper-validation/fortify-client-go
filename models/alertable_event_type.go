// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AlertableEventType alertable event type
// swagger:model AlertableEventType
type AlertableEventType struct {

	// category
	// Enum: [USER_ADMINISTRATION PV_ADMINISTRATION PV_ISSUES REPORT GENERAL_ADMINISTRATION GOVERNANCE RUNTIME_HOST RUNTIME_FEDERATION RUNTIME_CONFIGURATION RUNTIME_APP_ADMINISTRATION FULLTEXT CLOUDSCAN]
	Category string `json:"category,omitempty"`

	// display name
	DisplayName string `json:"displayName,omitempty"`

	// event type constant
	EventTypeConstant string `json:"eventTypeConstant,omitempty"`

	// scope
	// Enum: [PROJECT_VERSION RUNTIME_APP NONE ALL]
	Scope string `json:"scope,omitempty"`
}

// Validate validates this alertable event type
func (m *AlertableEventType) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCategory(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateScope(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var alertableEventTypeTypeCategoryPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["USER_ADMINISTRATION","PV_ADMINISTRATION","PV_ISSUES","REPORT","GENERAL_ADMINISTRATION","GOVERNANCE","RUNTIME_HOST","RUNTIME_FEDERATION","RUNTIME_CONFIGURATION","RUNTIME_APP_ADMINISTRATION","FULLTEXT","CLOUDSCAN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		alertableEventTypeTypeCategoryPropEnum = append(alertableEventTypeTypeCategoryPropEnum, v)
	}
}

const (

	// AlertableEventTypeCategoryUSERADMINISTRATION captures enum value "USER_ADMINISTRATION"
	AlertableEventTypeCategoryUSERADMINISTRATION string = "USER_ADMINISTRATION"

	// AlertableEventTypeCategoryPVADMINISTRATION captures enum value "PV_ADMINISTRATION"
	AlertableEventTypeCategoryPVADMINISTRATION string = "PV_ADMINISTRATION"

	// AlertableEventTypeCategoryPVISSUES captures enum value "PV_ISSUES"
	AlertableEventTypeCategoryPVISSUES string = "PV_ISSUES"

	// AlertableEventTypeCategoryREPORT captures enum value "REPORT"
	AlertableEventTypeCategoryREPORT string = "REPORT"

	// AlertableEventTypeCategoryGENERALADMINISTRATION captures enum value "GENERAL_ADMINISTRATION"
	AlertableEventTypeCategoryGENERALADMINISTRATION string = "GENERAL_ADMINISTRATION"

	// AlertableEventTypeCategoryGOVERNANCE captures enum value "GOVERNANCE"
	AlertableEventTypeCategoryGOVERNANCE string = "GOVERNANCE"

	// AlertableEventTypeCategoryRUNTIMEHOST captures enum value "RUNTIME_HOST"
	AlertableEventTypeCategoryRUNTIMEHOST string = "RUNTIME_HOST"

	// AlertableEventTypeCategoryRUNTIMEFEDERATION captures enum value "RUNTIME_FEDERATION"
	AlertableEventTypeCategoryRUNTIMEFEDERATION string = "RUNTIME_FEDERATION"

	// AlertableEventTypeCategoryRUNTIMECONFIGURATION captures enum value "RUNTIME_CONFIGURATION"
	AlertableEventTypeCategoryRUNTIMECONFIGURATION string = "RUNTIME_CONFIGURATION"

	// AlertableEventTypeCategoryRUNTIMEAPPADMINISTRATION captures enum value "RUNTIME_APP_ADMINISTRATION"
	AlertableEventTypeCategoryRUNTIMEAPPADMINISTRATION string = "RUNTIME_APP_ADMINISTRATION"

	// AlertableEventTypeCategoryFULLTEXT captures enum value "FULLTEXT"
	AlertableEventTypeCategoryFULLTEXT string = "FULLTEXT"

	// AlertableEventTypeCategoryCLOUDSCAN captures enum value "CLOUDSCAN"
	AlertableEventTypeCategoryCLOUDSCAN string = "CLOUDSCAN"
)

// prop value enum
func (m *AlertableEventType) validateCategoryEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, alertableEventTypeTypeCategoryPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *AlertableEventType) validateCategory(formats strfmt.Registry) error {

	if swag.IsZero(m.Category) { // not required
		return nil
	}

	// value enum
	if err := m.validateCategoryEnum("category", "body", m.Category); err != nil {
		return err
	}

	return nil
}

var alertableEventTypeTypeScopePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PROJECT_VERSION","RUNTIME_APP","NONE","ALL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		alertableEventTypeTypeScopePropEnum = append(alertableEventTypeTypeScopePropEnum, v)
	}
}

const (

	// AlertableEventTypeScopePROJECTVERSION captures enum value "PROJECT_VERSION"
	AlertableEventTypeScopePROJECTVERSION string = "PROJECT_VERSION"

	// AlertableEventTypeScopeRUNTIMEAPP captures enum value "RUNTIME_APP"
	AlertableEventTypeScopeRUNTIMEAPP string = "RUNTIME_APP"

	// AlertableEventTypeScopeNONE captures enum value "NONE"
	AlertableEventTypeScopeNONE string = "NONE"

	// AlertableEventTypeScopeALL captures enum value "ALL"
	AlertableEventTypeScopeALL string = "ALL"
)

// prop value enum
func (m *AlertableEventType) validateScopeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, alertableEventTypeTypeScopePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *AlertableEventType) validateScope(formats strfmt.Registry) error {

	if swag.IsZero(m.Scope) { // not required
		return nil
	}

	// value enum
	if err := m.validateScopeEnum("scope", "body", m.Scope); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AlertableEventType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AlertableEventType) UnmarshalBinary(b []byte) error {
	var res AlertableEventType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
