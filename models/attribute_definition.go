// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AttributeDefinition Attribute Definition DTO object.
// swagger:model Attribute Definition
type AttributeDefinition struct {

	// Application Entity Type
	// Required: true
	// Enum: [PROJECT_VERSION RUNTIME_APP NONE ALL]
	AppEntityType *string `json:"appEntityType"`

	// Attribute Definition Category
	// Required: true
	// Enum: [TECHNICAL BUSINESS DYNAMIC_SCAN_REQUEST ORGANIZATION]
	Category *string `json:"category"`

	// description
	Description string `json:"description,omitempty"`

	// Unique string identifier for this Attribute Definition
	// Required: true
	GUID *string `json:"guid"`

	// Set to true if this Attribute Definition should be the default
	// Required: true
	HasDefault *bool `json:"hasDefault"`

	// Set to true if this Attribute Definition is hidden
	Hidden bool `json:"hidden,omitempty"`

	// ID required when referencing an existing Attribute Definition
	// Read Only: true
	ID int64 `json:"id,omitempty"`

	// Can Attribute Definition be deleted
	// Read Only: true
	IsDeletable *bool `json:"isDeletable,omitempty"`

	// name
	// Required: true
	Name *string `json:"name"`

	// object version
	ObjectVersion int32 `json:"objectVersion,omitempty"`

	// List of options (i.e. values) associated with this Attribute Definition
	Options []*AttributeOption `json:"options"`

	// publish version
	PublishVersion int32 `json:"publishVersion,omitempty"`

	// Set to true if this Attribute Definition is required
	// Required: true
	Required *bool `json:"required"`

	// sequence number
	SequenceNumber int64 `json:"sequenceNumber,omitempty"`

	// System Usage Type
	// Required: true
	// Enum: [HP_DEFINED_DELETABLE HP_DEFINED_NON_DELETABLE USER_DEFINED_DELETABLE USER_DEFINED_NON_DELETABLE]
	SystemUsage *string `json:"systemUsage"`

	// Attribute Definition Type
	// Required: true
	// Enum: [TEXT SINGLE MULTIPLE LONG_TEXT SENSITIVE_TEXT BOOLEAN INTEGER DATE FILE]
	Type *string `json:"type"`
}

// Validate validates this attribute definition
func (m *AttributeDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAppEntityType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCategory(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGUID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateHasDefault(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOptions(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRequired(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSystemUsage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var attributeDefinitionTypeAppEntityTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PROJECT_VERSION","RUNTIME_APP","NONE","ALL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		attributeDefinitionTypeAppEntityTypePropEnum = append(attributeDefinitionTypeAppEntityTypePropEnum, v)
	}
}

const (

	// AttributeDefinitionAppEntityTypePROJECTVERSION captures enum value "PROJECT_VERSION"
	AttributeDefinitionAppEntityTypePROJECTVERSION string = "PROJECT_VERSION"

	// AttributeDefinitionAppEntityTypeRUNTIMEAPP captures enum value "RUNTIME_APP"
	AttributeDefinitionAppEntityTypeRUNTIMEAPP string = "RUNTIME_APP"

	// AttributeDefinitionAppEntityTypeNONE captures enum value "NONE"
	AttributeDefinitionAppEntityTypeNONE string = "NONE"

	// AttributeDefinitionAppEntityTypeALL captures enum value "ALL"
	AttributeDefinitionAppEntityTypeALL string = "ALL"
)

// prop value enum
func (m *AttributeDefinition) validateAppEntityTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, attributeDefinitionTypeAppEntityTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *AttributeDefinition) validateAppEntityType(formats strfmt.Registry) error {

	if err := validate.Required("appEntityType", "body", m.AppEntityType); err != nil {
		return err
	}

	// value enum
	if err := m.validateAppEntityTypeEnum("appEntityType", "body", *m.AppEntityType); err != nil {
		return err
	}

	return nil
}

var attributeDefinitionTypeCategoryPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["TECHNICAL","BUSINESS","DYNAMIC_SCAN_REQUEST","ORGANIZATION"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		attributeDefinitionTypeCategoryPropEnum = append(attributeDefinitionTypeCategoryPropEnum, v)
	}
}

const (

	// AttributeDefinitionCategoryTECHNICAL captures enum value "TECHNICAL"
	AttributeDefinitionCategoryTECHNICAL string = "TECHNICAL"

	// AttributeDefinitionCategoryBUSINESS captures enum value "BUSINESS"
	AttributeDefinitionCategoryBUSINESS string = "BUSINESS"

	// AttributeDefinitionCategoryDYNAMICSCANREQUEST captures enum value "DYNAMIC_SCAN_REQUEST"
	AttributeDefinitionCategoryDYNAMICSCANREQUEST string = "DYNAMIC_SCAN_REQUEST"

	// AttributeDefinitionCategoryORGANIZATION captures enum value "ORGANIZATION"
	AttributeDefinitionCategoryORGANIZATION string = "ORGANIZATION"
)

// prop value enum
func (m *AttributeDefinition) validateCategoryEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, attributeDefinitionTypeCategoryPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *AttributeDefinition) validateCategory(formats strfmt.Registry) error {

	if err := validate.Required("category", "body", m.Category); err != nil {
		return err
	}

	// value enum
	if err := m.validateCategoryEnum("category", "body", *m.Category); err != nil {
		return err
	}

	return nil
}

func (m *AttributeDefinition) validateGUID(formats strfmt.Registry) error {

	if err := validate.Required("guid", "body", m.GUID); err != nil {
		return err
	}

	return nil
}

func (m *AttributeDefinition) validateHasDefault(formats strfmt.Registry) error {

	if err := validate.Required("hasDefault", "body", m.HasDefault); err != nil {
		return err
	}

	return nil
}

func (m *AttributeDefinition) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *AttributeDefinition) validateOptions(formats strfmt.Registry) error {

	if swag.IsZero(m.Options) { // not required
		return nil
	}

	for i := 0; i < len(m.Options); i++ {
		if swag.IsZero(m.Options[i]) { // not required
			continue
		}

		if m.Options[i] != nil {
			if err := m.Options[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("options" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AttributeDefinition) validateRequired(formats strfmt.Registry) error {

	if err := validate.Required("required", "body", m.Required); err != nil {
		return err
	}

	return nil
}

var attributeDefinitionTypeSystemUsagePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["HP_DEFINED_DELETABLE","HP_DEFINED_NON_DELETABLE","USER_DEFINED_DELETABLE","USER_DEFINED_NON_DELETABLE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		attributeDefinitionTypeSystemUsagePropEnum = append(attributeDefinitionTypeSystemUsagePropEnum, v)
	}
}

const (

	// AttributeDefinitionSystemUsageHPDEFINEDDELETABLE captures enum value "HP_DEFINED_DELETABLE"
	AttributeDefinitionSystemUsageHPDEFINEDDELETABLE string = "HP_DEFINED_DELETABLE"

	// AttributeDefinitionSystemUsageHPDEFINEDNONDELETABLE captures enum value "HP_DEFINED_NON_DELETABLE"
	AttributeDefinitionSystemUsageHPDEFINEDNONDELETABLE string = "HP_DEFINED_NON_DELETABLE"

	// AttributeDefinitionSystemUsageUSERDEFINEDDELETABLE captures enum value "USER_DEFINED_DELETABLE"
	AttributeDefinitionSystemUsageUSERDEFINEDDELETABLE string = "USER_DEFINED_DELETABLE"

	// AttributeDefinitionSystemUsageUSERDEFINEDNONDELETABLE captures enum value "USER_DEFINED_NON_DELETABLE"
	AttributeDefinitionSystemUsageUSERDEFINEDNONDELETABLE string = "USER_DEFINED_NON_DELETABLE"
)

// prop value enum
func (m *AttributeDefinition) validateSystemUsageEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, attributeDefinitionTypeSystemUsagePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *AttributeDefinition) validateSystemUsage(formats strfmt.Registry) error {

	if err := validate.Required("systemUsage", "body", m.SystemUsage); err != nil {
		return err
	}

	// value enum
	if err := m.validateSystemUsageEnum("systemUsage", "body", *m.SystemUsage); err != nil {
		return err
	}

	return nil
}

var attributeDefinitionTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["TEXT","SINGLE","MULTIPLE","LONG_TEXT","SENSITIVE_TEXT","BOOLEAN","INTEGER","DATE","FILE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		attributeDefinitionTypeTypePropEnum = append(attributeDefinitionTypeTypePropEnum, v)
	}
}

const (

	// AttributeDefinitionTypeTEXT captures enum value "TEXT"
	AttributeDefinitionTypeTEXT string = "TEXT"

	// AttributeDefinitionTypeSINGLE captures enum value "SINGLE"
	AttributeDefinitionTypeSINGLE string = "SINGLE"

	// AttributeDefinitionTypeMULTIPLE captures enum value "MULTIPLE"
	AttributeDefinitionTypeMULTIPLE string = "MULTIPLE"

	// AttributeDefinitionTypeLONGTEXT captures enum value "LONG_TEXT"
	AttributeDefinitionTypeLONGTEXT string = "LONG_TEXT"

	// AttributeDefinitionTypeSENSITIVETEXT captures enum value "SENSITIVE_TEXT"
	AttributeDefinitionTypeSENSITIVETEXT string = "SENSITIVE_TEXT"

	// AttributeDefinitionTypeBOOLEAN captures enum value "BOOLEAN"
	AttributeDefinitionTypeBOOLEAN string = "BOOLEAN"

	// AttributeDefinitionTypeINTEGER captures enum value "INTEGER"
	AttributeDefinitionTypeINTEGER string = "INTEGER"

	// AttributeDefinitionTypeDATE captures enum value "DATE"
	AttributeDefinitionTypeDATE string = "DATE"

	// AttributeDefinitionTypeFILE captures enum value "FILE"
	AttributeDefinitionTypeFILE string = "FILE"
)

// prop value enum
func (m *AttributeDefinition) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, attributeDefinitionTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *AttributeDefinition) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AttributeDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AttributeDefinition) UnmarshalBinary(b []byte) error {
	var res AttributeDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
