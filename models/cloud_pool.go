// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CloudPool Cloudscan worker pool
// swagger:model CloudPool
type CloudPool struct {

	// child of global pool
	ChildOfGlobalPool bool `json:"childOfGlobalPool,omitempty"`

	// Cloudscan pool description
	Description string `json:"description,omitempty"`

	// is deletable
	// Read Only: true
	IsDeletable *bool `json:"isDeletable,omitempty"`

	// Cloudscan pool name
	// Required: true
	Name *string `json:"name"`

	// Cloudscan pool path
	// Read Only: true
	Path string `json:"path,omitempty"`

	// stats
	// Read Only: true
	Stats *CloudPoolStats `json:"stats,omitempty"`

	// Cloudscan pool UUID
	// Read Only: true
	UUID string `json:"uuid,omitempty"`
}

// Validate validates this cloud pool
func (m *CloudPool) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStats(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CloudPool) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *CloudPool) validateStats(formats strfmt.Registry) error {

	if swag.IsZero(m.Stats) { // not required
		return nil
	}

	if m.Stats != nil {
		if err := m.Stats.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("stats")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CloudPool) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CloudPool) UnmarshalBinary(b []byte) error {
	var res CloudPool
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
