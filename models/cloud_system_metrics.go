// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CloudSystemMetrics Cloudscan system metrics
// swagger:model CloudSystemMetrics
type CloudSystemMetrics struct {

	// Free disk space in controller's job directory [bytes]
	// Required: true
	// Read Only: true
	ControllerDiskFree int64 `json:"controllerDiskFree"`

	// Disk space used by files in controller's job directory [bytes]
	// Required: true
	// Read Only: true
	ControllerDiskUsed int64 `json:"controllerDiskUsed"`

	// controller start time
	// Required: true
	// Read Only: true
	// Format: date-time
	ControllerStartTime Iso8601MilliDateTime `json:"controllerStartTime"`
}

// Validate validates this cloud system metrics
func (m *CloudSystemMetrics) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateControllerDiskFree(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateControllerDiskUsed(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateControllerStartTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CloudSystemMetrics) validateControllerDiskFree(formats strfmt.Registry) error {

	if err := validate.Required("controllerDiskFree", "body", int64(m.ControllerDiskFree)); err != nil {
		return err
	}

	return nil
}

func (m *CloudSystemMetrics) validateControllerDiskUsed(formats strfmt.Registry) error {

	if err := validate.Required("controllerDiskUsed", "body", int64(m.ControllerDiskUsed)); err != nil {
		return err
	}

	return nil
}

func (m *CloudSystemMetrics) validateControllerStartTime(formats strfmt.Registry) error {

	if err := validate.Required("controllerStartTime", "body", Iso8601MilliDateTime(m.ControllerStartTime)); err != nil {
		return err
	}

	if err := validate.FormatOf("controllerStartTime", "body", "date-time", m.ControllerStartTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CloudSystemMetrics) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CloudSystemMetrics) UnmarshalBinary(b []byte) error {
	var res CloudSystemMetrics
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
