// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CloudSystemPollStatus Cloudscan system poll status
// swagger:model CloudSystemPollStatus
type CloudSystemPollStatus struct {

	// last poll successful
	// Required: true
	// Read Only: true
	LastPollSuccessful bool `json:"lastPollSuccessful"`

	// last poll time
	// Required: true
	// Read Only: true
	// Format: date-time
	LastPollTime Iso8601MilliDateTime `json:"lastPollTime"`

	// last successful poll time
	// Required: true
	// Read Only: true
	// Format: date-time
	LastSuccessfulPollTime Iso8601MilliDateTime `json:"lastSuccessfulPollTime"`
}

// Validate validates this cloud system poll status
func (m *CloudSystemPollStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLastPollSuccessful(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastPollTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastSuccessfulPollTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CloudSystemPollStatus) validateLastPollSuccessful(formats strfmt.Registry) error {

	if err := validate.Required("lastPollSuccessful", "body", bool(m.LastPollSuccessful)); err != nil {
		return err
	}

	return nil
}

func (m *CloudSystemPollStatus) validateLastPollTime(formats strfmt.Registry) error {

	if err := validate.Required("lastPollTime", "body", Iso8601MilliDateTime(m.LastPollTime)); err != nil {
		return err
	}

	if err := validate.FormatOf("lastPollTime", "body", "date-time", m.LastPollTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *CloudSystemPollStatus) validateLastSuccessfulPollTime(formats strfmt.Registry) error {

	if err := validate.Required("lastSuccessfulPollTime", "body", Iso8601MilliDateTime(m.LastSuccessfulPollTime)); err != nil {
		return err
	}

	if err := validate.FormatOf("lastSuccessfulPollTime", "body", "date-time", m.LastSuccessfulPollTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CloudSystemPollStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CloudSystemPollStatus) UnmarshalBinary(b []byte) error {
	var res CloudSystemPollStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
