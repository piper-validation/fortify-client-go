// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DynamicScanRequestParameter Dynamic Scan Request Parameter DTO object
// swagger:model DynamicScanRequestParameter
type DynamicScanRequestParameter struct {

	// The file value document info id for an upload file
	FileValueDocumentInfoID int64 `json:"fileValueDocumentInfoId,omitempty"`

	// The name of an uploaded file
	FileValueName string `json:"fileValueName,omitempty"`

	// The id of the parameter
	ID int64 `json:"id,omitempty"`

	// The objecct version of this parameter
	ObjectVersion int32 `json:"objectVersion,omitempty"`

	// The definition for this parameter
	ParameterDefinition *DynamicScanRequestParameterDefinition `json:"parameterDefinition,omitempty"`

	// The value of the parameter
	Value string `json:"value,omitempty"`

	// The name of the uploaded file
	ValueOptions []*DynamicScanRequestParameterOption `json:"valueOptions"`

	// A list of possible values for this parameter
	Values []*DynamicScanRequestParameterOption `json:"values"`
}

// Validate validates this dynamic scan request parameter
func (m *DynamicScanRequestParameter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateParameterDefinition(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValueOptions(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValues(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DynamicScanRequestParameter) validateParameterDefinition(formats strfmt.Registry) error {

	if swag.IsZero(m.ParameterDefinition) { // not required
		return nil
	}

	if m.ParameterDefinition != nil {
		if err := m.ParameterDefinition.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("parameterDefinition")
			}
			return err
		}
	}

	return nil
}

func (m *DynamicScanRequestParameter) validateValueOptions(formats strfmt.Registry) error {

	if swag.IsZero(m.ValueOptions) { // not required
		return nil
	}

	for i := 0; i < len(m.ValueOptions); i++ {
		if swag.IsZero(m.ValueOptions[i]) { // not required
			continue
		}

		if m.ValueOptions[i] != nil {
			if err := m.ValueOptions[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("valueOptions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *DynamicScanRequestParameter) validateValues(formats strfmt.Registry) error {

	if swag.IsZero(m.Values) { // not required
		return nil
	}

	for i := 0; i < len(m.Values); i++ {
		if swag.IsZero(m.Values[i]) { // not required
			continue
		}

		if m.Values[i] != nil {
			if err := m.Values[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("values" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *DynamicScanRequestParameter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DynamicScanRequestParameter) UnmarshalBinary(b []byte) error {
	var res DynamicScanRequestParameter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
