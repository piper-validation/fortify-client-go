// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InputReportParameter InputReportParameter DTO object
// swagger:model Input Report Parameter
type InputReportParameter struct {

	// identifier
	// Required: true
	Identifier *string `json:"identifier"`

	// name
	// Required: true
	Name *string `json:"name"`

	// Value of this parameter
	// Required: true
	ParamValue interface{} `json:"paramValue"`

	// type
	// Required: true
	// Enum: [SINGLE_PROJECT SINGLE_RUNTIME_APP SINGLE_SSA_PROJECT MULTI_PROJECT MULTI_RUNTIME_APP MULTI_SSA_PROJECT PROJECT_ATTRIBUTE STRING BOOLEAN DATE SINGLE_SELECT_DEFAULT METADEF_GUID]
	Type *string `json:"type"`
}

// Validate validates this input report parameter
func (m *InputReportParameter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIdentifier(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateParamValue(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InputReportParameter) validateIdentifier(formats strfmt.Registry) error {

	if err := validate.Required("identifier", "body", m.Identifier); err != nil {
		return err
	}

	return nil
}

func (m *InputReportParameter) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *InputReportParameter) validateParamValue(formats strfmt.Registry) error {

	if err := validate.Required("paramValue", "body", m.ParamValue); err != nil {
		return err
	}

	return nil
}

var inputReportParameterTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SINGLE_PROJECT","SINGLE_RUNTIME_APP","SINGLE_SSA_PROJECT","MULTI_PROJECT","MULTI_RUNTIME_APP","MULTI_SSA_PROJECT","PROJECT_ATTRIBUTE","STRING","BOOLEAN","DATE","SINGLE_SELECT_DEFAULT","METADEF_GUID"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		inputReportParameterTypeTypePropEnum = append(inputReportParameterTypeTypePropEnum, v)
	}
}

const (

	// InputReportParameterTypeSINGLEPROJECT captures enum value "SINGLE_PROJECT"
	InputReportParameterTypeSINGLEPROJECT string = "SINGLE_PROJECT"

	// InputReportParameterTypeSINGLERUNTIMEAPP captures enum value "SINGLE_RUNTIME_APP"
	InputReportParameterTypeSINGLERUNTIMEAPP string = "SINGLE_RUNTIME_APP"

	// InputReportParameterTypeSINGLESSAPROJECT captures enum value "SINGLE_SSA_PROJECT"
	InputReportParameterTypeSINGLESSAPROJECT string = "SINGLE_SSA_PROJECT"

	// InputReportParameterTypeMULTIPROJECT captures enum value "MULTI_PROJECT"
	InputReportParameterTypeMULTIPROJECT string = "MULTI_PROJECT"

	// InputReportParameterTypeMULTIRUNTIMEAPP captures enum value "MULTI_RUNTIME_APP"
	InputReportParameterTypeMULTIRUNTIMEAPP string = "MULTI_RUNTIME_APP"

	// InputReportParameterTypeMULTISSAPROJECT captures enum value "MULTI_SSA_PROJECT"
	InputReportParameterTypeMULTISSAPROJECT string = "MULTI_SSA_PROJECT"

	// InputReportParameterTypePROJECTATTRIBUTE captures enum value "PROJECT_ATTRIBUTE"
	InputReportParameterTypePROJECTATTRIBUTE string = "PROJECT_ATTRIBUTE"

	// InputReportParameterTypeSTRING captures enum value "STRING"
	InputReportParameterTypeSTRING string = "STRING"

	// InputReportParameterTypeBOOLEAN captures enum value "BOOLEAN"
	InputReportParameterTypeBOOLEAN string = "BOOLEAN"

	// InputReportParameterTypeDATE captures enum value "DATE"
	InputReportParameterTypeDATE string = "DATE"

	// InputReportParameterTypeSINGLESELECTDEFAULT captures enum value "SINGLE_SELECT_DEFAULT"
	InputReportParameterTypeSINGLESELECTDEFAULT string = "SINGLE_SELECT_DEFAULT"

	// InputReportParameterTypeMETADEFGUID captures enum value "METADEF_GUID"
	InputReportParameterTypeMETADEFGUID string = "METADEF_GUID"
)

// prop value enum
func (m *InputReportParameter) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, inputReportParameterTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *InputReportParameter) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InputReportParameter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InputReportParameter) UnmarshalBinary(b []byte) error {
	var res InputReportParameter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
