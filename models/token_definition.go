// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// TokenDefinition Metadata of a Software Security Center token
// swagger:model Token Definition
type TokenDefinition struct {

	// Describes what tokens generated from this token specification can be used for. Note that these capabilities are subordinate to the actual roles/permissions granted to the owner of the token
	// Read Only: true
	CapabilityDescription string `json:"capabilityDescription,omitempty"`

	// Maximum allowable lifetime (in nominal days) of token. At the time of token creation/edit, the exact value for its max expiration is calculated by adding maxDaysToLive * MilliSecondsPerDay to the current datetime
	// Read Only: true
	MaxDaysToLive int32 `json:"maxDaysToLive,omitempty"`

	// Maximum number of api calls that can be made using this token type. A value of -1 denotes unlimited number of calls.
	// Read Only: true
	MaxUsages int32 `json:"maxUsages,omitempty"`

	// Token type
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this token definition
func (m *TokenDefinition) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TokenDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TokenDefinition) UnmarshalBinary(b []byte) error {
	var res TokenDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
