// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UserIssueSearchOptions User specific options that can be used for customizing issue search result.
// swagger:model UserIssueSearchOptions
type UserIssueSearchOptions struct {

	// If 'true', comments are included in issue audit history. Used only by flex UI.
	IncludeCommentsInHistory bool `json:"includeCommentsInHistory,omitempty"`

	// Application version ID the option values belong to. Value is empty for default options that can be applied to any application version user has access to if application version specific options are not defined.
	ProjectVersionID int64 `json:"projectVersionId,omitempty"`

	// If 'true', include hidden issues in search results. If 'false', exclude hidden issues from search results. If no options are set, use application version profile settings to get value of this option.
	ShowHidden bool `json:"showHidden,omitempty"`

	// If 'true', include removed issues in search results. If 'false', exclude removed issues from search results. If no options are set, use application version profile settings to get value of this option.
	ShowRemoved bool `json:"showRemoved,omitempty"`

	// If 'true', only short file names will be displayed in issues list.
	ShowShortFileNames bool `json:"showShortFileNames,omitempty"`

	// If 'true', include suppressed issues in search results. If 'false', exclude suppressed issues from search results. If no options are set, use application version profile settings to get value of this option.
	ShowSuppressed bool `json:"showSuppressed,omitempty"`
}

// Validate validates this user issue search options
func (m *UserIssueSearchOptions) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UserIssueSearchOptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserIssueSearchOptions) UnmarshalBinary(b []byte) error {
	var res UserIssueSearchOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
