// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UserPhoto User photo object
// swagger:model User photo
type UserPhoto struct {

	// Photo in byte array
	// Required: true
	// Format: byte
	Photo *strfmt.Base64 `json:"photo"`

	// Mime type of user photo. Eg .bmp, .jpg etc
	// Required: true
	PhotoMimeType *string `json:"photoMimeType"`
}

// Validate validates this user photo
func (m *UserPhoto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePhoto(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePhotoMimeType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UserPhoto) validatePhoto(formats strfmt.Registry) error {

	if err := validate.Required("photo", "body", m.Photo); err != nil {
		return err
	}

	return nil
}

func (m *UserPhoto) validatePhotoMimeType(formats strfmt.Registry) error {

	if err := validate.Required("photoMimeType", "body", m.PhotoMimeType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UserPhoto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserPhoto) UnmarshalBinary(b []byte) error {
	var res UserPhoto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
