// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ValidationStatus Validation Status DTO object
// swagger:model Validation Status
type ValidationStatus struct {

	// Validation status message
	// Required: true
	Msg *string `json:"msg"`

	// Indicates whether validation was successful
	// Required: true
	Valid *bool `json:"valid"`
}

// Validate validates this validation status
func (m *ValidationStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMsg(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValid(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ValidationStatus) validateMsg(formats strfmt.Registry) error {

	if err := validate.Required("msg", "body", m.Msg); err != nil {
		return err
	}

	return nil
}

func (m *ValidationStatus) validateValid(formats strfmt.Registry) error {

	if err := validate.Required("valid", "body", m.Valid); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ValidationStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ValidationStatus) UnmarshalBinary(b []byte) error {
	var res ValidationStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
