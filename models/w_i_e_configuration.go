// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// WIEConfiguration WebInspect enterprise configuration object
// swagger:model WIE Configuration
type WIEConfiguration struct {

	// WebInspect Enterprise url
	// Required: true
	WieInstanceURL *string `json:"wieInstanceUrl"`

	// Set to true if WebInspect Enterprise is registered
	// Required: true
	WieRegistered *bool `json:"wieRegistered"`
}

// Validate validates this w i e configuration
func (m *WIEConfiguration) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateWieInstanceURL(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWieRegistered(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WIEConfiguration) validateWieInstanceURL(formats strfmt.Registry) error {

	if err := validate.Required("wieInstanceUrl", "body", m.WieInstanceURL); err != nil {
		return err
	}

	return nil
}

func (m *WIEConfiguration) validateWieRegistered(formats strfmt.Registry) error {

	if err := validate.Required("wieRegistered", "body", m.WieRegistered); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *WIEConfiguration) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WIEConfiguration) UnmarshalBinary(b []byte) error {
	var res WIEConfiguration
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
